<?xml version='1.0' encoding='UTF-8'?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://mx.agarcia.ea/Canonical/Commons/Persons/v1" xmlns:base="http://mx.agarcia.ea/Canonical/Commons/Persons/v1" xmlns:enums="http://mx.agarcia.ea/Canonical/Commons/Enums/v1" xmlns:loc="http://mx.agarcia.ea/Canonical/Commons/LocationsCommon/v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
   <xs:import schemaLocation="CommonEnums.xsd" namespace="http://mx.agarcia.ea/Canonical/Commons/Enums/v1"/>
   <xs:import schemaLocation="LocationCommonSchema.xsd" namespace="http://mx.agarcia.ea/Canonical/Commons/LocationsCommon/v1"/>
   <xs:simpleType name="GenderTypeCode">
      <xs:union memberTypes="base:GenderTypeCodeEnumeration enums:TypeCodeExtension"/>
   </xs:simpleType>
   <xs:simpleType name="GenderTypeCodeEnumeration">
      <xs:restriction base="xs:NMTOKEN">
         <xs:enumeration value="Male"/>
         <xs:enumeration value="Female"/>
         <xs:enumeration value="Boy"/>
         <xs:enumeration value="Girl"/>
         <xs:enumeration value="Men"/>
         <xs:enumeration value="Women"/>
         <xs:enumeration value="Unisex"/>
         <xs:enumeration value="Unknown"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="PersonalIdentificationTypeCode">
      <xs:union memberTypes="base:PersonalIdentificationTypeCodeEnumeration enums:TypeCodeExtension"/>
   </xs:simpleType>
   <xs:simpleType name="PersonalIdentificationTypeCodeEnumeration">
      <xs:restriction base="xs:NMTOKEN">
         <xs:enumeration value="AccountID"/>
         <xs:enumeration value="DUNS"/>
         <xs:enumeration value="GLN"/>
         <xs:enumeration value="StoreID"/>
         <xs:enumeration value="TaxID"/>
         <xs:enumeration value="DriversLicense"/>
         <xs:enumeration value="BusinessID"/>
         <xs:enumeration value="MilitaryID"/>
         <xs:enumeration value="Passport"/>
         <xs:enumeration value="CreditCard"/>
         <xs:enumeration value="NationalIdentityCard"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="WorkerCommonData">
      <xs:sequence>
         <xs:element form="qualified" name="WorkerID" type="xs:string"/>
         <xs:element form="qualified" minOccurs="0" name="Name">
            <xs:complexType>
               <xs:complexContent>
                  <xs:extension base="base:NameCommonData"/>
               </xs:complexContent>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="NameTypeCode">
      <xs:union memberTypes="base:NameTypeCodeEnumeration enums:TypeCodeExtension"/>
   </xs:simpleType>
   <xs:simpleType name="NameTypeCodeEnumeration">
      <xs:restriction base="xs:NMTOKEN">
         <xs:enumeration value="GivenName"/>
         <xs:enumeration value="OtherGivenName"/>
         <xs:enumeration value="FamilyName"/>
         <xs:enumeration value="Patronymic"/>
         <xs:enumeration value="Nickname"/>
         <xs:enumeration value="Alias"/>
         <xs:enumeration value="Initial"/>
         <xs:enumeration value="PreferredName"/>
         <xs:enumeration value="Prefecture"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="NameCommonData">
      <xs:annotation>
         <xs:documentation>Approved - Name Common Data </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element form="qualified" minOccurs="0" name="Salutation">
            <xs:annotation>
               <xs:documentation>Extra words that don't form part of the person's
						name but are
						normally printed before the FirstName as a courtesy
						title. For instance,
						Mr.
						Ms., Miss, Dr., Prof. etc.
					</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:simpleContent>
                  <xs:extension base="xs:string">
                     <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer" use="optional"/>
                  </xs:extension>
               </xs:simpleContent>
            </xs:complexType>
         </xs:element>
         <xs:element form="qualified" maxOccurs="unbounded" minOccurs="0" name="Name">
            <xs:annotation>
               <xs:documentation>The individual parts of the name
					</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:simpleContent>
                  <xs:extension base="xs:string">
                     <xs:attribute form="unqualified" name="Location" type="loc:LocationTypeCode"/>
                     <xs:attribute form="unqualified" name="TypeCode" type="base:NameTypeCode"/>
                     <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer" use="optional"/>
                  </xs:extension>
               </xs:simpleContent>
            </xs:complexType>
         </xs:element>
         <xs:element form="qualified" minOccurs="0" name="Suffix">
            <xs:annotation>
               <xs:documentation>Extra words that don't form part of the person's
						name but are
						normally printed after the LastName to help identify
						the person. Example
						values include, Sr, Jr, III
					</xs:documentation>
            </xs:annotation>
            <xs:complexType>
               <xs:simpleContent>
                  <xs:extension base="xs:string">
                     <xs:attribute form="unqualified" name="RelativeOrder" type="xs:integer" use="optional"/>
                  </xs:extension>
               </xs:simpleContent>
            </xs:complexType>
         </xs:element>
         <xs:element form="qualified" name="FullName" type="xs:string">
            <xs:annotation>
               <xs:documentation>assembled out of salutation(s), name(s), and
						suffix(s)
					</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element form="qualified" minOccurs="0" name="SortingName" type="xs:string">
            <xs:annotation>
               <xs:documentation>A culturally sensitive version of the person's
						name that is
						used when producing a sorted list of names. Examples:
						Jones, W S,
						McGrigor,
						S F, Tryggvi, T
					</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element form="qualified" minOccurs="0" name="MailingName" type="xs:string">
            <xs:annotation>
               <xs:documentation>A culturally sensitive version of the person's
						name that is
						used when contacting them Examples: Bill Jones, Stuey
						McGrigor, Trygvi
						Thordarson
					</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element form="qualified" minOccurs="0" name="OfficialName" type="xs:string">
            <xs:annotation>
               <xs:documentation>A culturally sensitive version of the person's
						name that is
						used for all legal documents. Examples: William
						Stephen Jones, Stuart
						Fergus
						McGrigor, Tryggvi Magnus Thordarson
					</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="TelephoneTypeCode">
      <xs:union memberTypes="base:TelephoneTypeCodeEnumeration enums:TypeCodeExtension"/>
   </xs:simpleType>
   <xs:simpleType name="TelephoneTypeCodeEnumeration">
      <xs:restriction base="xs:NMTOKEN">
         <xs:enumeration value="Home"/>
         <xs:enumeration value="Home2"/>
         <xs:enumeration value="Mobile"/>
         <xs:enumeration value="Work"/>
         <xs:enumeration value="Work2"/>
         <xs:enumeration value="WorkFax"/>
         <xs:enumeration value="HomeFax"/>
         <xs:enumeration value="Pager"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="TelephoneCommonData">
      <xs:annotation>
         <xs:documentation>Approved - Telephone Common Data May be home, cell, business, fax,
                pager, â€¦ (Repeatable)</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element form="qualified" name="FullTelephoneNumber" type="xs:string">
            <xs:annotation>
               <xs:documentation>The telephone number assembled from ITU Country Code, Area
                        Code, Local Number and extension</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element form="qualified" minOccurs="0" name="AreaCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>A code that identifies a geographic grouping of telephone
                        numbers within the US and Canada</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element form="qualified" minOccurs="0" name="LocalNumber" type="xs:string"/>
         <xs:element form="qualified" minOccurs="0" name="ExtensionNumber" type="xs:string">
            <xs:annotation>
               <xs:documentation>Addtional numbers required to reach a person, extension, or
                        voice mailbox</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element form="qualified" minOccurs="0" name="ITUCountryCode" type="xs:string">
            <xs:annotation>
               <xs:documentation>A code assigned by the ITU representing a country or other
                        region International Telephone Unit</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
      <xs:attribute default="true" form="unqualified" name="PrimaryFlag" type="xs:boolean" use="optional">
         <xs:annotation>
            <xs:documentation>Indicates this is the primary phone number</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute default="Home" form="unqualified" name="TypeCode" type="base:TelephoneTypeCode" use="optional">
         <xs:annotation>
            <xs:documentation>A category or telephone (number) types (cell, fax, voice,
                    etc.)Enumeration - Mobile, Office, Home, Fax</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:simpleType name="EMailTypeCode">
      <xs:union memberTypes="base:EMailTypeCodeEnumeration enums:TypeCodeExtension"/>
   </xs:simpleType>
   <xs:simpleType name="EMailTypeCodeEnumeration">
      <xs:restriction base="xs:NMTOKEN">
         <xs:enumeration value="Home"/>
         <xs:enumeration value="Work"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:complexType name="EMailCommonData">
      <xs:sequence>
         <xs:element form="qualified" name="EMailAddress" type="xs:string">
            <xs:annotation>
               <xs:documentation>An electronic address for sending messages</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
      <xs:attribute default="true" form="unqualified" name="PrimaryFlag" type="xs:boolean" use="optional">
         <xs:annotation>
            <xs:documentation>Indicates this is the primary email contact</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute default="Home" form="unqualified" name="TypeCode" type="base:EMailTypeCode" use="optional"/>
   </xs:complexType>
</xs:schema>
