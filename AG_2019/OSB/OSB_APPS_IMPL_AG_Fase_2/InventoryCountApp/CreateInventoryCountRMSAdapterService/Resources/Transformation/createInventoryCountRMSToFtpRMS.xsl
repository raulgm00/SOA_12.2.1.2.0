<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:tns="http://www.agarcia.mx/InventoryCount" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:ns0="http://www.agarcia.mx/EnterpriseObjects/Inventory" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:com="http://www.agarcia.mx/EnterpriseObjects/Common" xmlns:ns1="http://www.agarcia.mx/EnterpriseObjects/Custom" xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../../../MetaData/Components/EnterpriseObjectLibrary/EBO/Inventory/InventoryEBM.xsd"/>
            <oracle-xsl-mapper:rootElement name="CreateInventoryEBM" namespace="http://www.agarcia.mx/EnterpriseObjects/Inventory"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../Schema/FtpRMSFile.xsd"/>
            <oracle-xsl-mapper:rootElement name="FileRMS" namespace="http://www.agarcia.mx/InventoryCount"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [WED SEP 02 18:22:06 CDT 2020].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:FileRMS>
         <tns:FHEAD>
            <tns:LineId>
               <!--xsl:value-of select="number (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID )"/-->
               <xsl:value-of select="substring (concat ('0000000000', /ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID ), string-length (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID) + 1, 10 )"/>
            </tns:LineId>
            <tns:TranslatorId>
               <xsl:value-of select="/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/com:Identification/com:ApplicationObjectReference/com:ApplicationName"/>
            </tns:TranslatorId>
            <tns:FileCreateDate>
               <!--xsl:value-of select="/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:EmissionDate"/-->
               <xsl:value-of select="xp20:format-dateTime (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:EmissionDate, &quot;[Y0001][M01][D01][H01][m01][s01]&quot; )"/>
            </tns:FileCreateDate>
            <tns:StockTakeDate>
               <!--xsl:value-of select="/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:DueDate"/-->
               <xsl:value-of select="xp20:format-dateTime (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:DueDate, &quot;[Y0001][M01][D01][H01][m01][s01]&quot; )"/>
            </tns:StockTakeDate>
            <tns:CycleCount>
               <!--xsl:value-of select="/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/com:Identification/com:ID"/-->
               <xsl:value-of select="substring (concat ('00000000', /ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/com:Identification/com:ID ), string-length (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/com:Identification/com:ID) + 1, 10 )"/>
            </tns:CycleCount>
            <tns:LocationType>
               <xsl:value-of select="/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:ShipFromPartyReference/com:Name"/>
            </tns:LocationType>
            <tns:Location>
               <!--xsl:value-of select="number (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:ShipFromPartyReference/com:LocationId )"/-->
               <xsl:value-of select="substring (concat ('0000000000', /ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:ShipFromPartyReference/com:LocationId ), string-length (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:ShipFromPartyReference/com:LocationId) + 1, 10 )"/>
            </tns:Location>
         </tns:FHEAD>
         <xsl:for-each select="/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:InventoryLine">
            <tns:FDETL>
               <tns:LineId>
                  <!--xsl:value-of select="number (com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID )"/-->
                  <xsl:value-of select="substring (concat ('0000000000', com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID ), string-length (com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID) + 1, 10 )"/>
               </tns:LineId>
               <tns:ItemType>
                  <xsl:value-of select="ns0:TransactionTypeCode"/>
               </tns:ItemType>
               <tns:ItemValue>
                  <!--xsl:value-of select="com:Identification/com:ID"/-->
                  <xsl:value-of select="translate (substring (concat ( com:Identification/com:ID , '*************************' ), 1 , 25 ), '*', ' ') "/>
               </tns:ItemValue>
               <tns:Quantity>
                  <!--xsl:value-of select="ns0:Quantity"/-->
                  <xsl:value-of select="concat(substring (concat ('00000000', substring-before(ns0:Quantity,'.') ), string-length (substring-before(ns0:Quantity,'.')) + 1, 8 ),translate (substring (concat ( substring-after(ns0:Quantity,'.') , '****' ), 1 , 4 ), '*', '0' ))"/>
               </tns:Quantity>
            </tns:FDETL>
         </xsl:for-each>
         <tns:FTAIL>
            <tns:LineId>
               <!--xsl:value-of select="number (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:Document/com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID )"/-->
               <xsl:value-of select="substring (concat ('0000000000', /ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:Document/com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID ), string-length (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:Document/com:Identification/com:ApplicationObjectReference/com:ApplicationObjectID) + 1, 10 )"/>
            </tns:LineId>
            <tns:Lines>
               <!--xsl:value-of select="/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:TotalLines"/-->
               <xsl:value-of select="substring (concat ('0000000000', /ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:TotalLines ), string-length (/ns0:CreateInventoryEBM/ns0:DataArea/ns0:CreateInventory/ns0:TotalLines) + 1, 10 )"/>
            </tns:Lines>
         </tns:FTAIL>
      </tns:FileRMS>
   </xsl:template>
</xsl:stylesheet>