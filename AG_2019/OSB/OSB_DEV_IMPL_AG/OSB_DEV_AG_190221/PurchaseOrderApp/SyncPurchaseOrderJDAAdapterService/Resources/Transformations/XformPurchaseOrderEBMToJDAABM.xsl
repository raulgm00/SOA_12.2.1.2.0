<xsl:stylesheet version="1.0" exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:ns0="http://www.agarcia.mx/EnterpriseObjects/PurchaseOrder" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:tns="http://agarcia.mx/JDA/SycnPurchaseOrder" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:com="http://www.agarcia.mx/EnterpriseObjects/Common" xmlns:ns1="http://www.agarcia.mx/EnterpriseObjects/Custom" xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd" xmlns:ns3="http://agarcia.com.mx/JDA/SycnPurchaseOrder">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../../../../MetaData/Components/EnterpriseObjectLibrary/EBO/PurchaseOrder/PurchaseOrderEBM.xsd"/>
        <oracle-xsl-mapper:rootElement name="SyncPurchaseOrderEBM" namespace="http://www.agarcia.mx/EnterpriseObjects/PurchaseOrder"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/PurchaseOrder_JDA_ReqMsg.xsd"/>
        <oracle-xsl-mapper:rootElement name="PurchaseOrder" namespace="http://agarcia.mx/JDA/SycnPurchaseOrder"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [SAT NOV 07 09:39:31 CST 2020].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:variable name="APAKEY" select="oraext:sequence-next-val (&quot;MDMSOA.MDM_PO_JDA_APAKEY&quot;, &quot;jdbc/MDMSOA&quot; )"/>
  <xsl:template match="/">
    <tns:PurchaseOrder>
      <xsl:for-each select="/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:PurchaseOrderLine">
        <tns:topLevelArray>
          <tns:APAKEY>
            <xsl:value-of select="$APAKEY"/>
          </tns:APAKEY>
          <xsl:choose>
            <xsl:when test="string-length (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Organization/com:Identification/com:ID ) > 0">
              <tns:APWHSE>
                <xsl:value-of select="/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Organization/com:Identification/com:ID"/>
              </tns:APWHSE>
            </xsl:when>
            <xsl:otherwise>
              <tns:APWHSE>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APWHSE>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:PurchaseOrderLine/ns0:ItemReference/com:ID ) > 0">
              <tns:APSKU>
                <xsl:value-of select="ns0:ItemReference/com:ID"/>
              </tns:APSKU>
            </xsl:when>
            <xsl:otherwise>
              <tns:APSKU>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APSKU>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Organization/com:Identification/com:ID ) > 0 and /ns0:SyncPurchaseOrderEBM/ns0:Header/com:Interface = DVMFunctions:lookupValue (&quot;MetaData/dvm/PURCHASEORDER_CONFIGURATION_PROPERTIES&quot;, &quot;COMMON&quot;, &quot;INTERFACE&quot;, &quot;VALUE&quot;, &quot;No value found&quot; )">
              <tns:APLOC>
                <xsl:value-of select="/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Organization/com:Identification/com:ID"/>
              </tns:APLOC>
            </xsl:when>
            <xsl:when test="string-length (ns0:VendorLocation/com:LocationId ) > 0 and /ns0:SyncPurchaseOrderEBM/ns0:Header/com:Interface = &quot;ALLOCATION&quot;">
            <tns:APLOC>
                <xsl:value-of select="ns0:VendorLocation/com:LocationId"/>
              </tns:APLOC>
            </xsl:when>
            <xsl:otherwise>
              <tns:APLOC>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APLOC>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length (ns0:Quantity ) > 0">
              <tns:APUNIT>
                <xsl:value-of select="ns0:Quantity"/>
              </tns:APUNIT>
            </xsl:when>
            <xsl:otherwise>
              <tns:APUNIT>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APUNIT>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length(/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:EffectiveTimePeriod/com:EndDateTime ) > 0">
              <tns:APSDAT>
                <xsl:value-of select="xp20:format-dateTime (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:EffectiveTimePeriod/com:EndDateTime, &quot;[Y01][M01][D01]&quot; )"/>
              </tns:APSDAT>
            </xsl:when>
            <xsl:otherwise>
              <tns:APSDAT>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APSDAT>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length(/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:EffectiveTimePeriod/com:EndDateTime ) > 0">
              <tns:APCDAT>
                <xsl:value-of select="xp20:format-dateTime (xp20:add-dayTimeDuration-to-dateTime (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:EffectiveTimePeriod/com:EndDateTime, &quot;P1D&quot; ),&quot;[Y01][M01][D01]&quot;)"/>
              </tns:APCDAT>
            </xsl:when>
            <xsl:otherwise>
              <tns:APCDAT>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APCDAT>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length(/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:EffectiveTimePeriod/com:StartDateTime ) > 0">
              <tns:APBSDT>
                <xsl:value-of select="xp20:format-dateTime (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:EffectiveTimePeriod/com:StartDateTime,&quot;[Y01][M01][D01]&quot;)"/>
              </tns:APBSDT>
            </xsl:when>
            <xsl:otherwise>
              <tns:APBSDT>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APBSDT>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length (substring (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Comments, 1, 50 ) ) > 0">
              <tns:APNOT1>
                <xsl:value-of select="substring (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Comments, 1, 50 )"/>
              </tns:APNOT1>
            </xsl:when>
            <xsl:otherwise>
              <tns:APNOT1>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APNOT1>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length (substring (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Comments, 51, 50 ) ) > 0">
              <tns:APNOT2>
                <xsl:value-of select="substring (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Comments, 51, 50 )"/>
              </tns:APNOT2>
            </xsl:when>
            <xsl:otherwise>
              <tns:APNOT2>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APNOT2>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length (substring (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Comments, 101, 50 ) ) > 0">
              <tns:APNOT3>
                <xsl:value-of select="substring (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Comments, 101, 50 )"/>
              </tns:APNOT3>
            </xsl:when>
            <xsl:otherwise>
              <tns:APNOT3>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APNOT3>
            </xsl:otherwise>
          </xsl:choose>
          <tns:APCMT1>
            <xsl:value-of select="&quot;''&quot;"/>
          </tns:APCMT1>
          <tns:APCMT2>
            <xsl:value-of select="&quot;''&quot;"/>
          </tns:APCMT2>
          <tns:APCMT3>
            <xsl:value-of select="&quot;''&quot;"/>
          </tns:APCMT3>
          <xsl:choose>
            <xsl:when test="string-length(/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:BudgetDate ) > 0">
              <tns:APOTHER>
                <xsl:value-of select="xp20:format-dateTime (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:BudgetDate, &quot;[Y01][M01][D01]&quot; )"/>
              </tns:APOTHER>
            </xsl:when>
            <xsl:otherwise>
              <tns:APOTHER>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APOTHER>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length (/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Promotion ) > 0">
              <tns:APPROMO>
                <xsl:value-of select="/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:Promotion"/>
              </tns:APPROMO>
            </xsl:when>
            <xsl:otherwise>
              <tns:APPROMO>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:APPROMO>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="string-length(/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:PurchaseOrderID ) > 0">
              <tns:PONUMBER>
                <xsl:value-of select="/ns0:SyncPurchaseOrderEBM/ns0:DataArea/ns0:SyncPurchaseOrder/ns0:PurchaseOrderID"/>
              </tns:PONUMBER>
            </xsl:when>
            <xsl:otherwise>
              <tns:PONUMBER>
                <xsl:value-of select="&quot;''&quot;"/>
              </tns:PONUMBER>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="/ns0:SyncPurchaseOrderEBM/ns0:Header/com:Operation = DVMFunctions:lookupValue (&quot;MetaData/dvm/PURCHASEORDER_CONFIGURATION_PROPERTIES&quot;, &quot;COMMON&quot;, &quot;OP_CREATE&quot;, &quot;VALUE&quot;, &quot;No value found&quot; )">
              <tns:ESTATUS>
                <xsl:value-of select="DVMFunctions:lookupValue (&quot;MetaData/dvm/PURCHASEORDER_CONFIGURATION_PROPERTIES&quot;, &quot;COMMON&quot;, &quot;ESTATUS_CREATE&quot;, &quot;VALUE&quot;, &quot;No value found&quot; )"/>
              </tns:ESTATUS>
            </xsl:when>
            <xsl:otherwise>
              <tns:ESTATUS>
                <xsl:value-of select="DVMFunctions:lookupValue (&quot;MetaData/dvm/PURCHASEORDER_CONFIGURATION_PROPERTIES&quot;, &quot;COMMON&quot;, &quot;ESTATUS_UPDATE&quot;, &quot;VALUE&quot;, &quot;No value found&quot; )"/>
              </tns:ESTATUS>
            </xsl:otherwise>
          </xsl:choose>
        </tns:topLevelArray>
      </xsl:for-each>
    </tns:PurchaseOrder>
  </xsl:template>
</xsl:stylesheet>