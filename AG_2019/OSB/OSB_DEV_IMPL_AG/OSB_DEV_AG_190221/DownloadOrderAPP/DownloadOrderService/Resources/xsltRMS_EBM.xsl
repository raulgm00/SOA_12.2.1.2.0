<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:tns="http://www.agarcia.mx/EnterpriseObjects/DownloadOrder" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:ns0="http://TargetNamespace.com/ftpDownloarOrder" xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd" xmlns:com="http://www.agarcia.mx/EnterpriseObjects/Common" xmlns:ns1="http://www.agarcia.mx/EnterpriseObjects/Custom">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="FileEdi.xsd"/>
            <oracle-xsl-mapper:rootElement name="bodyFile" namespace="http://TargetNamespace.com/ftpDownloarOrder"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../../MetaData/Components/EnterpriseObjectLibrary/EBO/PurchaseOrder/DownloadOrderEBM.xsd"/>
            <oracle-xsl-mapper:rootElement name="CreateDownloadOrderEBM" namespace="http://www.agarcia.mx/EnterpriseObjects/DownloadOrder"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [TUE SEP 15 20:21:21 CDT 2020].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:CreateDownloadOrderEBM>
         <tns:Header>
            <com:RequestDateTime>
               <xsl:value-of select="xp20:format-dateTime (/ns0:bodyFile/ns0:FHEAD/ns0:CurrentDate, &quot;[Y0001][M01][D01][H01][m01][s01]&quot; )"/>
            </com:RequestDateTime>
         </tns:Header>
<xsl:for-each select="/ns0:bodyFile/ns0:FHEAD">
  <xsl:for-each select="/ns0:bodyFile/ns0:TORDR">
      <xsl:variable name="banderaTORDR" select="ns0:TransactionNum"/>
      <tns:DataArea>
      <tns:CreateDownloadOrder>
                      
          <xsl:for-each select="/ns0:bodyFile/ns0:TITEM">
              <xsl:variable name="banderaTITEM" select="ns0:TransactionNum"/>
              <xsl:if test="ns0:TransactionNum = $banderaTORDR">
              <tns:Identification>
                        <com:ID>
                           <xsl:value-of select="ns0:Item"/>
                        </com:ID>
                     </tns:Identification>
                           <tns:PurchaseOrderLine>
                              <tns:ItemDescription>
                                 <xsl:value-of select="ns0:FreeFormDesc"/>
                              </tns:ItemDescription>
                           </tns:PurchaseOrderLine>
                           <tns:Supplier>
                     <com:LegalEntityReference>
                     <com:TaxPayerRegistrationNumberID>
                              <xsl:value-of select="ns0:VendorCatalogNum"/>
                           </com:TaxPayerRegistrationNumberID>
                     </com:LegalEntityReference>
                     </tns:Supplier>
                <xsl:variable name="IdsumaItem" select="number(ns0:LineId)+1"/>
                          
                           <xsl:for-each select="/ns0:bodyFile/ns0:TSHIP">
                 <xsl:variable name="Idtship" select="number(ns0:LineId)"/>
                  <!--numeroIdtitem:<xsl:value-of select="$IdsumaItem"/>-->
                  <!--numeroIdtship:<xsl:value-of select="$Idtship"/>-->
                  <xsl:variable name="banderaTSHIP" select="ns0:TransactionNum"/>
                  <xsl:if test="ns0:TransactionNum = $banderaTORDR">
                   
                   <xsl:if test="$IdsumaItem = $Idtship">
                   <tns:Promotion>
                              <xsl:value-of select="ns0:ItemLocDiscounts"/>
                   </tns:Promotion>
                   <tns:PurchaseOrderLine>
                                       <tns:Quantity>
                                          <xsl:value-of select="ns0:NewQuantity"/>
                                       </tns:Quantity>
                                       <tns:UnitCost>
                                 <xsl:value-of select="ns0:NewUnitCost"/>
                              </tns:UnitCost>
                   </tns:PurchaseOrderLine>
                    <tns:PayLocation>
                              <com:TypeCode>
                                 <xsl:value-of select="ns0:LocationType"/>
                              </com:TypeCode>
                           </tns:PayLocation>
                   <tns:ShipLocation>
                        <com:LocationId>
                           <xsl:value-of select="ns0:ShipToLocation"/>
                        </com:LocationId>
                                    </tns:ShipLocation>
                   </xsl:if>
               
                  </xsl:if>
              </xsl:for-each>
              </xsl:if>
          </xsl:for-each>
                     <tns:ProcessID>
                        <xsl:value-of select="ns0:OrderNum"/>
                     </tns:ProcessID>
                     <tns:PurchaseOrderType>
                        <xsl:value-of select="ns0:NewPurchaseDate"/>
                     </tns:PurchaseOrderType>
                     <tns:PaymentDate>
                        <xsl:value-of select="ns0:OrderWrittenDate"/>
                     </tns:PaymentDate>
                     <tns:EffectiveDate>
                        <xsl:value-of select="ns0:NewNotAfterDate"/>
                     </tns:EffectiveDate>
                     <tns:Supplier>
                        <com:Identification>
                           <com:ID>
                              <xsl:value-of select="ns0:Supplier"/>
                           </com:ID>
                        </com:Identification>
                        <com:LegalEntityReference>
                           <com:Name>
                              <xsl:value-of select="ns0:SupplierDUNSNum"/>
                           </com:Name>
                           <com:Description>
                              <xsl:value-of select="ns0:SupplierDUNSLocation"/>
                           </com:Description>
                        </com:LegalEntityReference>
                     </tns:Supplier>
                     <tns:TermDescription>
                        <xsl:value-of select="ns0:NewTermsDesc"/>
                     </tns:TermDescription>
                     <tns:Comments>
                        <xsl:value-of select="ns0:NewCommentDesc"/>
                     </tns:Comments>
                  </tns:CreateDownloadOrder>
      </tns:DataArea>
  </xsl:for-each>
</xsl:for-each>

      </tns:CreateDownloadOrderEBM>
   </xsl:template>
</xsl:stylesheet>