
package mx.agarcia.ea.utils.msoffice;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0-b170214.1743
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "ExcelParsingUtilService", targetNamespace = "http://msoffice.utils.ea.agarcia.mx/",
                  wsdlLocation =
                  "http://uat-messaging.agarcia.com.mx:8003/AGMSOfficeUtils/ExcelParsingUtilPort?WSDL#%7Bhttp%3A%2F%2Fmsoffice.utils.ea.agarcia.mx%2F%7DExcelParsingUtilService")
public class ExcelParsingUtilService extends Service {

    private final static URL EXCELPARSINGUTILSERVICE_WSDL_LOCATION;
    private final static WebServiceException EXCELPARSINGUTILSERVICE_EXCEPTION;
    private final static QName EXCELPARSINGUTILSERVICE_QNAME =
        new QName("http://msoffice.utils.ea.agarcia.mx/", "ExcelParsingUtilService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url =
                new URL("http://uat-messaging.agarcia.com.mx:8003/AGMSOfficeUtils/ExcelParsingUtilPort?WSDL#%7Bhttp%3A%2F%2Fmsoffice.utils.ea.agarcia.mx%2F%7DExcelParsingUtilService");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        EXCELPARSINGUTILSERVICE_WSDL_LOCATION = url;
        EXCELPARSINGUTILSERVICE_EXCEPTION = e;
    }

    public ExcelParsingUtilService() {
        super(__getWsdlLocation(), EXCELPARSINGUTILSERVICE_QNAME);
    }

    public ExcelParsingUtilService(WebServiceFeature... features) {
        super(__getWsdlLocation(), EXCELPARSINGUTILSERVICE_QNAME, features);
    }

    public ExcelParsingUtilService(URL wsdlLocation) {
        super(wsdlLocation, EXCELPARSINGUTILSERVICE_QNAME);
    }

    public ExcelParsingUtilService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, EXCELPARSINGUTILSERVICE_QNAME, features);
    }

    public ExcelParsingUtilService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ExcelParsingUtilService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ExcelParsingUtil
     */
    @WebEndpoint(name = "ExcelParsingUtilPort")
    public ExcelParsingUtil getExcelParsingUtilPort() {
        return super.getPort(new QName("http://msoffice.utils.ea.agarcia.mx/", "ExcelParsingUtilPort"),
                             ExcelParsingUtil.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ExcelParsingUtil
     */
    @WebEndpoint(name = "ExcelParsingUtilPort")
    public ExcelParsingUtil getExcelParsingUtilPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://msoffice.utils.ea.agarcia.mx/", "ExcelParsingUtilPort"),
                             ExcelParsingUtil.class, features);
    }

    private static URL __getWsdlLocation() {
        if (EXCELPARSINGUTILSERVICE_EXCEPTION != null) {
            throw EXCELPARSINGUTILSERVICE_EXCEPTION;
        }
        return EXCELPARSINGUTILSERVICE_WSDL_LOCATION;
    }

}
