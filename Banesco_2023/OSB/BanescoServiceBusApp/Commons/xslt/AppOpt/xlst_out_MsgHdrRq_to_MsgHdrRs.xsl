<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:ns0="http://xmlns.banesco.com/appopt/AOptCommon_V1.0" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../xsd/AppOpt/AOptCommon/AOptCommon_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="MsgHdrRq" namespace="http://xmlns.banesco.com/appopt/AOptCommon_V1.0"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../xsd/AppOpt/AOptCommon/AOptCommon_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="MsgHdrRs" namespace="http://xmlns.banesco.com/appopt/AOptCommon_V1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.1.0(XSLT Build 160608.1900.0023) AT [THU MAY 04 10:29:14 COT 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="ResponseId"/>
   <xsl:template match="/">
      <ns0:MsgHdrRs>
         <ns0:ClientDt>
            <xsl:value-of select="/*:MsgHdrRq/ns0:ClientDt"/>
         </ns0:ClientDt>
         <ns0:MsgPriority>
            <xsl:value-of select="/*:MsgHdrRq/ns0:MsgPriority"/>
         </ns0:MsgPriority>
         <ns0:RequestId>
            <xsl:value-of select="/*:MsgHdrRq/ns0:RequestId"/>
         </ns0:RequestId>
         <xsl:choose>
            <xsl:when test="string-length ($ResponseId ) > 0">
               <ns0:ResponseId>
                  <xsl:value-of select="$ResponseId"/>
               </ns0:ResponseId>
            </xsl:when>
            <xsl:otherwise>
               <ns0:ResponseId>
                  <xsl:value-of select="UUIDUserFunction:uuid ( )"/>
               </ns0:ResponseId>
            </xsl:otherwise>
         </xsl:choose>
         <ns0:RqdOper>
            <xsl:value-of select="//ns0:RqdOper"/>
         </ns0:RqdOper>
         <ns0:RqdService>
            <xsl:value-of select="//ns0:RqdService"/>
         </ns0:RqdService>
         <ns0:ServerDt>
            <xsl:value-of select="xp20:format-dateTime (xp20:current-dateTime(), &quot;[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]&quot; )"/>
         </ns0:ServerDt>
         <ns0:ClientApp>
            <ns0:ChannelId>
               <xsl:value-of select="/*:MsgHdrRq/ns0:ClientApp/ns0:ChannelId"/>
            </ns0:ChannelId>
            <ns0:Name>
               <xsl:value-of select="/*:MsgHdrRq/ns0:ClientApp/ns0:Name"/>
            </ns0:Name>
            <ns0:Org>
               <xsl:value-of select="/*:MsgHdrRq/ns0:ClientApp/ns0:Org"/>
            </ns0:Org>
            <ns0:UserId>
               <xsl:value-of select="/*:MsgHdrRq/ns0:ClientApp/ns0:UserId"/>
            </ns0:UserId>
            <ns0:UserType>
               <xsl:value-of select="/*:MsgHdrRq/ns0:ClientApp/ns0:UserType"/>
            </ns0:UserType>
         </ns0:ClientApp>
      </ns0:MsgHdrRs>
   </xsl:template>
</xsl:stylesheet>
