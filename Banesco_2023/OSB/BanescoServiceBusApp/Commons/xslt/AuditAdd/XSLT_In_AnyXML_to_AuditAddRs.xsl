<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="2.0" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:ns0="http://xmlns.banesco.com/appopt/AOptCommon_V1.0" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:tns="http://xmlns.banesco.com/eopt/AuditAdd_V1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:eoMsgHdr="http://xmlns.banesco.com/eo/MsgHdr_V1.0"
                xmlns:ns1="http://xmlns.banesco.com/eo/Common_V1.0" xmlns:fn="http://www.w3.org/2005/xpath-functions">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../xsd/AppOpt/AOptCommon/AOptCommon_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="MsgHdrRs" namespace="http://xmlns.banesco.com/appopt/AOptCommon_V1.0"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../xsd/EOpt/Common/AuditAdd/AuditAdd_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="AuditAddRq" namespace="http://xmlns.banesco.com/eopt/AuditAdd_V1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [FRI NOV 24 09:43:13 COT 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="varBody"/>
   <xsl:template match="/">
      <tns:AuditAddRq>
         <tns:MsgHdr>           
            <!-- VARCHAR2(150), dateTime Adaptador, not null -->
            <xsl:choose>
               <xsl:when test="xp20:matches(//ns0:ClientDt,'^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})')">
                  <ClientDt>
                     <xsl:value-of select="//ns0:ClientDt"/>
                  </ClientDt>
               </xsl:when>
               <xsl:otherwise>
                  <ClientDt>
                     <xsl:value-of select="current-dateTime()"/>
                  </ClientDt>
               </xsl:otherwise>
            </xsl:choose> 
            <!-- VARCHAR2(25 CHAR) -->
            <xsl:if test="//ns0:Destination/text()">
               <Destination>
                  <xsl:value-of select="//ns0:Destination"/>
               </Destination>
            </xsl:if>
            <!-- NUMBER(38) -->
            <xsl:if test="//ns0:MsgPriority/text()">
               <MsgPriority>
                  <xsl:value-of select="//ns0:MsgPriority"/>
               </MsgPriority>
            </xsl:if>
            <!-- VARCHAR2(50) not null-->
            <RequestId>
               <xsl:value-of select="//ns0:RequestId"/>
            </RequestId>
            <!-- VARCHAR2(50) -->
            <xsl:if test="//ns0:ResponseId/text()">
               <ResponseId>
                  <xsl:value-of select="//ns0:ResponseId"/>
               </ResponseId>
            </xsl:if>
            <!-- VARCHAR2(25 CHAR) -->
            <xsl:if test="//ns0:RqdOper/text()">
               <RqdOper>
                  <xsl:value-of select="//ns0:RqdOper"/>
               </RqdOper>
            </xsl:if>
            <!-- VARCHAR2(10 CHAR) -->
            <xsl:if test="//ns0:RqdOperType/text()">
               <RqdOperType>
                  <xsl:value-of select="substring(//ns0:RqdOperType,1,9)"/>
               </RqdOperType>
            </xsl:if>
            <!-- VARCHAR2(100) -->
            <xsl:if test="//ns0:RqdService/text()">
               <RqdService>
                  <xsl:value-of select="//ns0:RqdService"/>
               </RqdService>
            </xsl:if>
            <!-- TIMESTAMP(2) WITH TIME ZONE, not null -->
            <ServerDt>
               <xsl:value-of select='xp20:format-dateTime (xp20:current-dateTime ( ), "[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]" )'/>
            </ServerDt>
            <NetworkTrnData>
               <!-- VARCHAR2(35 CHAR) -->
               <xsl:if test="//ns0:NetworkTrnData/ns0:HostName/text()">
                  <HostName>
                     <xsl:value-of select="//ns0:NetworkTrnData/ns0:HostName"/>
                  </HostName>
               </xsl:if>
               <!-- VARCHAR2(16) -->
               <xsl:if test="//ns0:NetworkTrnData/ns0:IpAddress/text()">
                  <IpAddress>
                     <xsl:value-of select="//ns0:NetworkTrnData/ns0:IpAddress"/>
                  </IpAddress>
               </xsl:if>
               <!-- VARCHAR2(17) -->
               <xsl:if test="//ns0:NetworkTrnData/ns0:MacAddress/text()">
                  <MacAddress>
                     <xsl:value-of select="//ns0:NetworkTrnData/ns0:MacAddress"/>
                  </MacAddress>
               </xsl:if>
            </NetworkTrnData>
            <ClientApp>
               <!-- VARCHAR2(10 CHAR) not null-->
               <ChannelId>
                  <xsl:value-of select="substring(//ns0:ClientApp/ns0:ChannelId,1,9)"/>
               </ChannelId>
               <!-- VARCHAR2(25 CHAR) -->
               <xsl:if test="//ns0:ClientApp/ns0:Name/text()">
                  <Name>
                     <xsl:value-of select="//ns0:ClientApp/ns0:Name"/>
                  </Name>
               </xsl:if>
               <!-- VARCHAR2(25 CHAR) -->
               <xsl:if test="//ns0:ClientApp/ns0:Org/text()">
                  <Org>
                     <xsl:value-of select="//ns0:ClientApp/ns0:Org"/>
                  </Org>
               </xsl:if>
               <!-- VARCHAR2(20) not null -->
               <UserId>
                  <xsl:value-of select="//ns0:ClientApp/ns0:UserId"/>
               </UserId>
               <!-- VARCHAR2(10) -->
               <xsl:if test="//ns0:ClientApp/ns0:UserType/text()">
                  <UserType>
                     <xsl:value-of select="substring(//ns0:ClientApp/ns0:UserType,1,9)"/>
                  </UserType>
               </xsl:if>
               <!-- VARCHAR2(12) -->
               <xsl:if test="//ns0:ClientApp/ns0:Version/text()">
                  <Version>
                     <xsl:value-of select="substring(//ns0:ClientApp/ns0:Version,1,11)"/>
                  </Version>
               </xsl:if>
            </ClientApp>
         </tns:MsgHdr>
         <!-- NOT NULL CLOB -->
         <tns:contentXML>
            <xsl:value-of select="$varBody"/>
         </tns:contentXML>
      </tns:AuditAddRq>
   </xsl:template>
</xsl:stylesheet>
