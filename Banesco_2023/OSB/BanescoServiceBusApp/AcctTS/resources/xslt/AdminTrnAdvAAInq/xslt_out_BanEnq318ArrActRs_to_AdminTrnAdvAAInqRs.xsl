<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:tns="http://xmlns.banesco.com/eopt/AdminTrnAdvInq_V1.0" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:ns0="http://www.temenos.com/T24/ofs/Response" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:rescns="http://www.temenos.com/T24/ofs/ResponseCommon"
                xmlns:ns1="http://www.temenos.com/T24/ofs/BANENQ318ARRACTType"
                xmlns:eoStatus="http://xmlns.banesco.com/eo/Status_V1.0">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/backends/T24/resources/xsd/WSBANENQ318AAA/CONSULTATrama318AAAResponse.xsd"/>
            <oracle-xsl-mapper:rootElement name="BANENQ318ARRACTResponse" namespace="http://www.temenos.com/T24/ofs/Response"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/Account/AdminTrnAdvInq/AdminTrnAdvInq_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="AdminTrnAdvAAInqRs" namespace="http://xmlns.banesco.com/eopt/AdminTrnAdvInq_V1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [THU SEP 06 17:34:41 COT 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
    <xsl:variable name="statusCode"
        select='DVMFunctions:lookupValue ("Commons/dvm/StatusMappingBcknd", "T24", /ns0:BANENQ318ARRACTResponse/ResponseCommon/Status, "CNCODE", "M0006" )'/>
   <xsl:template match="/">
      <tns:AdminTrnAdvAAInqRs>
         <tns:Status>
           <eoStatus:StatusCode>
                   <xsl:value-of select="$statusCode"/>
               </eoStatus:StatusCode>
               <eoStatus:StatusDesc>
               <xsl:value-of select='DVMFunctions:lookupValue ("Commons/dvm/StatusMappingBcknd", "T24", /ns0:BANENQ318ARRACTResponse/ResponseCommon/Status, "CNDESC", "FALLO EN LA OPERACION" )'/>
               </eoStatus:StatusDesc>
            <eoStatus:AdditionalStatus>
               <xsl:if test="/ns0:BANENQ318ARRACTResponse/ResponseCommon/Status/text()">
                  <eoStatus:StatusCode>
                     <xsl:value-of select="/ns0:BANENQ318ARRACTResponse/ResponseCommon/Status"/>
                  </eoStatus:StatusCode>
               </xsl:if>
               <xsl:if test="/ns0:BANENQ318ARRACTResponse/ResponseCommon/Message/text()">
                  <eoStatus:StatusDesc>
                     <xsl:value-of select="/ns0:BANENQ318ARRACTResponse/ResponseCommon/Message"/>
                  </eoStatus:StatusDesc>
               </xsl:if>
            </eoStatus:AdditionalStatus>
         </tns:Status>
         <xsl:for-each select="/ns0:BANENQ318ARRACTResponse/BANENQ318ARRACT/gBANENQ318ARRACTDetailType/mBANENQ318ARRACTDetailType">
            <tns:Records>
           <xsl:if test="EstatusCtaoProducto/text()">
            <tns:AcctStatus>
               <xsl:value-of select="EstatusCtaoProducto"/>
            </tns:AcctStatus>
         </xsl:if>
         <xsl:if test="SaldoDisponible/text()">
            <tns:AvailAmt>
               <xsl:value-of select="SaldoDisponible"/>
            </tns:AvailAmt>
         </xsl:if>
         <xsl:if test="SignoValor/text()">
            <tns:AvailAmtSign>
               <xsl:value-of select="SignoValor"/>
            </tns:AvailAmtSign>
         </xsl:if>
         <xsl:if test="TipodeSucursal/text()">
            <tns:BranchType>
               <xsl:value-of select="TipodeSucursal"/>
            </tns:BranchType>
         </xsl:if>
         <xsl:if test="Canal/text()">
            <tns:Channel>
               <xsl:value-of select="Canal"/>
            </tns:Channel>
         </xsl:if>
         <xsl:if test="TipodeChequera/text()">
            <tns:ChkBookType>
               <xsl:value-of select="TipodeChequera"/>
            </tns:ChkBookType>
         </xsl:if>
         <xsl:if test="IDdeClienteRFC/text()">
            <tns:CustomerId>
               <xsl:value-of select="IDdeClienteRFC"/>
            </tns:CustomerId>
         </xsl:if>
         <xsl:if test="NombreClienteTitularCtaOrigen/text()">
            <tns:CustomerName>
               <xsl:value-of select="NombreClienteTitularCtaOrigen"/>
            </tns:CustomerName>
         </xsl:if>
         <xsl:if test="FlagEmpleadoCtaOrigen/text()">
            <tns:EmployeeAcct>
               <xsl:value-of select="FlagEmpleadoCtaOrigen"/>
            </tns:EmployeeAcct>
         </xsl:if>
         <xsl:if test="TipodeEmpleado/text()">
            <tns:EmployeeType>
               <xsl:value-of select="TipodeEmpleado"/>
            </tns:EmployeeType>
         </xsl:if>
         <xsl:if test="NoChequeFinal/text()">
            <tns:FinalChk>
               <xsl:value-of select="NoChequeFinal"/>
            </tns:FinalChk>
         </xsl:if>
         <xsl:if test="NoChequeInicial/text()">
            <tns:InitChk>
               <xsl:value-of select="NoChequeInicial"/>
            </tns:InitChk>
         </xsl:if>
         <xsl:if test="TipodeNovedad/text()">
            <tns:NewTypeCode>
               <xsl:value-of select="TipodeNovedad"/>
            </tns:NewTypeCode>
         </xsl:if>
         <xsl:if test="FechaAperturaCuenta/text()">
            <tns:OpenAcctDate>
               <xsl:value-of select="FechaAperturaCuenta"/>
            </tns:OpenAcctDate>
         </xsl:if>
         <xsl:if test="SucursalAperturaCuentaOrigen/text()">
            <tns:OpenBranch>
               <xsl:value-of select="SucursalAperturaCuentaOrigen"/>
            </tns:OpenBranch>
         </xsl:if>
         <xsl:if test="IDClienteRFC/text()">
            <tns:PersonalId>
               <xsl:value-of select="IDClienteRFC"/>
            </tns:PersonalId>
         </xsl:if>
         <xsl:if test="ValorPosterioralCambio/text()">
            <tns:PostValChange>
               <xsl:value-of select="ValorPosterioralCambio"/>
            </tns:PostValChange>
         </xsl:if>
         <xsl:if test="ValorAnterioralCambio/text()">
            <tns:PrevValChange>
               <xsl:value-of select="ValorAnterioralCambio"/>
            </tns:PrevValChange>
         </xsl:if>
         <xsl:if test="CodigodeProducto/text()">
            <tns:ProductCode>
               <xsl:value-of select="CodigodeProducto"/>
            </tns:ProductCode>
         </xsl:if>
         <xsl:if test="CodigodeSubproducto/text()">
            <tns:SubProdCode>
               <xsl:value-of select="CodigodeSubproducto"/>
            </tns:SubProdCode>
         </xsl:if>
         <xsl:if test="NumerodecuentaOrigen/text()">
            <tns:TxnAccount>
               <xsl:value-of select="NumerodecuentaOrigen"/>
            </tns:TxnAccount>
         </xsl:if>
         <xsl:if test="FechaTrx/text()">
            <tns:TxnDate>
               <xsl:value-of select="FechaTrx"/>
            </tns:TxnDate>
         </xsl:if>
         <xsl:if test="Id/text()">
            <tns:TxnRef>
               <xsl:value-of select="Id"/>
            </tns:TxnRef>
         </xsl:if>
         <xsl:if test="HoraTrx/text()">
            <tns:TxnTime>
               <xsl:value-of select="HoraTrx"/>
            </tns:TxnTime>
         </xsl:if>
         <xsl:if test="NombredeUsuario/text()">
            <tns:UserName>
               <xsl:value-of select="NombredeUsuario"/>
            </tns:UserName>
         </xsl:if>
         <xsl:if test="TipodeUsuario/text()">
            <tns:UserType>
               <xsl:value-of select="TipodeUsuario"/>
            </tns:UserType>
         </xsl:if>
            </tns:Records>
         </xsl:for-each>
      </tns:AdminTrnAdvAAInqRs>
   </xsl:template>
</xsl:stylesheet>
