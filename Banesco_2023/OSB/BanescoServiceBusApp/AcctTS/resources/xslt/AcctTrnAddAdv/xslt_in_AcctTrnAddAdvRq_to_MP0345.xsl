<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:ns0="http://xmlns.banesco.com/eopt/AcctTrnAddAdv_V1.0" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:eoStatus="http://xmlns.banesco.com/eo/Status_V1.0">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/Account/AcctTrnAddAdv/AcctTrnAddAdv_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="AcctTrnAddAdvRq" namespace="http://xmlns.banesco.com/eopt/AcctTrnAddAdv_V1.0"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [TUE SEP 25 14:50:03 COT 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
   <mfl_MP0345_XML_to_TEXT>
         <xsl:if test="/ns0:AcctTrnAddAdvRq/text()">
            <AcctTrnAddAdv>
               <ByteI>ByteI</ByteI>
               <FLG>N</FLG>
               <DD><xsl:value-of select="xp20:day-from-dateTime (xp20:current-dateTime ( ) )"/></DD>
               <MM><xsl:value-of select="xp20:month-from-dateTime (xp20:current-dateTime ( ) )"/></MM>
               <YY><xsl:value-of select="xp20:year-from-dateTime (xp20:current-dateTime ( ) )"/></YY>
               <HH><xsl:value-of select="xp20:hours-from-dateTime (xp20:current-dateTime ( ) )"/></HH>
               <MN><xsl:value-of select="xp20:minutes-from-dateTime (xp20:current-dateTime( ) )"/></MN>
               <EVENT>345</EVENT>
               <ISSUER>T24</ISSUER>
               <PersonalId>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:PersonalId"/>
               </PersonalId>
               <EntityCode>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:EntityCode"/>
               </EntityCode>
               <TxnTypeCode>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnTypeCode"/>
               </TxnTypeCode>
               <TxnBranchCode>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnBranchCod"/>
               </TxnBranchCode>
               <BranchRegion>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:BranchRegion"/>
               </BranchRegion>
               <ProductCode>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:ProductCode"/>
               </ProductCode>
               <SubProdCode>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:SubProdCode"/>
               </SubProdCode>
               <TxnNumber>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnNumber"/>
               </TxnNumber>
               <ResponseCode>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:ResponseCode"/>
               </ResponseCode>
               <PersonType>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:PersonType"/>
               </PersonType>
               <RecordStatus>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:RecordStatus"/>
               </RecordStatus>
               <TxnDate>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnDate"/>
               </TxnDate>
               <TxnTime>
                   <xsl:value-of select='translate (/ns0:AcctTrnAddAdvRq/ns0:TxnTime, ":", "" )'/>
               </TxnTime>
               <BranchType/>
               <TxnCurrency>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnCurrency"/>
               </TxnCurrency>
               <TxnTotalAmt>
                   <xsl:choose>
                    <xsl:when test="starts-with (/ns0:AcctTrnAddAdvRq/ns0:TxnTotalAmt/text(),'-') or starts-with (/ns0:AcctTrnAddAdvRq/ns0:TxnTotalAmt/text(),'+')">
                      <xsl:value-of select='translate (format-number (substring(/ns0:AcctTrnAddAdvRq/ns0:TxnTotalAmt,2), "#.00" ), ".", "" )'/>
                    </xsl:when>
                 <xsl:otherwise>
                  <xsl:value-of select='translate (format-number (/ns0:AcctTrnAddAdvRq/ns0:TxnTotalAmt, "#.00" ), ".", "" )'/>
                 </xsl:otherwise>
                 </xsl:choose>
               </TxnTotalAmt>
               <CashAmt>
                <xsl:choose>
                    <xsl:when test="starts-with (/ns0:AcctTrnAddAdvRq/ns0:CashAmt/text(),'-') or starts-with (/ns0:AcctTrnAddAdvRq/ns0:CashAmt/text(),'+')">
                      <xsl:value-of select='translate (format-number (substring(/ns0:AcctTrnAddAdvRq/ns0:CashAmt,2), "#.00" ), ".", "" )'/>
                    </xsl:when>
                 <xsl:otherwise>
                  <xsl:value-of select='translate (format-number (/ns0:AcctTrnAddAdvRq/ns0:CashAmt, "#.00" ), ".", "" )'/>
                 </xsl:otherwise>
                 </xsl:choose>
               </CashAmt>
               <ChkPropAmt>
                  <xsl:choose>
                    <xsl:when test="starts-with (/ns0:AcctTrnAddAdvRq/ns0:ChkPropAmt/text(),'-') or starts-with (/ns0:AcctTrnAddAdvRq/ns0:ChkPropAmt/text(),'+')">
                      <xsl:value-of select='translate (format-number (substring(/ns0:AcctTrnAddAdvRq/ns0:ChkPropAmt,2), "#.00" ), ".", "" )'/>
                    </xsl:when>
                 <xsl:otherwise>
                  <xsl:value-of select='translate (format-number (/ns0:AcctTrnAddAdvRq/ns0:ChkPropAmt, "#.00" ), ".", "" )'/>
                 </xsl:otherwise>
                 </xsl:choose>
               </ChkPropAmt>
               <ChkOtherAmt>
               <xsl:choose>
                    <xsl:when test="starts-with (/ns0:AcctTrnAddAdvRq/ns0:ChkOtherAmt/text(),'-') or starts-with (/ns0:AcctTrnAddAdvRq/ns0:ChkOtherAmt/text(),'+')">
                      <xsl:value-of select='translate (format-number (substring(/ns0:AcctTrnAddAdvRq/ns0:ChkOtherAmt,2), "#.00" ), ".", "" )'/>
                    </xsl:when>
                 <xsl:otherwise>
                  <xsl:value-of select='translate (format-number (/ns0:AcctTrnAddAdvRq/ns0:ChkOtherAmt, "#.00" ), ".", "" )'/>
                 </xsl:otherwise>
                 </xsl:choose>
               </ChkOtherAmt>
               <TxnAccountOr>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnAccountOr"/>
               </TxnAccountOr>
               <TxnAccountDes>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnAccountDes"/>
               </TxnAccountDes>
               <Channel>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:Channel"/>
               </Channel>
               <ChkNumber>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:ChkNumber"/>
               </ChkNumber>
               <ChkBookType>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:ChkBookType"/>
               </ChkBookType>
               <EmployeeAcctOr>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:EmployeeAcctOr"/>
               </EmployeeAcctOr>
               <EmployeeAcctDes>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:EmployeeAcctDes"/>
               </EmployeeAcctDes>
               <EmployeeId>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:EmployeeId"/>
               </EmployeeId>
               <DebitCredit>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:DebitCredit"/>
               </DebitCredit>
               <AcctStatus>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:AcctStatus"/>
               </AcctStatus>
               <AvailAmtSign>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:AvailAmtSign"/>
               </AvailAmtSign>
               <AvailAmt>
               <xsl:choose>
                    <xsl:when test="starts-with (/ns0:AcctTrnAddAdvRq/ns0:AvailAmt/text(),'-') or starts-with (/ns0:AcctTrnAddAdvRq/ns0:AvailAmt/text(),'+')">
                      <xsl:value-of select='translate (format-number (substring(/ns0:AcctTrnAddAdvRq/ns0:AvailAmt,2), "#.00" ), ".", "" )'/>
                    </xsl:when>
                 <xsl:otherwise>
                  <xsl:value-of select='translate (format-number (/ns0:AcctTrnAddAdvRq/ns0:AvailAmt, "#.00" ), ".", "" )'/>
                 </xsl:otherwise>
                 </xsl:choose>
               </AvailAmt>
               <Location/>
               <OpenAcctDate>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:OpenAcctDate"/>
               </OpenAcctDate>
               <TerminalId/>
               <CustomerIdOr>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:CustomerIdOr"/>
               </CustomerIdOr>
               <CustomerIdDes>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:CustomerIdDes"/>
               </CustomerIdDes>
               <OpenBranchOr>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:OpenBranchOr"/>
               </OpenBranchOr>
               <OpenBranchDes>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:OpenBranchDes"/>
               </OpenBranchDes>
               <UserCode>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:UserCode"/>
               </UserCode>
               <EmployeeCod>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:EmployeeCod"/>
               </EmployeeCod>
               <OverdueAmt>
                  <xsl:choose>
                    <xsl:when test="starts-with (/ns0:AcctTrnAddAdvRq/ns0:OverdueAmt/text(),'-') or starts-with (/ns0:AcctTrnAddAdvRq/ns0:OverdueAmt/text(),'+')">
                      <xsl:value-of select='translate (format-number (substring(/ns0:AcctTrnAddAdvRq/ns0:OverdueAmt,2), "#.00" ), ".", "" )'/>
                    </xsl:when>
                 <xsl:otherwise>
                  <xsl:value-of select='translate (format-number (/ns0:AcctTrnAddAdvRq/ns0:OverdueAmt, "#.00" ), ".", "" )'/>
                 </xsl:otherwise>
                 </xsl:choose>
               </OverdueAmt>
               <OverdueIndicator>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:OverdueIndicator"/>
               </OverdueIndicator>
               <FlagVip>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:FlagVip"/>
               </FlagVip>
               <InternetAcctFlag/>
               <TransferKey>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TransferKey"/>
               </TransferKey>
               <TransferTrackingId/>
               <CallerId/>
               <CustomerNameOr>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:CustomerNameOr"/>
               </CustomerNameOr>
               <CustomerNameDes>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:CustomerNameDes"/>
               </CustomerNameDes>
               <PersonAddr>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:PersonAddr"/>
               </PersonAddr>
               <HousePhone>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:HousePhone"/>
               </HousePhone>
               <OfficePhone>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:OfficePhone"/>
               </OfficePhone>
               <OtherPhone>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:OtherPhone"/>
               </OtherPhone>
               <Email>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:Email"/>
               </Email>
               <CustomerSince>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:CustomerSince"/>
               </CustomerSince>
               <Segment>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:Segment"/>
               </Segment>
               <TxnRef>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnRef"/>
               </TxnRef>
               <SvcPaymentType>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:SvcPaymentType"/>
               </SvcPaymentType>
               <BillerId>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:BillerId"/>
               </BillerId>
               <ServName>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:ServName"/>
               </ServName>
               <SerProvId>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:SerProvId"/>
               </SerProvId>
               <MessageType>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:MessageType"/>
               </MessageType>
               <P03Code/>
               <BankDes>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:BankDes"/>
               </BankDes>
               <ProdTypeDes>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:ProdTypeDes"/>
               </ProdTypeDes>
               <CompensationDt>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:CompensationDt"/>
               </CompensationDt>
               <TxnBranch>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:TxnBranch"/>
               </TxnBranch>
                <ConfirmationUser>
                     <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:EmployeeCod"/>
                </ConfirmationUser>
               <TrxType/>
               <UserType>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:UserType"/>
               </UserType>
               <CounterfoilInitNum/>
               <CounterfoilFinalNum/>
               <CounterfoilUsedLastNum/>
               <ChkBookInitialNum>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:ChkBookInitialNum"/>
               </ChkBookInitialNum>
               <ChkBookFinalNum>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:ChkBookFinalNum"/>
               </ChkBookFinalNum>
               <ChkBookPaidLastNum/>
               <PersonalIdDes>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:PersonalIdDes"/>
               </PersonalIdDes>
               <AFutureUse1/>
               <AFutureUse2/>
               <AFutureUse3/>
               <NFutureUse1/>
               <NFutureUse2/>
               <NFutureUse3/>
               <ISPCode/>
               <FraudIndicator/>
               <AlertOrig/>
               <FraudTrxIdent/>
               <LastMovDt>
                  <xsl:value-of select="/ns0:AcctTrnAddAdvRq/ns0:LastMovDt"/>
               </LastMovDt>
               <ScreenResolution/>
               <ScreenColors/>
               <BrowserWindSize/>
               <BrowserCod/>
               <BrowserRelNum/>
               <BrowserVersNum/>
               <OSName/>
               <IpAddress/>
               <LanguajeCod/>
               <IdApp>T24</IdApp>
               <IdFecEnvio><xsl:value-of select='xp20:format-dateTime (xp20:current-date ( ), "[YYYY][M01][D01]")'/></IdFecEnvio>
               <IdRef/>
               <ByteF>ByteF</ByteF>
            </AcctTrnAddAdv>
         </xsl:if>
      </mfl_MP0345_XML_to_TEXT>
   </xsl:template>
</xsl:stylesheet>
