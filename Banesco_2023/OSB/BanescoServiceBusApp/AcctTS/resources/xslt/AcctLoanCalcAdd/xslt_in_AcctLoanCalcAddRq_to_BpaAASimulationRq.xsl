<xsl:stylesheet version="2.0"
                exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:tns="http://www.temenos.com/T24/ofs/Request"
                xmlns:ns0="http://xmlns.banesco.com/eopt/AcctLoanCalcAdd_V1.0"
                xmlns:ns1="http://www.temenos.com/T24/ofs/AASIMULATIONCAPTUREBPAPAYAMTType"
                xmlns:reqcns="http://www.temenos.com/T24/ofs/RequestCommon"
                xmlns:ns7="http://xmlns.banesco.com/eo/Product_V1.0"
                xmlns:eoAcct="http://xmlns.banesco.com/eo/Acct_V1.0" xmlns:ns8="http://xmlns.banesco.com/eo/Party_V1.0"
                xmlns:eoStatus="http://xmlns.banesco.com/eo/Status_V1.0"
                xmlns:ns9="http://xmlns.banesco.com/eo/Chk_V1.0" xmlns:ns4="http://xmlns.banesco.com/eo/Banking_V1.0"
                xmlns:ns6="http://xmlns.banesco.com/eo/Fee_V1.0" xmlns:ns2="http://xmlns.banesco.com/eo/Card_V1.0"
                xmlns:ns3="http://xmlns.banesco.com/eo/Payee_V1.0" xmlns:ns5="http://xmlns.banesco.com/eo/Common_V1.0"
                xmlns:head="http://xmlns.banesco.com/appopt/AOptCommon_V1.0"
                xmlns:fn="http://www.w3.org/2005/xpath-functions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/AccountLoan/AcctLoanCalcAdd/AcctLoanCalcAdd_V1.0.xsd"/>
        <oracle-xsl-mapper:rootElement name="AcctLoanCalcAddRq"
                                       namespace="http://xmlns.banesco.com/eopt/AcctLoanCalcAdd_V1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../../../../Commons/backends/T24/resources/xsd/BpaAASimulation/PAYMENTAMOUNTSIMULATIONRequest.xsd"/>
        <oracle-xsl-mapper:rootElement name="AASIMULATIONCAPTUREBPAPAYAMTRequest"
                                       namespace="http://www.temenos.com/T24/ofs/Request"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.3.0(XSLT Build 170820.1700.2557) AT [FRI APR 27 15:36:45 COT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:param name="varHeader"/>
  <xsl:template match="/">
    <opaq:opaqueElement xmlns:opaq="http://xmlns.oracle.com/pcbpel/adapter/opaque/">
      <tns:AASIMULATIONCAPTUREBPAPAYAMTRequest>
        <RequestCommon>
          <UserName>
            <xsl:value-of select="$varHeader/head:ClientApp/head:UserId"/>
          </UserName>
        </RequestCommon>
        <AASIMULATIONCAPTUREBPAPAYAMT>
          <!--xsl:variable name="OFFICERS">
            <mPROPERTY>
              <PROPERTY>OFFICERS</PROPERTY>
              <sgFIELDNAME>
                <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CreditAcctData/eoAcct:CollOfficer/text()">
                  <FIELDNAME>
                    <FIELDNAME>LT.COLL.OFFICER</FIELDNAME>
                    <FIELDVALUE>
                      <xsl:value-of select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CreditAcctData/eoAcct:CollOfficer"/>
                    </FIELDVALUE>
                  </FIELDNAME>
                </xsl:if>
                <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctOpeningInfo/eoAcct:SaleOfficer/text()">
                  <FIELDNAME>
                    <FIELDNAME>LT.SALE.OFFICER</FIELDNAME>
                    <FIELDVALUE>
                      <xsl:value-of select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctOpeningInfo/eoAcct:SaleOfficer"/>
                    </FIELDVALUE>
                  </FIELDNAME>
                </xsl:if>
              </sgFIELDNAME>
            </mPROPERTY>
          </xsl:variable-->
          <xsl:variable name="COMMITMENT">
            <mPROPERTY>
              <PROPERTY>COMMITMENT</PROPERTY>
              <sgFIELDNAME>
                <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctOpeningInfo/eoAcct:InitialAmt/ns5:Amt/text()">
                  <FIELDNAME>
                    <FIELDNAME>AMOUNT</FIELDNAME>
                    <FIELDVALUE>
                      <xsl:value-of select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctOpeningInfo/eoAcct:InitialAmt/ns5:Amt"/>
                    </FIELDVALUE>
                  </FIELDNAME>
                </xsl:if>
                <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CreditAcctData/eoAcct:Term/eoAcct:ProposedTerm/text()">
                  <FIELDNAME>
                    <FIELDNAME>TERM</FIELDNAME>
                    <FIELDVALUE>
                      <xsl:value-of select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CreditAcctData/eoAcct:Term/eoAcct:ProposedTerm"/>
                    </FIELDVALUE>
                  </FIELDNAME>
                </xsl:if>
              </sgFIELDNAME>
            </mPROPERTY>
          </xsl:variable>
          <xsl:variable name="PRINCIPALINT">
            <mPROPERTY>
              <PROPERTY>PRINCIPALINT</PROPERTY>
              <sgFIELDNAME>
                <FIELDNAME>
                  <FIELDNAME>FIXED.RATE</FIELDNAME>
                  <FIELDVALUE>
                    <xsl:for-each select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:IntRateData">
                      <xsl:if test="eoAcct:IntRateType/text() = 'PRINCIPALINT'">
                        <xsl:value-of select="eoAcct:IntRate"/>
                      </xsl:if>
                    </xsl:for-each>
                  </FIELDVALUE>
                </FIELDNAME>
              </sgFIELDNAME>  
            </mPROPERTY>
          </xsl:variable>
          <xsl:variable name="FECI1">
            <mPROPERTY>
              <PROPERTY>FECI1</PROPERTY>
              <sgFIELDNAME>
                <FIELDNAME>
                  <FIELDNAME>FIXED.RATE</FIELDNAME>
                  <FIELDVALUE>
                    <xsl:for-each select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:IntRateData">
                      <xsl:if test="eoAcct:IntRateType/text() = 'FECI1'">
                        <xsl:value-of select="eoAcct:IntRate"/>
                      </xsl:if>
                    </xsl:for-each>
                  </FIELDVALUE>
                </FIELDNAME>
              </sgFIELDNAME>
            </mPROPERTY>
          </xsl:variable>
          <xsl:variable name="ACCOUNT">
            <mPROPERTY>
              <PROPERTY>ACCOUNT</PROPERTY>
              <sgFIELDNAME>
                <FIELDNAME>
                  <FIELDNAME>LT.DESTINO</FIELDNAME>
                  <FIELDVALUE>
                    <xsl:for-each select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:IntRateData">
                      <xsl:if test="eoAcct:IntRateType/text() = 'ACCOUNT'">
                        <xsl:value-of select="eoAcct:IntRate"/>
                      </xsl:if>
                    </xsl:for-each>
                  </FIELDVALUE>
                </FIELDNAME>
              </sgFIELDNAME>
            </mPROPERTY>
          </xsl:variable>
          <xsl:variable name="SCHEDULE">
            <mPROPERTY>
              <PROPERTY>SCHEDULE</PROPERTY>
              <sgFIELDNAME>
                <!-- Creacion de todas las porpiedades de scheduler definidas -->
                <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CreditAcctData/eoAcct:CreditRegularPmt/eoAcct:PmtTargetDetail/eoAcct:StartDate/text()">
                  <FIELDNAME>
                  <!-- Se forma de manera dinamica DV CONFORME AL PRODUCTO-->
                    <FIELDNAME>PAYMENT.FREQ:1</FIELDNAME>
                    <FIELDVALUE>
                        <xsl:value-of select='DVMFunctions:lookupValue ("Commons/dvm/ServiceProperties", "CODE", /ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctSubtype/ns5:Desc, "VALUE", "" )'/>
                    </FIELDVALUE>
                  </FIELDNAME>
                  <FIELDNAME>
                    <FIELDNAME>PAYMENT.TYPE:1</FIELDNAME>
                    <FIELDVALUE>CONSTANT</FIELDVALUE>
                  </FIELDNAME>
                  <FIELDNAME>
                    <FIELDNAME>START.DATE:1</FIELDNAME>
                    <FIELDVALUE>
                      <xsl:value-of select="xp20:format-dateTime(/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CreditAcctData/eoAcct:CreditRegularPmt/eoAcct:PmtTargetDetail/eoAcct:StartDate,'D_[Y0001][M01][D01]')"/>
                    </FIELDVALUE>
                  </FIELDNAME>
                  <!-- Agregar solo a los productos PP /JUBILADO -->
                  <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctSubtype/ns5:Desc/text() = 'COTIZADOR.PP' or /ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctSubtype/ns5:Desc/text() = 'COTIZADOR.JUBILADOS' ">
                  <FIELDNAME>
                    <FIELDNAME>PAYMENT.TYPE:2</FIELDNAME>
                    <FIELDVALUE>DISBURSEMENT.%</FIELDVALUE>
                  </FIELDNAME>
                  <FIELDNAME>
                    <FIELDNAME>START.DATE:2</FIELDNAME>
                    <FIELDVALUE>R_START</FIELDVALUE>
                  </FIELDNAME>
                  </xsl:if>
                 <!-- Agregar solo a los producto HIPOTECAS -->
                  <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctSubtype/ns5:Desc/text() = 'COTIZADOR.HIPOTECAS'">
                  <FIELDNAME>
                    <FIELDNAME>PAYMENT.METHOD:1</FIELDNAME>
                    <FIELDVALUE>DUE</FIELDVALUE>
                  </FIELDNAME>
                </xsl:if> 
                </xsl:if>
              </sgFIELDNAME>
            </mPROPERTY>
          </xsl:variable>
          <ARRANGEMENT>
            <xsl:value-of select='DVMFunctions:lookupValue ("Commons/dvm/ServiceProperties", "CODE", "AcctLoanCalcAdd.Arragement", "VALUE", "" )'/>
          </ARRANGEMENT>
          <ACTIVITY>
            <xsl:value-of select='DVMFunctions:lookupValue ("Commons/dvm/ServiceProperties", "CODE", "AcctLoanCalcAdd.Activity", "VALUE", "" )'/>
          </ACTIVITY>
          <!-- Fecha efectiva del primer pago de la simulacion -->
          <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctSubtype/ns5:Desc/text() = 'COTIZADOR.PP' or /ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctSubtype/ns5:Desc/text() = 'COTIZADOR.JUBILADOS' ">
          <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CreditAcctData/eoAcct:CreditAcctPmtInfo/eoAcct:FirstPmtDt/text()">
            <EFFECTIVEDATE>
              <xsl:value-of select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CreditAcctData/eoAcct:CreditAcctPmtInfo/eoAcct:FirstPmtDt"/>
            </EFFECTIVEDATE>
          </xsl:if>
          </xsl:if>
          <!--gCUSTOMER g="1"-->
          <gCUSTOMER>
            <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctMember/eoAcct:PartyKey/ns8:PartyId/text()">
              <CUSTOMER>
                <xsl:value-of select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctMember/eoAcct:PartyKey/ns8:PartyId"/>
              </CUSTOMER>
            </xsl:if>
          </gCUSTOMER>
          <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctSubtype/ns5:Desc/text()">
            <PRODUCT>
              <xsl:value-of select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:AcctSubtype/ns5:Desc"/>
            </PRODUCT>
          </xsl:if>
          <xsl:if test="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CurCode/text()">
            <CURRENCY>
              <xsl:value-of select="/ns0:AcctLoanCalcAddRq/ns0:AcctLoan/eoAcct:CurCode"/>
            </CURRENCY>
          </xsl:if>
          <!--gPROPERTY g="1"-->
          <gPROPERTY>
            <xsl:variable name="gProperty">
              <!--xsl:if test="count($OFFICERS/mPROPERTY/sgFIELDNAME/FIELDNAME/FIELDVALUE/text()) > 0">
                <xsl:copy-of select="$OFFICERS"/>
              </xsl:if-->
              <xsl:if test="count($COMMITMENT/mPROPERTY/sgFIELDNAME/FIELDNAME/FIELDVALUE/text()) > 0">
                <xsl:copy-of select="$COMMITMENT"/>
              </xsl:if>
              <xsl:if test="count($PRINCIPALINT/mPROPERTY/sgFIELDNAME/FIELDNAME/FIELDVALUE/text()) > 0">
                <xsl:copy-of select="$PRINCIPALINT"/>
              </xsl:if>
              <xsl:if test="count($FECI1/mPROPERTY/sgFIELDNAME/FIELDNAME/FIELDVALUE/text()) > 0">
                <xsl:copy-of select="$FECI1"/>
              </xsl:if>
              <xsl:if test="count($ACCOUNT/mPROPERTY/sgFIELDNAME/FIELDNAME/FIELDVALUE/text()) > 0">
                <xsl:copy-of select="$ACCOUNT"/>
              </xsl:if>
               <xsl:if test="count($SCHEDULE/mPROPERTY/sgFIELDNAME/FIELDNAME[3]/FIELDVALUE/text()) > 0">
                <xsl:copy-of select="$SCHEDULE"/>
              </xsl:if>
            </xsl:variable>
            <!-- Aqui inicia el gProperty-->
            <xsl:for-each select="$gProperty/mPROPERTY">
              <!--xsl:variable name="indexMProperty">
                <xsl:value-of select="position ()"/>
              </xsl:variable-->
              <!--mPROPERTY m="{$indexMProperty}"-->
              <mPROPERTY>
                <PROPERTY>
                  <xsl:value-of select="./PROPERTY"/>
                </PROPERTY>
                <xsl:for-each select="./sgFIELDNAME">
                  <!--xsl:variable name="indexSgFieldName">
                    <xsl:value-of select="position ()"/>
                  </xsl:variable-->
                  <!--<sgFIELDNAME sg='{concat ($indexMProperty, ".", $indexSgFieldName )}'>-->
                  <!--sgFIELDNAME sg="{$indexSgFieldName}"-->
                  <sgFIELDNAME>
                    <xsl:for-each select="./FIELDNAME">
                      <!--xsl:variable name="indexFieldName">
                        <xsl:value-of select="position ()"/>
                      </xsl:variable-->
                      <!--<FIELDNAME s='{concat ($indexMProperty, ".", $indexSgFieldName, ".", $indexFieldName )}'>-->
                      <!--FIELDNAME s="{$indexFieldName}"-->
                      <FIELDNAME>
                        <FIELDNAME>
                          <xsl:value-of select="./FIELDNAME"/>
                        </FIELDNAME>
                        <FIELDVALUE>
                          <xsl:value-of select="./FIELDVALUE"/>
                        </FIELDVALUE>
                      </FIELDNAME>
                    </xsl:for-each>
                  </sgFIELDNAME>
                </xsl:for-each>
              </mPROPERTY>
            </xsl:for-each>
            <!-- Aquí termina el gProperty -->
          </gPROPERTY>
        </AASIMULATIONCAPTUREBPAPAYAMT>
      </tns:AASIMULATIONCAPTUREBPAPAYAMTRequest>
    </opaq:opaqueElement>
  </xsl:template>
</xsl:stylesheet>