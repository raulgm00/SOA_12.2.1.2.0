<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="2.0"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:tns="http://xmlns.banesco.com/eopt/AcctLoanInq_V1.0"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                xmlns:ns0="http://www.temenos.com/T24/ofs/Response"
                exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:ns1="http://xmlns.banesco.com/eo/Acct_V1.0" xmlns:ns2="http://xmlns.banesco.com/eo/Party_V1.0"
                xmlns:ns3="http://xmlns.banesco.com/eo/Common_V1.0"
                xmlns:rescns="http://www.temenos.com/T24/ofs/ResponseCommon"
                xmlns:ns4="http://www.temenos.com/T24/ofs/BPAWSLOANCONSULTBYCUSTType"
                xmlns:ns9="http://xmlns.banesco.com/eo/Product_V1.0"
                xmlns:eoStatus="http://xmlns.banesco.com/eo/Status_V1.0"
                xmlns:ns10="http://xmlns.banesco.com/eo/Chk_V1.0" xmlns:ns7="http://xmlns.banesco.com/eo/Banking_V1.0"
                xmlns:ns8="http://xmlns.banesco.com/eo/Fee_V1.0" xmlns:ns5="http://xmlns.banesco.com/eo/Card_V1.0"
                xmlns:ns6="http://xmlns.banesco.com/eo/Payee_V1.0" xmlns:fn="http://www.w3.org/2005/xpath-functions">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../../../../Commons/backends/T24/resources/xsd/BpaWsLoanConsultByCust/ConsultadePrestamosporclientesResponse.xsd"/>
        <oracle-xsl-mapper:rootElement name="BPAWSLOANCONSULTBYCUSTResponse"
                                       namespace="http://www.temenos.com/T24/ofs/Response"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/AccountLoan/AcctLoanInq/AcctLoanInq_V1.0.xsd"/>
        <oracle-xsl-mapper:rootElement name="AcctLoanInqRs" namespace="http://xmlns.banesco.com/eopt/AcctLoanInq_V1.0"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [THU JUN 07 15:18:29 COT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:include href="../../../../Commons/xslt/Template/TemplateServiceUtil.xsl"/>
  <xsl:variable name="partyID">
        <xsl:value-of select="//*:CUSID[1]/text()"/>
      </xsl:variable>
  <xsl:template match="/">
    <tns:AcctLoanInqRs>
      <xsl:variable name="statusCode">
        <xsl:value-of select="DVMFunctions:lookupValue ('Commons/dvm/StatusMappingBcknd', 'T24', /ns0:BPAWSLOANCONSULTBYCUSTResponse/ResponseCommon/Status, 'CNCODE', 'M0006' )"/>
      </xsl:variable>
      <xsl:if test="/ns0:BPAWSLOANCONSULTBYCUSTResponse/BPAWSLOANCONSULTBYCUST">
        <tns:Party>
          <tns:PartyKey>
            <ns2:PartyId>
              <xsl:value-of select="substring-before($partyID, ' ')"/>
            </ns2:PartyId>
          </tns:PartyKey>
        </tns:Party>
      </xsl:if>
      <tns:Status>
        <eoStatus:StatusCode>
          <xsl:value-of select="$statusCode"/>
        </eoStatus:StatusCode>
        <xsl:choose>
          <xsl:when test="/ns0:BPAWSLOANCONSULTBYCUSTResponse/ResponseCommon/Message/text()">
            <eoStatus:StatusDesc>
              <xsl:value-of select="/ns0:BPAWSLOANCONSULTBYCUSTResponse/ResponseCommon/Message"/>
            </eoStatus:StatusDesc>
          </xsl:when>
          <xsl:otherwise>
            <eoStatus:StatusDesc>
              <xsl:value-of select="DVMFunctions:lookupValue ('Commons/dvm/StatusMappingBcknd', 'T24', /ns0:BPAWSLOANCONSULTBYCUSTResponse/ResponseCommon/Status, 'CNDESC', 'FALLO EN LA OPERACION' )"/>
            </eoStatus:StatusDesc>
          </xsl:otherwise>
        </xsl:choose>
        <eoStatus:AdditionalStatus>
          <xsl:if test="/ns0:BPAWSLOANCONSULTBYCUSTResponse/ResponseCommon/Status/text()">
            <eoStatus:StatusCode>
              <xsl:value-of select="/ns0:BPAWSLOANCONSULTBYCUSTResponse/ResponseCommon/Status"/>
            </eoStatus:StatusCode>
          </xsl:if>
          <xsl:if test="/ns0:BPAWSLOANCONSULTBYCUSTResponse/ResponseCommon/Message/text()">
            <eoStatus:StatusDesc>
              <xsl:value-of select="/ns0:BPAWSLOANCONSULTBYCUSTResponse/ResponseCommon/Message"/>
            </eoStatus:StatusDesc>
          </xsl:if>
        </eoStatus:AdditionalStatus>
      </tns:Status>
      <xsl:if test="/ns0:BPAWSLOANCONSULTBYCUSTResponse/BPAWSLOANCONSULTBYCUST">
        <tns:AcctLoans>
          <xsl:for-each select="/ns0:BPAWSLOANCONSULTBYCUSTResponse/BPAWSLOANCONSULTBYCUST/gBPAWSLOANCONSULTBYCUSTDetailType/mBPAWSLOANCONSULTBYCUSTDetailType">
            <tns:AcctLoan>
              <ns1:AcctSubtype>
                <xsl:if test="LTSUBPRODUCT/text()">
                  <ns3:Cod>
                    <xsl:value-of select="LTSUBPRODUCT"/>
                  </ns3:Cod>
                </xsl:if>
              </ns1:AcctSubtype>
              <ns1:AcctType>
                <xsl:if test="PRODUCT/text()">
                  <ns3:Cod>
                    <xsl:value-of select="PRODUCT"/>
                  </ns3:Cod>
                </xsl:if>
              </ns1:AcctType>
              <xsl:if test="CATEGORY/text()">
                <ns1:Category>
                  <xsl:value-of select="CATEGORY"/>
                </ns1:Category>
              </xsl:if>
              <xsl:if test="MATURITYDATE/text()">
                <ns1:ClosedDt>
                  <xsl:value-of select='concat (substring (MATURITYDATE, 1, 4 ), "-", substring (MATURITYDATE, 5, 2 ), "-", substring (MATURITYDATE, 7, 2 ) )'/>
                </ns1:ClosedDt>
              </xsl:if>
              <xsl:if test="CLUBBAN/text()">
                <ns1:ClubBanesco>
                  <!--xsl:value-of select='DVMFunctions:lookupValue ("Commons/dvm/ServiceProperties", "CODE", CLUBBAN/text(), "VALUE", "0" )'/-->
                  <!--<xsl:value-of select='DVMFunctions:lookupValue ("Commons/dvm/ServiceProperties", "CODE", CLUBBAN/text(), "VALUE", "false" )'/>-->
                  <xsl:call-template name="Boolean_Regex">
                    <xsl:with-param name="operation">Inq</xsl:with-param>
                    <xsl:with-param name="parametro">
                  <xsl:value-of select=" CLUBBAN"/>
                </xsl:with-param>
                  </xsl:call-template>
                </ns1:ClubBanesco>
              </xsl:if>
              <xsl:if test="CURRENCY/text()">
                <ns1:CurCode>
                  <xsl:value-of select="CURRENCY"/>
                </ns1:CurCode>
              </xsl:if>
              <ns1:Variation>
                <xsl:if test="VARIATION/text()">
                  <ns3:Cod>
                    <xsl:value-of select="VARIATION"/>
                  </ns3:Cod>
                </xsl:if>
              </ns1:Variation>
              <ns1:AcctKey>
                <xsl:if test="ARRID/text()">
                  <ns1:AcctId>
                    <xsl:value-of select="ARRID"/>
                  </ns1:AcctId>
                </xsl:if>
                <xsl:if test="NUMERODEREFERENCIA/text()">
                  <ns1:AcctReference>
                    <xsl:value-of select="NUMERODEREFERENCIA"/>
                  </ns1:AcctReference>
                </xsl:if>
                <xsl:if test="ALTERNATEID/text()">
                  <ns1:AlternateId>
                    <xsl:value-of select="ALTERNATEID"/>
                  </ns1:AlternateId>
                </xsl:if>
              </ns1:AcctKey>
              <ns1:AcctStatus>
                <xsl:if test="LTALSTATUS/text()">
                  <ns1:AcctStatusCode>
                    <xsl:value-of select="LTALSTATUS"/>
                  </ns1:AcctStatusCode>
                </xsl:if>
              </ns1:AcctStatus>
              <ns1:CreditAcctData>
                <ns1:CreditAcctPmtInfo>
                  <xsl:if test="PAPAYMTYPE/text()">
                    <ns1:PmtMethod>
                      <xsl:value-of select="PAPAYMTYPE"/>
                    </ns1:PmtMethod>
                  </xsl:if>
                </ns1:CreditAcctPmtInfo>
              </ns1:CreditAcctData>
              <ns1:AcctOpeningInfo>
                <ns1:InitialAmt>
                  <xsl:if test="TOTALAMOUNT/text()">
                    <ns3:Amt>
                      <xsl:value-of select="TOTALAMOUNT"/>
                    </ns3:Amt>
                  </xsl:if>
                </ns1:InitialAmt>
                <xsl:if test="EFFECTIVEDATE/text()">
                  <ns1:OpenDt>
                    <xsl:value-of select='concat (substring (EFFECTIVEDATE, 1, 4 ), "-", substring (EFFECTIVEDATE, 5, 2 ), "-", substring (EFFECTIVEDATE, 7, 2 ) )'/>
                  </ns1:OpenDt>
                </xsl:if>
              </ns1:AcctOpeningInfo>
              <ns1:AcctBal>
                <ns1:CurAmt>
                  <xsl:if test="ACTUALAMT/text()">
                    <ns3:Amt>
                      <xsl:value-of select="ACTUALAMT"/>
                    </ns3:Amt>
                  </xsl:if>
                </ns1:CurAmt>
              </ns1:AcctBal>
            </tns:AcctLoan>
          </xsl:for-each>
        </tns:AcctLoans>
      </xsl:if>
    </tns:AcctLoanInqRs>
  </xsl:template>
</xsl:stylesheet>