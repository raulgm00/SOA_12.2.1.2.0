<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:ns0="http://xmlns.banesco.com/appopt/PNPartyAppSvc/PartyRefMod_V1.0" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:tns="http://xmlns.banesco.com/eopt/PartyRefMod_V1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:appoptcommon="http://xmlns.banesco.com/appopt/AOptCommon_V1.0"
                xmlns:ns1="http://xmlns.banesco.com/eo/Banking_V1.0"
                xmlns:eoPar="http://xmlns.banesco.com/eo/Party_V1.0"
                xmlns:eoStatus="http://xmlns.banesco.com/eo/Status_V1.0"
                xmlns:ns2="http://xmlns.banesco.com/eo/Common_V1.0">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/AppOpt/PNParty/PartyRefMod/PartyRefMod_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="PartyRefModRq" namespace="http://xmlns.banesco.com/appopt/PNPartyAppSvc/PartyRefMod_V1.0"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/Party/PartyRefMod/PartyRefMod_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="PartyRefModRq" namespace="http://xmlns.banesco.com/eopt/PartyRefMod_V1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [MON APR 09 14:28:14 GMT-05:00 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:PartyRefModRq>
        <tns:PartyKey>
            <xsl:if test="/ns0:PartyRefModRq/ns0:Party/ns0:PartyKey/ns0:PartyId/text()">
               <eoPar:PartyId>
                  <xsl:value-of select="/ns0:PartyRefModRq/ns0:Party/ns0:PartyKey/ns0:PartyId"/>
               </eoPar:PartyId>
            </xsl:if>
         </tns:PartyKey>
         <xsl:for-each select="/ns0:PartyRefModRq/ns0:Party/ns0:PersonPartyInfo/ns0:Relationship">
            <tns:Relationship>
               <eoPar:Contact>
                  <ns2:Locator>
                     <xsl:for-each select="ns0:Contact/ns0:Locator/ns0:Email">
                        <ns2:Email>
                           <xsl:if test="appoptcommon:Value/text()">
                              <ns2:Value>
                                 <xsl:value-of select="appoptcommon:Value"/>
                              </ns2:Value>
                           </xsl:if>
                        </ns2:Email>
                     </xsl:for-each>
                     <xsl:for-each select="ns0:Contact/ns0:Locator/ns0:PostAddr">
                        <ns2:PostAddr>
                           <xsl:if test="ns0:AddrDesc/text()">
                              <ns2:AddrDesc>
                                 <xsl:value-of select="ns0:AddrDesc"/>
                              </ns2:AddrDesc>
                           </xsl:if>
                           <ns2:Building>
                              <xsl:if test="ns0:Building/appoptcommon:Desc/text()">
                                 <ns2:Desc>
                                    <xsl:value-of select="ns0:Building/appoptcommon:Desc"/>
                                 </ns2:Desc>
                              </xsl:if>
                           </ns2:Building>
                           <ns2:City>
                              <xsl:if test="ns0:City/appoptcommon:Cod/text()">
                                 <ns2:Cod>
                                    <xsl:value-of select="ns0:City/appoptcommon:Cod"/>
                                 </ns2:Cod>
                              </xsl:if>
                           </ns2:City>
                           <ns2:CountyDistrict>
                              <xsl:if test="ns0:CountyDistrict/appoptcommon:Cod/text()">
                                 <ns2:Cod>
                                    <xsl:value-of select="ns0:CountyDistrict/appoptcommon:Cod"/>
                                 </ns2:Cod>
                              </xsl:if>
                           </ns2:CountyDistrict>
                           <xsl:if test="ns0:HouseNumber/text()">
                              <ns2:HouseNumber>
                                 <xsl:value-of select="ns0:HouseNumber"/>
                              </ns2:HouseNumber>
                           </xsl:if>
                           <ns2:Jurisdiction>
                              <xsl:if test="ns0:Jurisdiction/appoptcommon:Cod/text()">
                                 <ns2:Cod>
                                    <xsl:value-of select="ns0:Jurisdiction/appoptcommon:Cod"/>
                                 </ns2:Cod>
                              </xsl:if>
                           </ns2:Jurisdiction>
                           <xsl:if test="ns0:PostalCode/text()">
                              <ns2:PostalCode>
                                 <xsl:value-of select="ns0:PostalCode"/>
                              </ns2:PostalCode>
                           </xsl:if>
                           <ns2:Province>
                              <xsl:if test="ns0:Province/appoptcommon:Cod/text()">
                                 <ns2:Cod>
                                    <xsl:value-of select="ns0:Province/appoptcommon:Cod"/>
                                 </ns2:Cod>
                              </xsl:if>
                           </ns2:Province>
                           <xsl:if test="ns0:Street/text()">
                              <ns2:Street>
                                 <xsl:value-of select="ns0:Street"/>
                              </ns2:Street>
                           </xsl:if>
                           <ns2:Country>
                              <xsl:if test="ns0:Country/appoptcommon:CountryCode/text()">
                                 <ns2:CountryCode>
                                    <xsl:value-of select="ns0:Country/appoptcommon:CountryCode"/>
                                 </ns2:CountryCode>
                              </xsl:if>
                           </ns2:Country>
                        </ns2:PostAddr>
                     </xsl:for-each>
                     <xsl:for-each select="ns0:Contact/ns0:Locator/ns0:Phone">
                        <ns2:Phone>
                           <xsl:if test="ns0:AreaCode/text()">
                              <ns2:AreaCode>
                                 <xsl:value-of select="ns0:AreaCode"/>
                              </ns2:AreaCode>
                           </xsl:if>
                           <xsl:if test="ns0:PhoneNum/text()">
                              <ns2:PhoneNum>
                                 <xsl:value-of select="ns0:PhoneNum"/>
                              </ns2:PhoneNum>
                           </xsl:if>
                           <xsl:if test="ns0:PhoneType/text()">
                              <ns2:PhoneType>
                                 <xsl:value-of select="ns0:PhoneType"/>
                              </ns2:PhoneType>
                           </xsl:if>
                        </ns2:Phone>
                     </xsl:for-each>
                  </ns2:Locator>
               </eoPar:Contact>
               <xsl:if test="ns0:CustomerId/text()">
                  <eoPar:CustomerId>
                     <xsl:value-of select="ns0:CustomerId"/>
                  </eoPar:CustomerId>
               </xsl:if>
               <eoPar:RefName>
                  <xsl:if test="ns0:RefName/ns0:FullName/text()">
                     <eoPar:FullName>
                        <xsl:value-of select="ns0:RefName/ns0:FullName"/>
                     </eoPar:FullName>
                  </xsl:if>
               </eoPar:RefName>
               <eoPar:RelationshipType>
                  <xsl:if test="ns0:RelationshipType/text()">
                     <ns2:Cod>
                        <xsl:value-of select="ns0:RelationshipType"/>
                     </ns2:Cod>
                  </xsl:if>
               </eoPar:RelationshipType>
            </tns:Relationship>
         </xsl:for-each>
      </tns:PartyRefModRq>
   </xsl:template>
</xsl:stylesheet>
