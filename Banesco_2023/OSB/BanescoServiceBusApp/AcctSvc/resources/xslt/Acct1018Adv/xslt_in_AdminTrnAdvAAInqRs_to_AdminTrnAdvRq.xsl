<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:ns0="http://xmlns.banesco.com/eopt/AdminTrnAdvInq_V1.0" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:tns="http://xmlns.banesco.com/eopt/AdminTrnAdv_V1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:ns1="http://xmlns.banesco.com/eopt/Acct1018Adv_V1.0" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 ns1 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:eoStatus="http://xmlns.banesco.com/eo/Status_V1.0">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/Account/AdminTrnAdvInq/AdminTrnAdvInq_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="AdminTrnAdvAAInqRs" namespace="http://xmlns.banesco.com/eopt/AdminTrnAdvInq_V1.0"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/Account/Acct1018Adv/Acct1018Adv_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="Acct1018AdvRq" namespace="http://xmlns.banesco.com/eopt/Acct1018Adv_V1.0"/>
            <oracle-xsl-mapper:param name="varRq"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/Account/AdminTrnAdv/AdminTrnAdv_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="AdminTrnAdvRq" namespace="http://xmlns.banesco.com/eopt/AdminTrnAdv_V1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [FRI SEP 07 07:52:31 GMT-05:00 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="varRq"/>
   <xsl:param name="varIndex"/>
   <xsl:variable name="index" select="number ($varIndex)"/>
   <xsl:template match="/">
      <tns:AdminTrnAdvRq>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:AcctStatus/text()">
            <tns:AcctStatus>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:AcctStatus"/>
            </tns:AcctStatus>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:AvailAmt/text()">
            <tns:AvailAmt>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:AvailAmt"/>
            </tns:AvailAmt>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:AvailAmtSign/text()">
            <tns:AvailAmtSign>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:AvailAmtSign"/>
            </tns:AvailAmtSign>
         </xsl:if>
         <xsl:if test="$varRq/ns1:Acct1018AdvRq/ns1:BranchId/text()">
            <tns:BranchId>
               <xsl:value-of select="$varRq/ns1:Acct1018AdvRq/ns1:BranchId"/>
            </tns:BranchId>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:BranchType/text()">
            <tns:BranchType>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:BranchType"/>
            </tns:BranchType>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:Channel/text()">
            <tns:Channel>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:Channel"/>
            </tns:Channel>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:ChkBookType/text()">
            <tns:ChkBookType>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:ChkBookType"/>
            </tns:ChkBookType>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:CustomerId/text()">
            <tns:CustomerId>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:CustomerId"/>
            </tns:CustomerId>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:CustomerName/text()">
            <tns:CustomerName>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:CustomerName"/>
            </tns:CustomerName>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:EmployeeAcct/text()">
            <tns:EmployeeAcct>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:EmployeeAcct"/>
            </tns:EmployeeAcct>
         </xsl:if>
         <xsl:if test="$varRq/ns1:Acct1018AdvRq/ns1:Authoriser/text()">
            <tns:EmployeeCode>
               <xsl:value-of select="$varRq/ns1:Acct1018AdvRq/ns1:Authoriser"/>
            </tns:EmployeeCode>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:EmployeeType/text()">
            <tns:EmployeeType>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:EmployeeType"/>
            </tns:EmployeeType>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:FinalChk/text()">
            <tns:FinalChk>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:FinalChk"/>
            </tns:FinalChk>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:InitChk/text()">
            <tns:InitChk>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:InitChk"/>
            </tns:InitChk>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[$index]/ns0:NewTypeCode/text()">
            <tns:NewTypeCode>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[$index]/ns0:NewTypeCode"/>
            </tns:NewTypeCode>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:OpenAcctDate/text()">
            <tns:OpenAcctDate>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:OpenAcctDate"/>
            </tns:OpenAcctDate>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:OpenBranch/text()">
            <tns:OpenBranch>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:OpenBranch"/>
            </tns:OpenBranch>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:PersonalId/text()">
            <tns:PersonalId>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:PersonalId"/>
            </tns:PersonalId>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[$index]/ns0:PostValChange/text()">
            <tns:PostValChange>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[$index]/ns0:PostValChange"/>
            </tns:PostValChange>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[$index]/ns0:PrevValChange/text()">
            <tns:PrevValChange>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[$index]/ns0:PrevValChange"/>
            </tns:PrevValChange>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:ProductCode/text()">
            <tns:ProductCode>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:ProductCode"/>
            </tns:ProductCode>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:SubProdCode/text()">
            <tns:SubProdCode>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:SubProdCode"/>
            </tns:SubProdCode>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:TxnAccount/text()">
            <tns:TxnAccount>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:TxnAccount"/>
            </tns:TxnAccount>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:TxnDate/text()">
            <tns:TxnDate>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:TxnDate"/>
            </tns:TxnDate>
         </xsl:if>
         <xsl:if test="$varRq/ns1:Acct1018AdvRq/ns1:ArrangementId/text()">
            <tns:TxnRef>
               <xsl:value-of select="$varRq/ns1:Acct1018AdvRq/ns1:ArrangementId"/>
            </tns:TxnRef>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:TxnTime/text()">
            <tns:TxnTime>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:TxnTime"/>
            </tns:TxnTime>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:TxnTypeCode/text()">
            <tns:TxnTypeCode>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:TxnTypeCode"/>
            </tns:TxnTypeCode>
         </xsl:if>
         <xsl:if test="$varRq/ns1:Acct1018AdvRq/ns1:Inputter/text()">
            <tns:UserCode>
               <xsl:value-of select="$varRq/ns1:Acct1018AdvRq/ns1:Inputter"/>
            </tns:UserCode>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:UserName/text()">
            <tns:UserName>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:UserName"/>
            </tns:UserName>
         </xsl:if>
         <xsl:if test="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:UserType/text()">
            <tns:UserType>
               <xsl:value-of select="/ns0:AdminTrnAdvAAInqRs/ns0:Records[1.0]/ns0:UserType"/>
            </tns:UserType>
         </xsl:if>
      </tns:AdminTrnAdvRq>
   </xsl:template>
</xsl:stylesheet>
