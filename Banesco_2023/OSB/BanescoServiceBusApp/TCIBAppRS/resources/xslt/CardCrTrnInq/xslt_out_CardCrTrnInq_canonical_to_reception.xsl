<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0"
                xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction"
                xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions"
                xmlns:tns="http://xmlns.banesco.com/appopt/TCIBCardAppSvc/CardAcctTrnInq_V1.0"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions"
                xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions"
                xmlns:ns0="http://xmlns.banesco.com/eopt/CardCrTrnInq_V1.0"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction"
                exclude-result-prefixes="xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:ns2="http://xmlns.banesco.com/eo/Product_V1.0" xmlns:ns3="http://xmlns.banesco.com/eo/Acct_V1.0"
                xmlns:eoPar="http://xmlns.banesco.com/eo/Party_V1.0"
                xmlns:eoStatus="http://xmlns.banesco.com/eo/Status_V1.0"
                xmlns:eoTrn="http://xmlns.banesco.com/eo/Trn_V1.0" xmlns:ns6="http://xmlns.banesco.com/eo/Chk_V1.0"
                xmlns:eoBank="http://xmlns.banesco.com/eo/Banking_V1.0" xmlns:ns1="http://xmlns.banesco.com/eo/Fee_V1.0"
                xmlns:ns4="http://xmlns.banesco.com/eo/Card_V1.0" xmlns:ns5="http://xmlns.banesco.com/eo/Payee_V1.0"
                xmlns:eoCom="http://xmlns.banesco.com/eo/Common_V1.0">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/CardCr/CardCrTrnInq/CardCrTrnInq_V1.0.xsd"/>
        <oracle-xsl-mapper:rootElement name="CardCrTrnInqRs"
                                       namespace="http://xmlns.banesco.com/eopt/CardCrTrnInq_V1.0"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../../../../Commons/xsd/AppOpt/TCIBCardCr/CardCrTrnInq/CardCrTrnInq_V1.0.xsd"/>
        <oracle-xsl-mapper:rootElement name="CardCrTrnInqRs"
                                       namespace="http://xmlns.banesco.com/appopt/TCIBCardAppSvc/CardAcctTrnInq_V1.0"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [FRI JUN 15 16:31:42 COT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:CardCrTrnInqRs>
      <xsl:if test="/ns0:CardCrTrnInqRs/ns0:Trn">
        <xsl:for-each select="/ns0:CardCrTrnInqRs/ns0:Trn">
          <tns:AcctTrn>
            <xsl:if test="eoTrn:AthId">
              <tns:AthId>
                <xsl:value-of select="eoTrn:AthId"/>
              </tns:AthId>
            </xsl:if>
            <xsl:if test="eoTrn:CurBalance">
              <tns:CurBalance>
                <xsl:value-of select="eoTrn:CurBalance"/>
              </tns:CurBalance>
            </xsl:if>
            <xsl:if test="eoTrn:Desc">
              <tns:Desc>
                <xsl:value-of select="eoTrn:Desc"/>
              </tns:Desc>
            </xsl:if>
            <xsl:if test="eoTrn:TrnType/eoCom:Type = 'Por facturar'">
              <xsl:if test="eoTrn:OrigDt">
                <tns:OrigDt>
                  <xsl:value-of select="concat(eoTrn:OrigDt, substring(xp20:current-dateTime ( ), 11, 9) )"/>
                </tns:OrigDt>
              </xsl:if>
            </xsl:if>
            <xsl:if test="eoTrn:TrnType/eoCom:Type = 'Autorizaciones'">
              <xsl:if test="eoTrn:OrigDt">
                <xsl:choose>
                  <xsl:when test="string-length (eoTrn:TrnRef ) > 5">
                    <tns:OrigDt>
                      <xsl:value-of select="concat(eoTrn:OrigDt, 'T', substring(eoTrn:TrnRef, 1, 2), ':', substring(eoTrn:TrnRef, 3, 2), ':', substring(eoTrn:TrnRef, 5, 2)  ) "/>
                    </tns:OrigDt>
                  </xsl:when>
                  <xsl:otherwise>
                  <tns:OrigDt>
                      <xsl:value-of select="concat(eoTrn:OrigDt, 'T', '0', substring(eoTrn:TrnRef, 1, 1), ':', substring(eoTrn:TrnRef, 2, 2), ':', substring(eoTrn:TrnRef, 4, 2)   )"/>
                       </tns:OrigDt>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:if>
            </xsl:if>
            
            <xsl:if test="eoTrn:PostedDt">
              <tns:PostedDt>
                <xsl:value-of select="concat(eoTrn:PostedDt, substring(xp20:current-dateTime ( ), 11, 9) )"/>
              </tns:PostedDt>
            </xsl:if>
            <xsl:if test="eoTrn:TotalCurAmt/eoCom:Amt/text()">
              <tns:TotalCurAmt>
                <tns:Amt>
                  <xsl:value-of select="eoTrn:TotalCurAmt/eoCom:Amt"/>
                </tns:Amt>
                <tns:CurCode>
                  <tns:Type>
                    <xsl:value-of select="eoTrn:TotalCurAmt/eoCom:CurCode"/>
                  </tns:Type>
                </tns:CurCode>
              </tns:TotalCurAmt>
            </xsl:if>
            <xsl:if test="eoTrn:TrnType/eoCom:Type">
              <tns:TrnType>
                <tns:Type>
                  <xsl:value-of select="eoTrn:TrnType/eoCom:Type"/>
                </tns:Type>
              </tns:TrnType>
            </xsl:if>
          </tns:AcctTrn>
        </xsl:for-each>
      </xsl:if>
      <tns:Status>
        <tns:StatusCode>
          <xsl:value-of select="/ns0:CardCrTrnInqRs/ns0:Status/eoStatus:StatusCode"/>
        </tns:StatusCode>
        <tns:StatusDesc>
          <xsl:value-of select="/ns0:CardCrTrnInqRs/ns0:Status/eoStatus:StatusDesc"/>
        </tns:StatusDesc>
      </tns:Status>
    </tns:CardCrTrnInqRs>
  </xsl:template>
</xsl:stylesheet>
