<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:tns="http://xmlns.banesco.com/appopt/TCIBPmtAppSvc/BillersRulesInq_V1.0" xmlns:ns0="http://xmlns.banesco.com/eopt/BillersRulesInq_V1.0" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction"
                xmlns:ns1="http://xmlns.banesco.com/eo/Banking_V1.0" xmlns:ns3="http://xmlns.banesco.com/eo/Party_V1.0"
                xmlns:eoStatus="http://xmlns.banesco.com/eo/Status_V1.0"
                xmlns:eoBill="http://xmlns.banesco.com/eo/Bill_V1.0"
                xmlns:ns2="http://xmlns.banesco.com/eo/Common_V1.0"
                xmlns:appoptcommon="http://xmlns.banesco.com/appopt/AOptCommon_V1.0">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/EOpt/Payment/BillersRulesInq/BillersRulesInq_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="BillersRulesInqRs" namespace="http://xmlns.banesco.com/eopt/BillersRulesInq_V1.0"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../../../Commons/xsd/AppOpt/TCIBPmt/BillersRulesInq/BillersRulesInq_V1.0.xsd"/>
            <oracle-xsl-mapper:rootElement name="BillersRulesInqRs" namespace="http://xmlns.banesco.com/appopt/TCIBPmtAppSvc/BillersRulesInq_V1.0"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [MON APR 30 14:58:49 COT 2018].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:BillersRulesInqRs>
         <xsl:if test="/ns0:BillersRulesInqRs/ns0:Bill/ns0:Billers/eoBill:BillerId/text()">
            <tns:Biller>
               <tns:BillerId>
                  <xsl:value-of select="/ns0:BillersRulesInqRs/ns0:Bill/ns0:Billers/eoBill:BillerId"/>
               </tns:BillerId>
            </tns:Biller>
         </xsl:if>
         <xsl:for-each select="/ns0:BillersRulesInqRs/ns0:Field">
            <tns:Field>
               <xsl:if test="ns2:FieldCalc/text()">
                  <appoptcommon:FieldCalc>
                     <xsl:value-of select="ns2:FieldCalc"/>
                  </appoptcommon:FieldCalc>
               </xsl:if>               
               <xsl:if test="ns2:FieldId/text()">
                  <appoptcommon:FieldId>
                     <xsl:value-of select="ns2:FieldId"/>
                  </appoptcommon:FieldId>
               </xsl:if>              
               <xsl:if test="ns2:FieldInq/text()">
                  <appoptcommon:FieldInq>
                     <xsl:value-of select="ns2:FieldInq"/>
                  </appoptcommon:FieldInq>
               </xsl:if>   
               <xsl:if test="ns2:FieldLabel/text()">
                  <appoptcommon:FieldLabel>
                     <xsl:value-of select="ns2:FieldLabel"/>
                  </appoptcommon:FieldLabel>
               </xsl:if>    
               <xsl:if test="ns2:FieldType/text()">
                  <appoptcommon:FieldType>
                     <xsl:value-of select="ns2:FieldType"/>
                  </appoptcommon:FieldType>
               </xsl:if>    
               <xsl:if test="ns2:ListValues/text()">
                  <appoptcommon:ListValues>
                     <xsl:value-of select="ns2:ListValues"/>
                  </appoptcommon:ListValues>
               </xsl:if>               
               <xsl:if test="ns2:ServiceField/text()">
                  <appoptcommon:ServiceField>
                     <xsl:value-of select="ns2:ServiceField"/>
                  </appoptcommon:ServiceField>
               </xsl:if>    
               <xsl:if test="ns2:ServiceOper/text()">
                  <appoptcommon:ServiceOper>
                     <xsl:value-of select="ns2:ServiceOper"/>
                  </appoptcommon:ServiceOper>
               </xsl:if>
               <xsl:if test="ns2:Restriction">
                  <appoptcommon:Restriction>
                     <xsl:if test="ns2:Restriction/ns2:IsReadOnly/text()">
                        <appoptcommon:IsReadOnly>
                           <xsl:value-of select="ns2:Restriction/ns2:IsReadOnly"/>
                        </appoptcommon:IsReadOnly>
                     </xsl:if>
                     <xsl:if test="ns2:Restriction/ns2:MaxLenght/text()">
                        <appoptcommon:MaxLenght>
                           <xsl:value-of select="ns2:Restriction/ns2:MaxLenght"/>
                        </appoptcommon:MaxLenght>
                     </xsl:if>
                     <xsl:if test="ns2:Restriction/ns2:MaxValue/text()">
                        <appoptcommon:MaxValue>
                           <xsl:value-of select="ns2:Restriction/ns2:MaxValue"/>
                        </appoptcommon:MaxValue>
                     </xsl:if>
                     <xsl:if test="ns2:Restriction/ns2:MinLenght/text()">
                        <appoptcommon:MinLenght>
                           <xsl:value-of select="ns2:Restriction/ns2:MinLenght"/>
                        </appoptcommon:MinLenght>
                     </xsl:if>
                     <xsl:if test="ns2:Restriction/ns2:MinValue/text()">
                        <appoptcommon:MinValue>
                           <xsl:value-of select="ns2:Restriction/ns2:MinValue"/>
                        </appoptcommon:MinValue>
                     </xsl:if>
                  </appoptcommon:Restriction>
               </xsl:if>
            </tns:Field>
         </xsl:for-each>
         <tns:Status>
            <appoptcommon:StatusCode>
               <xsl:value-of select="/ns0:BillersRulesInqRs/ns0:Status/eoStatus:StatusCode"/>
            </appoptcommon:StatusCode>
            <appoptcommon:StatusDesc>
               <xsl:value-of select="/ns0:BillersRulesInqRs/ns0:Status/eoStatus:StatusDesc"/>
            </appoptcommon:StatusDesc>
         </tns:Status>
      </tns:BillersRulesInqRs>
   </xsl:template>
</xsl:stylesheet>
