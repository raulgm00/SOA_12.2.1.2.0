package org.bcie.fenix.common.model.eo;import oracle.jbo.AttributeList;import oracle.jbo.Key;import oracle.jbo.RowIterator;import oracle.jbo.server.EntityDefImpl;import oracle.jbo.server.EntityImpl;import oracle.jbo.server.TransactionEvent;// ---------------------------------------------------------------------// ---    File generated by Oracle ADF Business Components Design Time.// ---    Mon Oct 24 14:38:10 CDT 2016// ---    Custom code may be added to this class.// ---    Warning: Do not modify method signatures of generated methods.// ---------------------------------------------------------------------public class DocumentoCalendarioEOImpl extends EntityImpl {    /**     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.     */    public enum AttributesEnum {        Id,        IdCondicionFinanciera,        TipoPago,        NombreDocumento,        CondicionesFinancierasEO,        AdjuntoDocumentoEO;        private static AttributesEnum[] vals = null;        private static final int firstIndex = 0;        public int index() {            return AttributesEnum.firstIndex() + ordinal();        }        public static final int firstIndex() {            return firstIndex;        }        public static int count() {            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;        }        public static final AttributesEnum[] staticValues() {            if (vals == null) {                vals = AttributesEnum.values();            }            return vals;        }    }    public static final int ID = AttributesEnum.Id.index();    public static final int IDCONDICIONFINANCIERA = AttributesEnum.IdCondicionFinanciera.index();    public static final int TIPOPAGO = AttributesEnum.TipoPago.index();    public static final int NOMBREDOCUMENTO = AttributesEnum.NombreDocumento.index();    public static final int CONDICIONESFINANCIERASEO = AttributesEnum.CondicionesFinancierasEO.index();    public static final int ADJUNTODOCUMENTOEO = AttributesEnum.AdjuntoDocumentoEO.index();    /**     * This is the default constructor (do not remove).     */    public DocumentoCalendarioEOImpl() {    }    /**     * @return the definition object for this instance class.     */    public static synchronized EntityDefImpl getDefinitionObject() {        return EntityDefImpl.findDefObject("org.bcie.fenix.common.model.eo.DocumentoCalendarioEO");    }    /**     * Gets the attribute value for Id, using the alias name Id.     * @return the value of Id     */    public Long getId() {        return (Long) getAttributeInternal(ID);    }    /**     * Sets <code>value</code> as the attribute value for Id.     * @param value value to set the Id     */    public void setId(Long value) {        setAttributeInternal(ID, value);    }    /**     * Gets the attribute value for IdCondicionFinanciera, using the alias name IdCondicionFinanciera.     * @return the value of IdCondicionFinanciera     */    public Long getIdCondicionFinanciera() {        return (Long) getAttributeInternal(IDCONDICIONFINANCIERA);    }    /**     * Sets <code>value</code> as the attribute value for IdCondicionFinanciera.     * @param value value to set the IdCondicionFinanciera     */    public void setIdCondicionFinanciera(Long value) {        setAttributeInternal(IDCONDICIONFINANCIERA, value);    }    /**     * Gets the attribute value for TipoPago, using the alias name TipoPago.     * @return the value of TipoPago     */    public String getTipoPago() {        return (String) getAttributeInternal(TIPOPAGO);    }    /**     * Sets <code>value</code> as the attribute value for TipoPago.     * @param value value to set the TipoPago     */    public void setTipoPago(String value) {        setAttributeInternal(TIPOPAGO, value);    }    /**     * Gets the attribute value for NombreDocumento, using the alias name NombreDocumento.     * @return the value of NombreDocumento     */    public String getNombreDocumento() {        return (String) getAttributeInternal(NOMBREDOCUMENTO);    }    /**     * Sets <code>value</code> as the attribute value for NombreDocumento.     * @param value value to set the NombreDocumento     */    public void setNombreDocumento(String value) {        setAttributeInternal(NOMBREDOCUMENTO, value);    }    /**     * @return the associated entity oracle.jbo.server.EntityImpl.     */    public EntityImpl getCondicionesFinancierasEO() {        return (EntityImpl) getAttributeInternal(CONDICIONESFINANCIERASEO);    }    /**     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.     */    public void setCondicionesFinancierasEO(EntityImpl value) {        setAttributeInternal(CONDICIONESFINANCIERASEO, value);    }    /**     * @return the associated entity oracle.jbo.RowIterator.     */    public RowIterator getAdjuntoDocumentoEO() {        return (RowIterator) getAttributeInternal(ADJUNTODOCUMENTOEO);    }    /**     * @param id key constituent     * @return a Key object based on given key constituents.     */    public static Key createPrimaryKey(Long id) {        return new Key(new Object[] { id });    }    /**     * Add attribute defaulting logic in this method.     * @param attributeList list of attribute names/values to initialize the row     */    protected void create(AttributeList attributeList) {        super.create(attributeList);    }    /**     * Add entity remove logic in this method.     */    public void remove() {        super.remove();    }    /**     * Add locking logic here.     */    public void lock() {        super.lock();    }    /**     * Custom DML update/insert/delete logic here.     * @param operation the operation type     * @param e the transaction event     */    protected void doDML(int operation, TransactionEvent e) {        super.doDML(operation, e);    }}