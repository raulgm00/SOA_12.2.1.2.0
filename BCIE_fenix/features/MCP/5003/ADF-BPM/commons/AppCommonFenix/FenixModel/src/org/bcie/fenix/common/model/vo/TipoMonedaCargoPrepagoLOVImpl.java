package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import java.util.HashMap;
import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.FenixModelConstants;
import org.bcie.fenix.common.model.vo.common.TipoMonedaCargoPrepagoLOV;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 23 11:52:39 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TipoMonedaCargoPrepagoLOVImpl extends ViewObjectImpl implements TipoMonedaCargoPrepagoLOV {
    /**
     * This is the default constructor (do not remove).
     */
    private static ADFLogger logger = null;
    public TipoMonedaCargoPrepagoLOVImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for pIdPrepago.
     * @return bind variable value for pIdPrepago
     */
    public Long getpIdPrepago() {
        return (Long) getNamedWhereClauseParam("pIdPrepago");
    }

    /**
     * Sets <code>value</code> for bind variable pIdPrepago.
     * @param value value to bind as pIdPrepago
     */
    public void setpIdPrepago(Long value) {
        logger.log(ADFLogger.WARNING, "INTO setpIdPrepago" + value);
        setNamedWhereClauseParam("pIdPrepago", value);
        executeQuery();
        logger.log(ADFLogger.WARNING, "Se ejecuto correctamente SQL" + value);
    }
    
    public Map obtenerDescripcionMonedaByIdPrepago(Long idPrepago){
        
        logger.log(ADFLogger.WARNING, "INTO obtenerDescripcionMonedaByIdPrepago.");
        
        Map<String,Object> atributosPenalidadPrepagoMap = new HashMap<String,Object>();
        String nombreMonedaDolar = null;
        String nombreMonedaLocal = null;
        setpIdPrepago(idPrepago);
        Integer tipoMoneda = null;
        
        RowSetIterator rowsCategoriaVo = createRowSetIterator(null);
        rowsCategoriaVo.reset();
            while (rowsCategoriaVo.hasNext()) {
                TipoMonedaCargoPrepagoLOVRowImpl rowL = (TipoMonedaCargoPrepagoLOVRowImpl) rowsCategoriaVo.next();
                
                    tipoMoneda = (Integer)rowL.getAttribute("Id");
                    logger.warning("Valor tipoMoneda : " + tipoMoneda);
                if(tipoMoneda.compareTo(FenixModelConstants.MONEDA_USD) == 0){
                    logger.warning("Valor tipoMoneda en Dolares: " + tipoMoneda);
                    if(null != rowL.getAttribute("DescripcionCorta")){
                    nombreMonedaDolar = (String)rowL.getAttribute("DescripcionCorta");
                    }else{
                        logger.warning("Valor DescripcionCorta nombreMonedaDolar es nulo.");
                    }
                }else{
                    logger.warning("Valor tipoMoneda en moneda Local: " + tipoMoneda);
                    if(null != rowL.getAttribute("DescripcionCorta")){
                    nombreMonedaLocal = (String)rowL.getAttribute("DescripcionCorta");
                    }else{
                        logger.warning("Valor DescripcionCorta nombreMonedaLocal es nulo.");
                    }
                }
                    logger.warning("Monto DescripcionCorta: " + rowL.getAttribute("DescripcionCorta"));
                }
        logger.warning("Moneda nombreMonedaLocal: " + nombreMonedaLocal);
        logger.warning("Monda nombreMonedaDolar: " + nombreMonedaDolar);
        rowsCategoriaVo.closeRowSetIterator();
        //Se agrega la lista con los nombres de la moneda del prepago
        atributosPenalidadPrepagoMap.put("nombreMonedaLocal", nombreMonedaLocal);
        atributosPenalidadPrepagoMap.put("nombreMonedaDolar", nombreMonedaDolar);
        
        return atributosPenalidadPrepagoMap;
    }
}

