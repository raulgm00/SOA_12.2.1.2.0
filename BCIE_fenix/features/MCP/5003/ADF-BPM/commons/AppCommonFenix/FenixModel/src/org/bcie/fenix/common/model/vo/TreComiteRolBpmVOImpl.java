package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TreComiteRolBpmVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 11 12:25:24 CST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TreComiteRolBpmVOImpl extends ViewObjectImpl implements TreComiteRolBpmVO {
    
    private static ADFLogger logger = null;
    /**
     * This is the default constructor (do not remove).
     */
    public TreComiteRolBpmVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public Integer buscarIdTreComiteRolBpmPorNombreRol(String nombreRol){
        logger.warning("Dentro de buscarIdTreComiteRolBpmPorNombreRol");
        logger.warning("nombreRol : "+nombreRol);
        //declaracion de variables
        Integer id = null;
        ViewCriteria criteria = null;
        Row row = null;
        
        try {
            //asignar el criterio de busqueda
            criteria = getViewCriteriaManager().getViewCriteria("TreComiteRolBpmVOPorNombreRolCriteria"); 
            //asignar el  filtro de busqueda
            criteria.ensureVariableManager().setVariableValue("varNombreRol", nombreRol);      
            //aplicar criterio
            applyViewCriteria(criteria);
            executeQuery();
            
            logger.warning("Cantidad de registros :"+this.getEstimatedRowCount()+"  con el nombreRol :"
                            +nombreRol + "  en TreComiteRolBpmVO");
        
            //validar que existan registros con el criterio de busqueda sugerido
            if (this.getEstimatedRowCount() > 0) {  
                
                row = this.getRowAtRangeIndex(0);
                id = (Integer) row.getAttribute("Id");
                logger.warning("id :"+id);
    
            } else {
                logger.severe("No existe registro con nombreRol: "+nombreRol 
                                + " en TreComiteRolBpmVO");     
            }

        } catch (Exception e) {
            
            logger.severe("Error en buscarIdTreComiteRolBpmPorNombreRol",e);

        } finally {
            //removemos el criterio de busqueda
            getViewCriteriaManager().removeApplyViewCriteriaName("TreComiteRolBpmVOPorNombreRolCriteria");
        }    
        
        logger.warning("id :"+id);
        logger.warning("Fuera de buscarIdTreComiteRolBpmPorNombreRol");
        
        //retornamos id
        return id;
    }

    /**
     * Returns the variable value for varNombreRol.
     * @return variable value for varNombreRol
     */
    public String getvarNombreRol() {
        return (String) ensureVariableManager().getVariableValue("varNombreRol");
    }

    /**
     * Sets <code>value</code> for variable varNombreRol.
     * @param value value to bind as varNombreRol
     */
    public void setvarNombreRol(String value) {
        ensureVariableManager().setVariableValue("varNombreRol", value);
    }
}

