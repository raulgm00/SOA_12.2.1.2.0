package org.bcie.fenix.common.model.vo.common;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Map;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;

import oracle.sql.TIMESTAMP;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 14 12:27:32 CST 2016
// ---------------------------------------------------------------------
public interface NoObjecionVO extends ViewObject {
    void setvarIdAdquisicion(Long value);


    Boolean precargaNoObjecion(Long idNoObjecion, Integer tipo, Integer resultadoProceso);

    Map precargarAdquisicion(Long idAdquisicion, Long idNoObjecion);

    String comitNoObjecion();

    Boolean rollBackNoObjecion();


    void crearRowOferente(Long idNoObjecion);


    void crearRowAdjudicatario(Long idNoObjecion);

    void crearRowContratado(Long idNoObjecion);


    Boolean validaCamposEmitir();
    Boolean iniciarProceso(Long idAdquisicion, Long idNoObjecion, Long idOperacion, String usuario);


    void eliminarConcursantes();

    void adjudicarOferente(Long id);

    void eliminarOferente(Long id);

    void contratarAdjudicatario(Long id);

    void removerAdjudicatario(Long id);

    void eliminarAdjudicatario(Long id);

    void removerContratado(Long id);

    void eliminarContratado(Long id);


    Long agregar(Long idAdquisicion);

    Map validarCampos(Long idAdquisicion);

    Map validarCamposEmision();

    void precargaModalidad(Integer modalidad);

    void recargaConcursantes(Long idNoObjecion);

    void seleccionarNoObjecion(Long idNoObjecion);

    Map recuperaDatos(Long idObjecion);

    Boolean setCurrentRowNoObjecion(Long idNoObjecion);

    void obtenerNoObjecion();
    
    void precargaConcursantes(Long idNoObjecion, Integer idTcaTipoNoObjecion);

    Map obtenerRowNoObjecion(Long idNoObjecion);

    String actualizaEmitirRespuesta(Long idObjecion, String correspondencia, TIMESTAMP fechaFirma, Boolean revisado, Boolean otorgado);

    Map obtenerTipoResultado(Long idObjecion);

    Map crearDoc(long adquisicionId, Long noObjecion, Integer vistaPublicar);

    void recargaConcursantes2(Long idNoObjecion, Integer tipo);

    void seleccionarNoObjecion2(Long idNoObjecion, Integer modalidad);

    Boolean validarNoObjecion(Long idAdquisicion, Long noObjecion);

    String comitNoObjecionRealizar(Long idNoObjecion);

    void precargaModalidadTarea(Integer modalidad, Long idNoObjecion);

    boolean validarMontoAdjudicatarios(Long idAdquisicion, Long idNoObjecion);

    void setDatosFormNoObjecion(Timestamp fechaPublicacion, Timestamp fechaInicioDispDoctoBase,
                                Timestamp fechaFinDispDoctoBase, Timestamp fechaRecepcionPropuesta,
                                String lugarObtenerDoctoBase, String correoInformacionAdicional,
                                String dirPresentacionPropuesta);


    Row crearRowOferenteByExcel(Long idNoObjecion, String nombre, String nacionalidad);

    Row adjudicarOferenteByExcel(Row oferente, String nacionalidad, BigDecimal monto);
}

