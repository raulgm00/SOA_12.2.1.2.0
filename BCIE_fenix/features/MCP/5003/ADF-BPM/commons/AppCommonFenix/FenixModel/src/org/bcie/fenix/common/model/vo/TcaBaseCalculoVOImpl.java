package org.bcie.fenix.common.model.vo;import oracle.adf.share.logging.ADFLogger;import oracle.jbo.Row;import oracle.jbo.ViewCriteria;import oracle.jbo.server.ViewObjectImpl;import org.bcie.fenix.common.model.vo.common.TcaBaseCalculoVO;// ---------------------------------------------------------------------// ---    File generated by Oracle ADF Business Components Design Time.// ---    Mon Oct 24 13:46:19 CDT 2016// ---    Custom code may be added to this class.// ---    Warning: Do not modify method signatures of generated methods.// ---------------------------------------------------------------------public class TcaBaseCalculoVOImpl extends ViewObjectImpl implements TcaBaseCalculoVO {    private static ADFLogger logger = ADFLogger.createADFLogger(TcaBaseCalculoVOImpl.class);    /**     * This is the default constructor (do not remove).     */    public TcaBaseCalculoVOImpl() {    }        public Boolean getBaseCalculo(){        logger.log(ADFLogger.WARNING, " <-> getBaseCalculo <-> ");        Boolean error = Boolean.TRUE;        Row[] row = null;         Integer banEstatus = 1;        ViewCriteria criteria = null;        try{            criteria = this.getViewCriteriaManager().getViewCriteria("BaseCalculoConBanEstatusCriteria");            criteria.ensureVariableManager().setVariableValue("pBanEstauts", banEstatus);            this.applyViewCriteria(criteria);            this.executeQuery();            row = this.getAllRowsInRange();            if(row != null){                if(row.length > 0){                    error = Boolean.FALSE;                }           }else{                logger.log(ADFLogger.WARNING, "NULL <- getBaseCalculo ->");           }        }catch(Exception e){            logger.log(ADFLogger.WARNING, "Error en getBaseCalculo " + e.getClass() +                                ":" + e.getMessage());        }        this.getViewCriteriaManager().removeApplyViewCriteriaName("BaseCalculoConBanEstatusCriteria");        return error;    }    /**     * Returns the variable value for pBanEstauts.     * @return variable value for pBanEstauts     */    public Integer getpBanEstauts() {        return (Integer) ensureVariableManager().getVariableValue("pBanEstauts");    }    /**     * Sets <code>value</code> for variable pBanEstauts.     * @param value value to bind as pBanEstauts     */    public void setpBanEstauts(Integer value) {        ensureVariableManager().setVariableValue("pBanEstauts", value);    }}