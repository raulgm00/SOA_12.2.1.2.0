package org.bcie.fenix.common.model.vo;

import java.sql.ResultSet;

import java.sql.Timestamp;
import java.math.BigDecimal;

import java.util.ArrayList;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;

import org.bcie.fenix.common.model.vo.common.FormularioDetallePenalidadVO;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 07 18:08:02 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FormularioDetallePenalidadVOImpl extends ViewObjectImpl implements FormularioDetallePenalidadVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public FormularioDetallePenalidadVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void limpiarFormularioDetallePenalidadVO(){
        //limpiar rows de FormularioDetallePenalidadVO
        this.clearCache();
    }
    
    public void crearRowFormularioDetallePenalidad(Timestamp fechaInicio,Timestamp fechaFin,BigDecimal plazo,
                                                    BigDecimal spread,String fraccionLibor,BigDecimal tasaPrepago,
                                                        BigDecimal montoPenalidad,BigDecimal intereses,
                                                            Long idTrePrepagoContrato,String contratoDesembolso,
                                                                String moneda,String resolucion,BigDecimal montoPrepago,
                                                                    Timestamp proximoPago){
        logger.log(ADFLogger.WARNING, "Into crearRowFormularioDetallePenalidad.");
        logger.log(ADFLogger.WARNING, "Valor del monto de la penalidad." + montoPenalidad);
        Row row = this.createRow();
        row.setAttribute(FormularioDetallePenalidadVORowImpl.IDTREPREPAGOCONTRATO,idTrePrepagoContrato);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.CONTRATODESEMBOLSO,contratoDesembolso);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.MONEDA,moneda);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.RESOLUCION,resolucion);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.FECHAINICIO,fechaInicio);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.FECHAFIN,fechaFin);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.PLAZO,plazo);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.SPREAD,spread);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.FRACCIONLIBOR,fraccionLibor);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.TASAPREPAGO,tasaPrepago);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.MONTOPENALIDAD,montoPenalidad);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.INTERESES,intereses);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.MONTOPREPAGO,montoPrepago);
        row.setAttribute(FormularioDetallePenalidadVORowImpl.PROXIMOPAGO, proximoPago);
        this.insertRow(row);
        this.setCurrentRow(row); // Asignamos  row como current
        logger.log(ADFLogger.WARNING,"insert row succesfull : " + row.getAttribute("Id"));
    }
    
    
    public List<BigDecimal> obtenerListaPlazo(){
        logger.warning("Dentro obtenerListaPlazo");
        List<BigDecimal> listaPlazo = new ArrayList<BigDecimal>();
        BigDecimal plazo;
        this.setRangeSize(-1);
        for(Row row : this.getAllRowsInRange()){
            plazo = null;
            
            try{
                plazo = (BigDecimal) row.getAttribute("Plazo");
            }catch(Exception e){
                logger.severe("Error al recuperar Plazo en FormularioDetallePenalidadVO :",e);
            }
            
            if(null != plazo){
                logger.warning("plazo : "+plazo);
                listaPlazo.add(plazo);
            }
        }
        logger.warning("Fuera obtenerListaPlazo return : "+listaPlazo);
        return listaPlazo;
    }
    
    
    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }
}

