package org.bcie.fenix.common.model.vo;

import java.util.ArrayList;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.CatPaisesVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 01 15:54:29 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CatPaisesVOImpl extends ViewObjectImpl implements CatPaisesVO {
    public static ADFLogger logger = null;
    /**
     * This is the default constructor (do not remove).
     */
    public CatPaisesVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the variable value for varNombre.
     * @return variable value for varNombre
     */
    public String getvarNombre() {
        return (String) ensureVariableManager().getVariableValue("varNombre");
    }

    /**
     * Sets <code>value</code> for variable varNombre.
     * @param value value to bind as varNombre
     */
    public void setvarNombre(String value) {
        ensureVariableManager().setVariableValue("varNombre", value);
    }
    
    public Integer idPais(String nombre){
            logger.warning("metodo idPais nombre: " + nombre);
            Integer resultado=null;
            Row row=null;
            ViewCriteria criteriaByClienteInstanciaProceso = null;
            if(nombre != null) {
                   criteriaByClienteInstanciaProceso=this.getViewCriteriaManager().getViewCriteria("CatPaisesVOCriteria");
                    criteriaByClienteInstanciaProceso.ensureVariableManager().setVariableValue("varNombre", nombre);
                    
                    this.applyViewCriteria(criteriaByClienteInstanciaProceso);
                    this.executeQuery();
                    
                    // 2) Asignamos valor de retorno
                    if(this.getEstimatedRowCount() > 0) {
                    row = this.getRowAtRangeIndex(0);
                    if(null!= row.getAttribute("Id")){
                        resultado=(Integer)row.getAttribute("Id");
                        }
                    
                    // Removemos criteria del VO
                    this.getViewCriteriaManager().removeApplyViewCriteriaName("CatPaisesVOCriteria");
                    
                    // Re-ejecutamos el query 
                   // this.executeQuery();
                    }
                    }
            logger.warning("resultado del pais obtenido: " + resultado);
        return resultado;
        }
    
    public List lista(String nombre){
        List <String> resultado=new ArrayList<String>();
        String nombreObtenido=null;
            logger.warning("metodo idPais nombre: " + nombre);
            Row row=null;
            ViewCriteria criteriaByClienteInstanciaProceso = null;
            if(nombre != null) {
                   criteriaByClienteInstanciaProceso=this.getViewCriteriaManager().getViewCriteria("CatPaisesVOCriteriaNombre");
                    criteriaByClienteInstanciaProceso.ensureVariableManager().setVariableValue("varNombre", nombre);
                    
                    this.applyViewCriteria(criteriaByClienteInstanciaProceso);
                    this.executeQuery();
                    
                    // 2) Asignamos valor de retorno
                    if(this.getEstimatedRowCount() > 0) {
                        RowSetIterator rowsPaises = createRowSetIterator(null);
                        rowsPaises.reset();
                        
                        while (rowsPaises.hasNext()) {
                            CatPaisesVORowImpl activo = (CatPaisesVORowImpl) rowsPaises.next();
                            logger.warning("Pais obtenido: "+activo.getAttribute("Descripcion"));
                            if(null!=activo.getAttribute("Descripcion")){
                                nombreObtenido=(String)activo.getAttribute("Descripcion");
                                resultado.add(nombreObtenido);
                                }
                        }
                        rowsPaises.closeRowSetIterator();
                        
                    // Removemos criteria del VO
                    this.getViewCriteriaManager().removeApplyViewCriteriaName("CatPaisesVOCriteriaNombre");
                    
                    }
                    }
        return resultado;
        }
}

