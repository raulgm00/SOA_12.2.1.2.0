package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.VcaCtasClientePasivasVO;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 27 11:30:06 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VcaCtasClientePasivasVOImpl extends ViewObjectImpl implements VcaCtasClientePasivasVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public VcaCtasClientePasivasVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for pCodigoCliente.
     * @return bind variable value for pCodigoCliente
     */
    public String getpCodigoCliente() {
        return (String) getNamedWhereClauseParam("pCodigoCliente");
    }

    /**
     * Sets <code>value</code> for bind variable pCodigoCliente.
     * @param value value to bind as pCodigoCliente
     */
    public void setpCodigoCliente(String codigoClientePasivo) {
        setNamedWhereClauseParam("pCodigoCliente", codigoClientePasivo);
    }

    /**
     * Returns the bind variable value for pMoneda.
     * @return bind variable value for pMoneda
     */
    public String getpMoneda() {
        return (String) getNamedWhereClauseParam("pMoneda");
    }

    /**
     * Sets <code>value</code> for bind variable pMoneda.
     * @param value value to bind as pMoneda
     */
    public void setpMoneda(String moneda) {
        setNamedWhereClauseParam("pMoneda", moneda);
    }
    
    public void ejecutarBusquedaCuentas(String pCodigoCliente, String pMoneda){
        logger.warning("Inicia metodo ejecutarBusquedaCuentas");
        
        if(null == pCodigoCliente || null == pMoneda){
            logger.warning("Parametros de query son NULL");
            return;
        }
        setpCodigoCliente(pCodigoCliente);
        setpMoneda(pMoneda);
        
        logger.warning("Ejecutando query");
        executeQuery();
        logger.warning("Registros encontrados: " + getEstimatedRowCount());
        
        logger.warning("Termina metodo ejecutarBusquedaCuentas");
    }
}

