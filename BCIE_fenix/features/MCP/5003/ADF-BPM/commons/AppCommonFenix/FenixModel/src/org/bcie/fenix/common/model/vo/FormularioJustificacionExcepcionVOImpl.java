package org.bcie.fenix.common.model.vo;

import java.sql.ResultSet;

import java.sql.Timestamp;

import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;

import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.vo.common.FormularioJustificacionExcepcionVO;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 14 17:56:13 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FormularioJustificacionExcepcionVOImpl extends ViewObjectImpl implements FormularioJustificacionExcepcionVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public FormularioJustificacionExcepcionVOImpl() {
        
        if (logger == null){
            logger = ADFLogger.createADFLogger(FormularioJustificacionExcepcionVOImpl.class);
        }
    }


    public void crearRowFormularioJustificacionExcepcion(
                                                         Integer idTcaTareaBpm, Long idSolicitud, 
                                                         String instanciaProceso,
                                                         String loginUsuario,String nombreUsuario, Integer idRol){
        
        logger.log(ADFLogger.WARNING, "Into crearRowFormularioJustificacionExcepcion.");
        logger.log(ADFLogger.WARNING, "idTcaTareaBpm : " +idTcaTareaBpm);
        logger.log(ADFLogger.WARNING, "idSolicitud : " +idSolicitud);
        logger.log(ADFLogger.WARNING, "instanciaProceso : " +instanciaProceso);
        logger.log(ADFLogger.WARNING, "loginUsuario : " +loginUsuario);
        
        nombreUsuario = (null == obtenerNombre(loginUsuario))? nombreUsuario : obtenerNombre(loginUsuario);
        
        logger.log(ADFLogger.WARNING, "nombreUsuario : " +nombreUsuario);
        logger.log(ADFLogger.WARNING, "idRol : " +idRol);
       
        this.clearCache();
        Row row = this.createRow();
        row.setAttribute(FormularioJustificacionExcepcionVORowImpl.IDTCATAREABPM, idTcaTareaBpm);
        row.setAttribute(FormularioJustificacionExcepcionVORowImpl.IDSOLICITUD, idSolicitud);
        row.setAttribute(FormularioJustificacionExcepcionVORowImpl.INSTANCIAPROCESO, instanciaProceso);
        row.setAttribute(FormularioJustificacionExcepcionVORowImpl.LOGINUSUARIO, loginUsuario);
        row.setAttribute(FormularioJustificacionExcepcionVORowImpl.NOMBREUSUARIO, nombreUsuario);
        row.setAttribute(FormularioJustificacionExcepcionVORowImpl.IDROL, idRol);
        this.insertRowAtRangeIndex(0, row); 
        this.setCurrentRow(row); // Asignamos nuevo row como current
    } 
    
    
    
    public String obtenerNombre(String login){
        logger.warning("Inicia metodo obtenerNombre");
        String respuesta=null;
        Map<String, Object> servicioLogin=null;
         
        try{   
            FenixAMImpl fenixAMImpl= null;
            fenixAMImpl= (FenixAMImpl) this.getRootApplicationModule();
            
            if(null!=login){
                respuesta = login;
                servicioLogin = fenixAMImpl.consultarAtributosUsuario(login);
                if(null!=servicioLogin){
                    if(null!=servicioLogin.get("nombreUsuario")){
                         respuesta=(String)servicioLogin.get("nombreUsuario");
                        }
                    }
                }
            }catch(Exception e){
                logger.warning("ha ocurrido un error al consultar el nombre del usuario ",e);                 
            }
        logger.warning("termina metodo obtenerNombre retorno: "+respuesta);
        return respuesta;
        }
    
    
}

