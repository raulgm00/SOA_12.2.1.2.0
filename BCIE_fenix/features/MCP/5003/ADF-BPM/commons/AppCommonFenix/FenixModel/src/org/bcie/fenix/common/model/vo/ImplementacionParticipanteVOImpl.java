package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.vo.common.ImplementacionParticipanteVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 24 11:25:41 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ImplementacionParticipanteVOImpl extends ViewObjectImpl implements ImplementacionParticipanteVO {
    /**
     * This is the default constructor (do not remove).
     */
    public static ADFLogger logger = null;
    
    public ImplementacionParticipanteVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void crearRowParticipante(){
        logger.log(ADFLogger.WARNING, "INTO crearRowParticipante.");
        Row rowParticipante = this.createRow();
        //this.insertRow(rowParticipante);
        //this.setCurrentRow(rowParticipante);
        try{
            //this.insertRow(row);
            this.insertRowAtRangeIndex(0, rowParticipante);
            this.setCurrentRow(rowParticipante);
        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Error en crearRowParticipante." + e.getClass() + e.getMessage());
        }
    }
    
    public Boolean validarImplementacionParticipante(){
        logger.log(ADFLogger.TRACE, "INTO validarImplementacionParticipante.");
        
        String nombreParticipante = null;
        Integer idCatPais = null;
        
        Boolean validarFormulario = Boolean.FALSE;
        
        ImplementacionParticipanteVORowImpl formularioImplementacionParticipanteVORowImpl = (ImplementacionParticipanteVORowImpl)this.getCurrentRow();
        
        try{
            nombreParticipante = formularioImplementacionParticipanteVORowImpl.getNombreParticipante();
            idCatPais = formularioImplementacionParticipanteVORowImpl.getIdCatPaisParticipante();
            
            logger.warning("valor nombreParticipante obtenido del formulario: " + nombreParticipante);
            logger.warning("valor idCatPais obtenido del formulario: " + idCatPais);
            
            if(null != nombreParticipante && null != idCatPais){
                validarFormulario = Boolean.TRUE;
            }
            else{
                validarFormulario = Boolean.FALSE;
            }
        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Excepcion en validarImplementacionParticipante." + e.getClass() + e.getMessage()); 
        }
        
        return (validarFormulario);
    }
    
    public void eliminarRowImplementacionParticipante(){
        logger.log(ADFLogger.TRACE, "INTO eliminarRowImplementacionParticipante.");
        Row row = this.getCurrentRow();
        try{
            row.remove();
        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Error en eliminarRowImplementacionParticipante." + e.getClass() + e.getMessage());
        }
    }
    
    public void crearRowImplementacionParticipante(Long id, Long idLoteImplementacion, String nombreParticipante, 
                                                     Integer idCatPaisParticipante, String nombrePais){
        logger.log(ADFLogger.TRACE, "INTO crearRowImplementacionParticipante.");
        //this.clearCache();
        Row row = this.createRow();
        try{
            row.setAttribute(ImplementacionParticipanteVORowImpl.ID, id);
            row.setAttribute(ImplementacionParticipanteVORowImpl.IDIMPLEMENTACION, idLoteImplementacion);
            row.setAttribute(ImplementacionParticipanteVORowImpl.NOMBREPARTICIPANTE, nombreParticipante);
            row.setAttribute(ImplementacionParticipanteVORowImpl.IDCATPAISPARTICIPANTE, idCatPaisParticipante);
            row.setAttribute(ImplementacionParticipanteVORowImpl.PAISDESC, nombrePais);
            row.setAttribute(ImplementacionParticipanteVORowImpl.PAISNOMBRE, nombrePais);
            
            this.insertRow(row);
            //this.insertRowAtRangeIndex(0, row);
            //this.setCurrentRow(row); // Se asigna row como current (Fila actual)
        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Error en crearRowImplementacionParticipante." + e.getClass() + e.getMessage());
        }
    }
    
    public Boolean cambioPais(String nombrePais){
        logger.warning("Nombre: "+nombrePais);
        Boolean resultado=Boolean.FALSE;
        Row row = this.getCurrentRow();
        FenixAMImpl fenixAMImpl = (FenixAMImpl) this.getRootApplicationModule();
        Integer idPais=fenixAMImpl.getPaisesNombreVO().idPais(nombrePais);
        if(null!=row){
            if(null!=idPais){
                    row.setAttribute("IdCatPaisParticipante", idPais);
                    resultado=Boolean.TRUE;
                }
            }
        logger.warning("Resultado: " + resultado + " id obtenido: " + idPais);
        return resultado;
        }
    
    public Boolean cambioPais2(Integer idPais){
        logger.warning("idPais: "+idPais);
        Boolean resultado=Boolean.FALSE;
        Row row = this.getCurrentRow();
        if(null!=row){
            if(null!=idPais){
                    row.setAttribute("IdCatPaisParticipante", idPais);
                    resultado=Boolean.TRUE;
                }
            }
        logger.warning("Resultado: " + resultado + " id obtenido: " + idPais);
        return resultado;
        }
}

