-- ##--------------------------------------------------------------------------------------------##
-- Descripción:  Script que permite agregar, modificar, desactivar/activar la configuración de la herramienta de clasificación estratégica, así mismo, permite listar la información de dichas configuraciones.
/*
Acciones permitidas (P_ACCION):
1 - Agregar
2 - Modificar
3 - Desactivar
4 - Activar
5 - Listar los datos de la configuración de la HCE (TRE_HERRAMIENTA) en base a criterios de búsqueda indicados.
*/
-- ##--------------------------------------------------------------------------------------------##


CREATE OR REPLACE PROCEDURE SP_CONF_TRE_HERRAMIENTA (
	P_ACCION                       IN  NUMBER  	:= 0,		-- Indica el tipo de acción a ejecutar
	P_TIPO_CREACION                IN  NUMBER  	:= 0,		-- Identifica el tipo de configuración 1) Operación, 2) Desembolso
	P_ID_HCE                       IN  NUMBER	:= 0,   	-- Id del registro del catálogo de herramienta estratégica (TRE_HERRAMIENTA)
	P_ACTIVIDAD_ECONOMICA	  	   IN  VARCHAR2	:= NULL,	-- Código externo del catálogo de actividad económica (CAT_ACTIVIDAD_ECONOMICA)
	P_ID_INICIATIVA_ESTRATEGICA    IN  VARCHAR2	:= NULL,	-- Código externo del catálogo de iniciativa estratégica. (CAT_INICIATIVA_ESTRATEGICA)
	P_ID_RANGO_PAISES              IN  VARCHAR2	:= NULL,	-- Código externo del catálogo de rango de países (TCA_RANGO_PAISES)
	P_ID_AREA_FOCALIZACION         IN  VARCHAR2	:= NULL,	-- Código externo del catálogo de área de focalización (CAT_AREA_FOCALIZACION)
	P_ID_EJE_ESTRATEGICO           IN  VARCHAR2	:= NULL,	-- Código externo del catálogo de eje estratégico (CAT_EJE_ESTRATEGICO)
	P_ID_TCA_CICLO_ESTRATEGICO     IN  VARCHAR2	:= NULL,	-- Código externo del catálogo de ciclo estratégico (TCA_CICLO_ESTRATEGICO)
	P_ID_TCA_CLASIF_EMPRESARIAL    IN  VARCHAR2	:= NULL,	-- Código externo del catálogo de clasificación empresarial (TCA_CLASIFICACION_EMPRESARIAL)
	P_ID_TCA_PROYECTO_MUNICIPAL    IN  VARCHAR2	:= NULL,	-- Código externo del catálogo del proyecto municipal  (TCA_PROYECTO_MUNICIPAL)
	P_ACTIVIDAD_ECONOMICA_F1  	   IN  VARCHAR2	:= NULL,	-- Código externo del catálogo de actividad económica F1 (TCA_ACTIVIDAD_ECONOMICA_F1)
	P_CODIGO_PROGRAMA              IN  VARCHAR2	:= NULL,	-- Código externo del programa.
	P_PARAM_CRITERIO			   IN  T_PARAM_CRITERIO := T_PARAM_CRITERIO(),   -- Lista de campos de la entidad TRE_HERRAMIENTA, para iniciar la búsqueda
	P_PARAM_VALOR				   IN  T_PARAM_VALOR := T_PARAM_VALOR (),	--Lista de códigos externos a considerar en la búsqueda
	P_CODIGO_RES         		   OUT NUMBER				-- Indica el código de respuesta de la transacción.
)
AS
	err_num     			NUMBER;
	err_msg     			VARCHAR2 (255);
	
	TYPE_TRE_HERRAMIENTA  TRE_HERRAMIENTA%ROWTYPE;	
	v_accion				VARCHAR2 (250) := 'NO IDENTIFICADA';
	v_ID_TRE_HERRAMIENTA    NUMBER;   
	v_codeBlock				VARCHAR2(4000);
	v_criterio				VARCHAR2(4000);
	v_Error_msg	 		    VARCHAR2(100) := '';
	/* Se crean las variables para recuperar el ID en cuestión de las tbls relacionadas a partir del COD_EXTERNO de la HCE */
	
	v_ACTIVIDAD_ECONOMICA  	   	   NUMBER 		 := NULL;
	v_ID_INICIATIVA_ESTRATEGICA    NUMBER 		 := NULL;
	v_ID_RANGO_PAISES              NUMBER 		 := NULL;
	v_ID_AREA_FOCALIZACION         NUMBER 		 := NULL;
	v_ID_EJE_ESTRATEGICO           NUMBER 		 := NULL;
	v_ID_TCA_CICLO_ESTRATEGICO     NUMBER 		 := NULL;
	v_ID_TCA_CLASIF_EMPRESARIAL    NUMBER 		 := NULL;
	v_ID_TCA_PROYECTO_MUNICIPAL    NUMBER 		 := NULL;
	v_ACTIVIDAD_ECONOMICA_F1  	   NUMBER 		 := NULL;
	v_CODIGO_PROGRAMA			   VARCHAR2(255) := '';
	v_ID_HCE			  	   	   NUMBER 		 := NULL;
	
BEGIN
	P_CODIGO_RES := 0;
	IF (P_ACCION = 1)	-- Inserta datos en TRE_HERRAMIENTA
	THEN
		SELECT MAX (ID) INTO v_ID_TRE_HERRAMIENTA FROM TRE_HERRAMIENTA;
		v_ID_TRE_HERRAMIENTA := v_ID_TRE_HERRAMIENTA + 1;	
					
		IF(P_TIPO_CREACION = 1)   --- 'OPERACION'
        THEN
			-- Recupera a partir del código externo, el identificador de la entidad
			SELECT ID INTO v_ACTIVIDAD_ECONOMICA  FROM CAT_ACTIVIDAD_ECONOMICA WHERE COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA);
			
			SELECT ID INTO v_ID_INICIATIVA_ESTRATEGICA FROM CAT_INICIATIVA_ESTRATEGICA 
			WHERE ID_ACTIVIDAD = (SELECT ID FROM CAT_ACTIVIDAD_ECONOMICA WHERE COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA))
			AND COD_EXTERNO = UPPER(P_ID_INICIATIVA_ESTRATEGICA) AND TIPO_VARIABLE = 'A';   --- "A" APROBACION - OPERACION , "D" DESEMBOLSO 
			
			SELECT ID INTO v_ID_RANGO_PAISES FROM TCA_RANGO_PAISES WHERE  COD_EXTERNO = UPPER(P_ID_RANGO_PAISES);
			SELECT ID INTO v_ID_AREA_FOCALIZACION FROM CAT_AREA_FOCALIZACION WHERE  COD_EXTERNO = UPPER(P_ID_AREA_FOCALIZACION);
			SELECT ID INTO v_ID_EJE_ESTRATEGICO FROM CAT_EJE_ESTRATEGICO WHERE  COD_EXTERNO = UPPER(P_ID_EJE_ESTRATEGICO);
			SELECT ID INTO v_ID_TCA_CICLO_ESTRATEGICO FROM TCA_CICLO_ESTRATEGICO WHERE  COD_EXTERNO = UPPER(P_ID_TCA_CICLO_ESTRATEGICO);
			
			/*			
			SELECT ID INTO v_ID_TCA_CLASIF_EMPRESARIAL FROM TCA_CLASIFICACION_EMPRESARIAL  WHERE  COD_EXTERNO = P_ID_TCA_CLASIF_EMPRESARIAL;
			SELECT ID INTO v_ID_TCA_PROYECTO_MUNICIPAL FROM TCA_PROYECTO_MUNICIPAL  WHERE  COD_EXTERNO = P_ID_TCA_PROYECTO_MUNICIPAL;
			SELECT ID INTO v_ACTIVIDAD_ECONOMICA_F1 FROM TCA_ACTIVIDAD_ECONOMICA_F1  WHERE  COD_EXTERNO = P_ACTIVIDAD_ECONOMICA_F1;
			*/
			
			INSERT INTO TRE_HERRAMIENTA(ID,
							ID_INICIATIVA_ESTRATEGICA,
                            ID_RANGO_PAISES,
                            ID_AREA_FOCALIZACION,
                            ID_EJE_ESTRATEGICO,
                            BAN_ESTATUS,
                            FECHA_REGISTRO,
                            COD_EXTERNO,
                            ID_TCA_CICLO_ESTRATEGICO,
                            ID_TCA_CLASIF_EMPRESARIAL,
                            ID_TCA_PROYECTO_MUNICIPAL,
                            ID_TCA_ACTIVIDAD_ECONOMICA_F1,
                            CODIGO_PROGRAMA)                           
			VALUES (v_ID_TRE_HERRAMIENTA,
				v_ID_INICIATIVA_ESTRATEGICA,
				v_ID_RANGO_PAISES,
				v_ID_AREA_FOCALIZACION,
				v_ID_EJE_ESTRATEGICO,
				1,
				SYSDATE,
				'0',
				v_ID_TCA_CICLO_ESTRATEGICO,
				1,
				1,
				1,
				'OR');
			
			P_CODIGO_RES := 1;
			v_accion := 'INGRESAR CONFIGURACIÓN DE HCE <<OPERACION>>';       
			
		ELSIF(P_TIPO_CREACION = 2)  --- 'DESEMBOLSO'
        THEN 
			-- Recupera a partir del código externo, el identificador de la entidad
			SELECT ID INTO v_ACTIVIDAD_ECONOMICA  FROM CAT_ACTIVIDAD_ECONOMICA WHERE COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA);
			
			SELECT ID INTO v_ID_INICIATIVA_ESTRATEGICA FROM CAT_INICIATIVA_ESTRATEGICA 
			WHERE ID_ACTIVIDAD = (SELECT ID FROM CAT_ACTIVIDAD_ECONOMICA WHERE COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA))
			AND COD_EXTERNO = UPPER(P_ID_INICIATIVA_ESTRATEGICA) AND TIPO_VARIABLE = 'D';   --- "A" APROBACION - OPERACION , "D" DESEMBOLSO 
			
			SELECT ID INTO v_ID_RANGO_PAISES FROM TCA_RANGO_PAISES WHERE  COD_EXTERNO = UPPER(P_ID_RANGO_PAISES);
			SELECT ID INTO v_ID_AREA_FOCALIZACION FROM CAT_AREA_FOCALIZACION WHERE  COD_EXTERNO = UPPER(P_ID_AREA_FOCALIZACION);
			SELECT ID INTO v_ID_EJE_ESTRATEGICO FROM CAT_EJE_ESTRATEGICO WHERE  COD_EXTERNO = UPPER(P_ID_EJE_ESTRATEGICO);			
			SELECT ID INTO v_ID_TCA_CICLO_ESTRATEGICO FROM TCA_CICLO_ESTRATEGICO WHERE  COD_EXTERNO = UPPER(P_ID_TCA_CICLO_ESTRATEGICO);
			SELECT ID INTO v_ID_TCA_CLASIF_EMPRESARIAL FROM TCA_CLASIFICACION_EMPRESARIAL  WHERE  COD_EXTERNO = UPPER(P_ID_TCA_CLASIF_EMPRESARIAL);
			SELECT ID INTO v_ID_TCA_PROYECTO_MUNICIPAL FROM TCA_PROYECTO_MUNICIPAL  WHERE  COD_EXTERNO = UPPER(P_ID_TCA_PROYECTO_MUNICIPAL);
			SELECT ID INTO v_ACTIVIDAD_ECONOMICA_F1 FROM TCA_ACTIVIDAD_ECONOMICA_F1  WHERE  COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA_F1);
		
			-- Se valida que el programa se encuentre en la lista de programas
			SELECT CODIGO_LINEA_FINANCIERA INTO v_CODIGO_PROGRAMA  FROM VCA_PROGRAMA WHERE CODIGO_LINEA_FINANCIERA = UPPER(P_CODIGO_PROGRAMA);
			
			
			INSERT INTO TRE_HERRAMIENTA(ID,
							ID_INICIATIVA_ESTRATEGICA,
							ID_RANGO_PAISES,
							ID_AREA_FOCALIZACION,
							ID_EJE_ESTRATEGICO,
							BAN_ESTATUS,
							FECHA_REGISTRO,
							COD_EXTERNO,
							ID_TCA_CICLO_ESTRATEGICO,
							ID_TCA_CLASIF_EMPRESARIAL,
							ID_TCA_PROYECTO_MUNICIPAL,
							ID_TCA_ACTIVIDAD_ECONOMICA_F1,
							CODIGO_PROGRAMA)                           
			VALUES (v_ID_TRE_HERRAMIENTA,
				v_ID_INICIATIVA_ESTRATEGICA,
				v_ID_RANGO_PAISES,
				v_ID_AREA_FOCALIZACION,
				v_ID_EJE_ESTRATEGICO,
				1,
				SYSDATE,
				'0',
				v_ID_TCA_CICLO_ESTRATEGICO,
				v_ID_TCA_CLASIF_EMPRESARIAL,
				v_ID_TCA_PROYECTO_MUNICIPAL,
				v_ACTIVIDAD_ECONOMICA_F1,
				v_CODIGO_PROGRAMA);			
			
			P_CODIGO_RES := 1;
			v_accion := 'INGRESAR CONFIGURACIÓN DE HCE <<DESEMBOLSO>>';       
		ELSE
			P_CODIGO_RES := 0;
			v_accion := 'INGRESAR';
        END IF;

		
		IF (P_CODIGO_RES = 1 ) THEN
			COMMIT;
		ELSE
			ROLLBACK;
		END IF;
		
		
	ELSIF (P_ACCION = 2)	-- Modificar datos de TRE_HERRAMIENTA
	THEN
		IF (P_ID_HCE > 0) THEN
		
			v_ID_HCE := P_ID_HCE;
			DBMS_OUTPUT.PUT_LINE ('DENTRO DEL IF P_ID_HCE ');
		
			SELECT * INTO TYPE_TRE_HERRAMIENTA FROM  TRE_HERRAMIENTA WHERE ID = P_ID_HCE;
			
			IF(TYPE_TRE_HERRAMIENTA.CODIGO_PROGRAMA = 'OR')
			THEN
				DBMS_OUTPUT.PUT_LINE ('DENTRO DEL PROGRAMA OR');
				-- Recupera a partir del código externo, el identificador de la entidad
				
				IF (P_ID_INICIATIVA_ESTRATEGICA IS NOT NULL) 
				THEN			
					IF (P_ACTIVIDAD_ECONOMICA IS NULL) 
					THEN	
						v_ID_HCE := 0;
						DBMS_OUTPUT.PUT_LINE ('Se requiere que se ingrese el código externo de la actividad económica al modificar la iniciativa estratégica');
					ELSE
						-- Si iniciativa estratégica es no null, se requiere que se agregue la actividad económica, de lo contrario no se podrá modificar la iniciativa estratégica
						SELECT ID INTO v_ACTIVIDAD_ECONOMICA  FROM CAT_ACTIVIDAD_ECONOMICA WHERE COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA);
					
						SELECT ID INTO v_ID_INICIATIVA_ESTRATEGICA FROM CAT_INICIATIVA_ESTRATEGICA 
						WHERE ID_ACTIVIDAD = (SELECT ID FROM CAT_ACTIVIDAD_ECONOMICA WHERE COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA))
						AND COD_EXTERNO = UPPER(P_ID_INICIATIVA_ESTRATEGICA) AND TIPO_VARIABLE = 'A';   --- "A" APROBACION - OPERACION , "D" DESEMBOLSO 					
					END IF;				
				END IF;
				
				IF (P_ID_RANGO_PAISES IS NOT NULL) THEN SELECT ID INTO v_ID_RANGO_PAISES FROM TCA_RANGO_PAISES WHERE  COD_EXTERNO = UPPER(P_ID_RANGO_PAISES); END IF;
				IF (P_ID_AREA_FOCALIZACION IS NOT NULL) THEN SELECT ID INTO v_ID_AREA_FOCALIZACION FROM CAT_AREA_FOCALIZACION WHERE  COD_EXTERNO = UPPER(P_ID_AREA_FOCALIZACION); END IF;
				IF (P_ID_EJE_ESTRATEGICO IS NOT NULL) THEN SELECT ID INTO v_ID_EJE_ESTRATEGICO FROM CAT_EJE_ESTRATEGICO WHERE  COD_EXTERNO = UPPER(P_ID_EJE_ESTRATEGICO);  END IF;
				IF (P_ID_TCA_CICLO_ESTRATEGICO IS NOT NULL) THEN SELECT ID INTO v_ID_TCA_CICLO_ESTRATEGICO FROM TCA_CICLO_ESTRATEGICO WHERE  COD_EXTERNO = UPPER(P_ID_TCA_CICLO_ESTRATEGICO); END IF;
				
				/*			
				SELECT ID INTO v_ID_TCA_CLASIF_EMPRESARIAL FROM TCA_CLASIFICACION_EMPRESARIAL  WHERE  COD_EXTERNO = P_ID_TCA_CLASIF_EMPRESARIAL;
				SELECT ID INTO v_ID_TCA_PROYECTO_MUNICIPAL FROM TCA_PROYECTO_MUNICIPAL  WHERE  COD_EXTERNO = P_ID_TCA_PROYECTO_MUNICIPAL;
				SELECT ID INTO v_ACTIVIDAD_ECONOMICA_F1 FROM TCA_ACTIVIDAD_ECONOMICA_F1  WHERE  COD_EXTERNO = P_ACTIVIDAD_ECONOMICA_F1;
				*/
				
				
				UPDATE TRE_HERRAMIENTA  SET
							ID_INICIATIVA_ESTRATEGICA = NVL(v_ID_INICIATIVA_ESTRATEGICA, TYPE_TRE_HERRAMIENTA.ID_INICIATIVA_ESTRATEGICA),
							ID_RANGO_PAISES      = NVL(v_ID_RANGO_PAISES, TYPE_TRE_HERRAMIENTA.ID_RANGO_PAISES),
							ID_AREA_FOCALIZACION = NVL(v_ID_AREA_FOCALIZACION,TYPE_TRE_HERRAMIENTA.ID_AREA_FOCALIZACION),
							ID_EJE_ESTRATEGICO   = NVL(v_ID_EJE_ESTRATEGICO, TYPE_TRE_HERRAMIENTA.ID_EJE_ESTRATEGICO),
							ID_TCA_CICLO_ESTRATEGICO = NVL(v_ID_TCA_CICLO_ESTRATEGICO, TYPE_TRE_HERRAMIENTA.ID_TCA_CICLO_ESTRATEGICO)
				WHERE ID = v_ID_HCE; 
				
				IF SQL%FOUND THEN
					P_CODIGO_RES := 1;			
					COMMIT;
				ELSE	
					ROLLBACK;				
				END IF;			            
				
				v_accion := 'MODIFICAR LA CONFIGURACIÓN DE HCE <<OPERACION>>';       
				
			ELSE  --- Si se trata de otro programa diferente a OR
				-- Recupera a partir del código externo, el identificador de la entidad
				DBMS_OUTPUT.PUT_LINE ('PROGRAMA DIF A OR');
								
				IF (P_ID_INICIATIVA_ESTRATEGICA IS NOT NULL) 
				THEN			
					IF (P_ACTIVIDAD_ECONOMICA IS NULL) 
					THEN
						v_ID_HCE := 0;					
						DBMS_OUTPUT.PUT_LINE ('Se requiere que se ingrese el código externo de la actividad económica al modificar la iniciativa estratégica');
					ELSE
						-- Si iniciativa estratégica es no null, se requiere que se agregue la actividad económica, de lo contrario no se podrá modificar la iniciativa estratégica
						SELECT ID INTO v_ACTIVIDAD_ECONOMICA  FROM CAT_ACTIVIDAD_ECONOMICA WHERE COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA);
					
						SELECT ID INTO v_ID_INICIATIVA_ESTRATEGICA FROM CAT_INICIATIVA_ESTRATEGICA 
						WHERE ID_ACTIVIDAD = (SELECT ID FROM CAT_ACTIVIDAD_ECONOMICA WHERE COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA))
						AND COD_EXTERNO = UPPER(P_ID_INICIATIVA_ESTRATEGICA) AND TIPO_VARIABLE = 'D';   --- "A" APROBACION - OPERACION , "D" DESEMBOLSO 					
						
						DBMS_OUTPUT.PUT_LINE ('CAT_ACTIVIDAD_ECONOMICA : ' || v_ACTIVIDAD_ECONOMICA );
						DBMS_OUTPUT.PUT_LINE ('CAT_INICIATIVA_ESTRATEGICA : ' || v_ID_INICIATIVA_ESTRATEGICA );
					END IF;				
				END IF;
				
				IF (P_ID_RANGO_PAISES IS NOT NULL) THEN SELECT ID INTO v_ID_RANGO_PAISES FROM TCA_RANGO_PAISES WHERE  COD_EXTERNO = UPPER(P_ID_RANGO_PAISES); END IF;
				IF (P_ID_AREA_FOCALIZACION IS NOT NULL) THEN SELECT ID INTO v_ID_AREA_FOCALIZACION FROM CAT_AREA_FOCALIZACION WHERE  COD_EXTERNO = UPPER(P_ID_AREA_FOCALIZACION); END IF;
				IF (P_ID_EJE_ESTRATEGICO IS NOT NULL) THEN SELECT ID INTO v_ID_EJE_ESTRATEGICO FROM CAT_EJE_ESTRATEGICO WHERE  COD_EXTERNO = UPPER(P_ID_EJE_ESTRATEGICO);  END IF;
				IF (P_ID_TCA_CICLO_ESTRATEGICO IS NOT NULL) THEN SELECT ID INTO v_ID_TCA_CICLO_ESTRATEGICO FROM TCA_CICLO_ESTRATEGICO WHERE  COD_EXTERNO = UPPER(P_ID_TCA_CICLO_ESTRATEGICO); END IF;
				IF (P_ID_TCA_CLASIF_EMPRESARIAL IS NOT NULL) THEN SELECT ID INTO v_ID_TCA_CLASIF_EMPRESARIAL FROM TCA_CLASIFICACION_EMPRESARIAL  WHERE  COD_EXTERNO = UPPER(P_ID_TCA_CLASIF_EMPRESARIAL); END IF;
				IF (P_ID_TCA_PROYECTO_MUNICIPAL IS NOT NULL) THEN SELECT ID INTO v_ID_TCA_PROYECTO_MUNICIPAL FROM TCA_PROYECTO_MUNICIPAL  WHERE  COD_EXTERNO = UPPER(P_ID_TCA_PROYECTO_MUNICIPAL); END IF;
				IF (P_ACTIVIDAD_ECONOMICA_F1 IS NOT NULL) THEN SELECT ID INTO v_ACTIVIDAD_ECONOMICA_F1 FROM TCA_ACTIVIDAD_ECONOMICA_F1  WHERE  COD_EXTERNO = UPPER(P_ACTIVIDAD_ECONOMICA_F1); END IF;
				
				-- Se valida que el programa se encuentre en la lista de programas
				SELECT CODIGO_LINEA_FINANCIERA INTO v_CODIGO_PROGRAMA  FROM VCA_PROGRAMA WHERE CODIGO_LINEA_FINANCIERA = NVL(UPPER(P_CODIGO_PROGRAMA), TYPE_TRE_HERRAMIENTA.CODIGO_PROGRAMA);
				
				UPDATE TRE_HERRAMIENTA  SET
					ID_INICIATIVA_ESTRATEGICA = NVL(v_ID_INICIATIVA_ESTRATEGICA,TYPE_TRE_HERRAMIENTA.ID_INICIATIVA_ESTRATEGICA),
					ID_RANGO_PAISES      = NVL(v_ID_RANGO_PAISES, TYPE_TRE_HERRAMIENTA.ID_RANGO_PAISES),
					ID_AREA_FOCALIZACION = NVL(v_ID_AREA_FOCALIZACION,TYPE_TRE_HERRAMIENTA.ID_AREA_FOCALIZACION),
					ID_EJE_ESTRATEGICO   = NVL(v_ID_EJE_ESTRATEGICO , TYPE_TRE_HERRAMIENTA.ID_EJE_ESTRATEGICO),
					ID_TCA_CICLO_ESTRATEGICO = NVL(v_ID_TCA_CICLO_ESTRATEGICO, TYPE_TRE_HERRAMIENTA.ID_TCA_CICLO_ESTRATEGICO),
					ID_TCA_CLASIF_EMPRESARIAL = NVL(v_ID_TCA_CLASIF_EMPRESARIAL, TYPE_TRE_HERRAMIENTA.ID_TCA_CLASIF_EMPRESARIAL),
					ID_TCA_PROYECTO_MUNICIPAL = NVL(v_ID_TCA_PROYECTO_MUNICIPAL, TYPE_TRE_HERRAMIENTA.ID_TCA_PROYECTO_MUNICIPAL),
					ID_TCA_ACTIVIDAD_ECONOMICA_F1 = NVL(v_ACTIVIDAD_ECONOMICA_F1, TYPE_TRE_HERRAMIENTA.ID_TCA_ACTIVIDAD_ECONOMICA_F1),
					CODIGO_PROGRAMA = NVL(v_CODIGO_PROGRAMA , TYPE_TRE_HERRAMIENTA.CODIGO_PROGRAMA)
				WHERE ID = v_ID_HCE;
					
				IF SQL%FOUND THEN
					P_CODIGO_RES := 1;			
					COMMIT;
				ELSE	
					ROLLBACK;				
				END IF;			            
				
				v_accion := 'MODIFICAR LA CONFIGURACIÓN DE HCE <<DESEMBOLSO>>';       				
			END IF;	
		ELSE
			v_Error_msg := 'No se ha indicado el identificador del registro a afectar.';			
            v_accion := 'MODIFICAR LA CONFIGURACIÓN DE HCE'; 
		END IF;		
		
	ELSIF (P_ACCION = 3)	-- Deshabilita el registro de TRE_HERRAMIENTA 
    THEN
		IF  (P_ID_HCE > 0) THEN
			UPDATE TRE_HERRAMIENTA
			SET BAN_ESTATUS = 0
			WHERE ID = P_ID_HCE;
			
			IF SQL%FOUND THEN
				P_CODIGO_RES := 1;
				COMMIT;
			ELSE
				ROLLBACK;
			END IF;		
		ELSE
			v_Error_msg := 'No se ha indicado el identificador del registro a afectar.';			
		END IF;
		
		v_accion := 'DESACTIVAR';
	
	ELSIF (P_ACCION = 4) 
    THEN
		IF  (P_ID_HCE > 0) THEN
			UPDATE TRE_HERRAMIENTA
			SET BAN_ESTATUS = 1
			WHERE ID = P_ID_HCE;
			
			IF SQL%FOUND THEN
				P_CODIGO_RES := 1;
				COMMIT;
			ELSE
				ROLLBACK;
			END IF;		
		ELSE
			v_Error_msg := 'No se ha indicado el identificador del registro a afectar.';			
		END IF;
	   
		v_accion := 'ACTIVAR';
	
	ELSIF (P_ACCION = 5) 
    THEN
		DBMS_OUTPUT.PUT_LINE ('# -------------------------------------------------------------------------------------------- #');
		
		-- Valida que se tengan la misma cantidad de elementos en ambas listas
		IF ((P_PARAM_CRITERIO.COUNT > 0) AND (P_PARAM_VALOR.COUNT > 0) AND (P_PARAM_CRITERIO.COUNT = P_PARAM_VALOR.COUNT)) THEN
		
			-- Recorre el array de la lista de criterios de búsqueda
			FOR ind IN 1 .. P_PARAM_CRITERIO.COUNT
			LOOP
				CASE UPPER(P_PARAM_CRITERIO(IND))
					WHEN  'ID_INICIATIVA_ESTRATEGICA' THEN  v_criterio :=  v_criterio || 'IE.COD_EXTERNO = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';
					WHEN  'ID_RANGO_PAISES' THEN  v_criterio :=  v_criterio || 'RP.COD_EXTERNO = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';
					WHEN  'ID_AREA_FOCALIZACION' THEN  v_criterio :=  v_criterio || 'AF.COD_EXTERNO = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';
					WHEN  'ID_EJE_ESTRATEGICO' THEN  v_criterio :=  v_criterio || 'EE.COD_EXTERNO = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';
					WHEN  'ID_TCA_CICLO_ESTRATEGICO' THEN  v_criterio :=  v_criterio || 'CE.COD_EXTERNO = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';
					WHEN  'ID_TCA_CLASIF_EMPRESARIAL' THEN  v_criterio :=  v_criterio || 'CEM.COD_EXTERNO = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';
					WHEN  'ID_TCA_PROYECTO_MUNICIPAL' THEN  v_criterio :=  v_criterio || 'PM.COD_EXTERNO = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';
					WHEN  'ID_TCA_ACTIVIDAD_ECONOMICA_F1' THEN  v_criterio :=  v_criterio || 'AEF.COD_EXTERNO = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';
					WHEN  'CODIGO_PROGRAMA' THEN  v_criterio :=  v_criterio || 'TET.CODIGO_PROGRAMA = ''' || UPPER(P_PARAM_VALOR(IND)) || ''' AND ';					
					ELSE v_criterio := '';
				END CASE;				
			END LOOP;	
			
			IF (LENGTH(v_criterio) > 0) THEN		
				v_criterio := LPAD(v_criterio, LENGTH(v_criterio)-5);
				v_criterio  := 'WHERE ' || v_criterio;				
			END IF;
			
			
			v_codeBlock := '
					BEGIN
						FOR v_rec IN (
							SELECT TET.ID ID,       
								TET.CODIGO_PROGRAMA PROGRAMA,        
								AE.COD_EXTERNO ACTIVIDAD_ECONOMICA,
								AE.Descripcion ACTIVIDAD_ECONOMICA_DESC,       
								IE.COD_EXTERNO INICIATIVA_ESTRATEGICA,
								IE.Descripcion INICIATIVA_ESTRATEGICA_DESC,
								RP.COD_EXTERNO RANGO_PAISES,
								RP.Descripcion RANGO_PAISES_DESC,
								AF.COD_EXTERNO AREA_FOCALIZACION,
								AF.Descripcion AREA_FOCALIZACION_DESC,
								EE.COD_EXTERNO EJE_ESTRATEGICO,
								EE.Descripcion EJE_ESTRATEGICO_DESC,
								CE.COD_EXTERNO CICLO_ESTRATEGICO,
								CE.Descripcion CICLO_ESTRATEGICO_DESC,
								CEM.COD_EXTERNO CLASIFICACION_EMPRESARIAL,
								CEM.Descripcion CLASIFICACION_EMPRESARIAL_DESC,
								PM.COD_EXTERNO PROYECTO_MUNICIPAL,
								PM.Descripcion PROYECTO_MUNICIPAL_DESC,
								AEF.COD_EXTERNO ACTIVIDAD_F1,
								AEF.Descripcion ACTIVIDAD_F1_DESC,
								IE.Tipo_Variable,
								CASE IE.TIPO_VARIABLE WHEN ''A'' THEN ''OPERACION'' WHEN ''D'' THEN ''DESEMBOLSO'' END TIPO_VARIABLE_DESC,
								TET.BAN_ESTATUS
							FROM TRE_HERRAMIENTA TET
							INNER JOIN CAT_INICIATIVA_ESTRATEGICA  IE ON TET.ID_INICIATIVA_ESTRATEGICA = IE.ID
							INNER JOIN CAT_ACTIVIDAD_ECONOMICA AE ON IE.ID_ACTIVIDAD=AE.ID
							INNER JOIN TCA_RANGO_PAISES  RP ON TET.ID_RANGO_PAISES = RP.ID
							INNER JOIN CAT_AREA_FOCALIZACION AF ON TET.ID_AREA_FOCALIZACION = AF.ID
							INNER JOIN CAT_EJE_ESTRATEGICO EE ON TET.ID_EJE_ESTRATEGICO = EE.ID
							INNER JOIN TCA_CICLO_ESTRATEGICO CE ON TET.ID_TCA_CICLO_ESTRATEGICO = CE.ID
							INNER JOIN TCA_CLASIFICACION_EMPRESARIAL CEM ON TET.ID_TCA_CLASIF_EMPRESARIAL = CEM.ID
							INNER JOIN TCA_PROYECTO_MUNICIPAL PM ON TET.ID_TCA_PROYECTO_MUNICIPAL = PM.ID
							INNER JOIN TCA_ACTIVIDAD_ECONOMICA_F1 AEF ON TET.ID_TCA_ACTIVIDAD_ECONOMICA_F1=AEF.ID
					' || v_criterio || '
							ORDER BY ID
						) LOOP
							DBMS_OUTPUT.PUT_LINE (
											''ID_HCE = '' || v_rec.ID ||
											'', PROGRAMA = '' || v_rec.PROGRAMA ||
											'', ACTIVIDAD ECONOMICA (COD_EXTERNO) = '' || v_rec.ACTIVIDAD_ECONOMICA ||
											'', ACTIVIDAD ECONOMICA (DESC) = '' || v_rec.ACTIVIDAD_ECONOMICA_DESC ||
											'', INICIATIVA ESTRATEGICA (COD_EXTERNO) = '' || v_rec.INICIATIVA_ESTRATEGICA ||
											'', INICIATIVA ESTRATEGICA (DESC) = '' || v_rec.INICIATIVA_ESTRATEGICA_DESC ||
											'', RANGO PAISES (COD_EXTERNO) = '' || v_rec.RANGO_PAISES ||
											'', RANGO PAISES (DESC) = '' || v_rec.RANGO_PAISES_DESC ||
											'', AREA_FOCALIZACION (COD_EXTERNO) = '' || v_rec.AREA_FOCALIZACION ||
											'', AREA_FOCALIZACION (DESC) = '' || v_rec.AREA_FOCALIZACION_DESC ||
											'', EJE ESTRATEGICO (COD_EXTERNO) = '' || v_rec.EJE_ESTRATEGICO ||
											'', EJE ESTRATEGICO (DESC) = '' || v_rec.EJE_ESTRATEGICO_DESC ||
											'', CICLO ESTRATEGICO (COD_EXTERNO) = '' || v_rec.CICLO_ESTRATEGICO ||
											'', CICLO ESTRATEGICO (DESC) = '' || v_rec.CICLO_ESTRATEGICO_DESC ||
											'', CLASIFICACION EMPRESARIAL (COD_EXTERNO) = '' || v_rec.CLASIFICACION_EMPRESARIAL ||
											'', CLASIFICACION EMPRESARIAL (DESC) = '' || v_rec.CLASIFICACION_EMPRESARIAL_DESC ||
											'', PROYECTO MUNICIPAL (COD_EXTERNO) = '' || v_rec.PROYECTO_MUNICIPAL ||
											'', PROYECTO MUNICIPAL (DESC) = '' || v_rec.PROYECTO_MUNICIPAL_DESC ||
											'', ACTIVIDAD ECONOMICA F1 (COD_EXTERNO) = '' || v_rec.ACTIVIDAD_F1 ||
											'', ACTIVIDAD ECONOMICA F1 (DESC) = '' || v_rec.ACTIVIDAD_F1_DESC ||
											'', CONFIGURACION POR = '' || v_rec.TIPO_VARIABLE_DESC ||
											'', BAN_ESTATUS = '' || v_rec.BAN_ESTATUS
											);				   
						END LOOP;
					END; ';
			--DBMS_OUTPUT.PUT_LINE (v_codeBlock);
			EXECUTE IMMEDIATE v_codeBlock;
			
			P_CODIGO_RES := 1;
		ELSE		
			P_CODIGO_RES := 0;
		END IF;
		
		v_accion := 'LISTAR LA CONFIGURACIÓN DE HCE EN BASE A CRITERIOS DE INFORMACIÓN';			
	END IF;


    DBMS_OUTPUT.PUT_LINE ('# -------------------------------------------------------------------------------------------- #');
    IF (P_CODIGO_RES = 1)
    THEN				
		DBMS_OUTPUT.PUT_LINE ('La transacción: ' || P_ACCION || ' (' || v_accion || ') se realizó correctamente.');
	ELSE
		DBMS_OUTPUT.PUT_LINE ('La transacción: ' || P_ACCION || ' (' || v_accion || '), no se realizó correctamente.  ' || v_Error_msg);
	END IF;
   
EXCEPTION
	WHEN NO_DATA_FOUND
	THEN				
		DBMS_OUTPUT.PUT_LINE ('No existen Datos.');
		DBMS_OUTPUT.PUT_LINE ('Error: ' || SQLCODE || ', ' || SQLERRM);
		err_num := SQLCODE;
		err_msg := SUBSTR(SQLERRM,1,250);
		
		INSERT INTO TBI_SEGUIMIENTO_ERROR (TIPO_INSUMO,
										NOMBRE_INSUMO,
                                        DESCRIPCION_ERROR,
                                        FECHA_REGISTRO)
        VALUES ('SP',
				'SP_CONF_TRE_HERRAMIENTA',
                'Error: '
                || TO_CHAR (err_num)
                || ' '
                || SUBSTR (err_msg, 1, 520),
				SYSDATE);
		COMMIT;
	WHEN OTHERS
	THEN				
		DBMS_OUTPUT.PUT_LINE ('Error: ' || SQLCODE || ', ' || SQLERRM);
		err_num := SQLCODE;
		err_msg := SUBSTR(SQLERRM,1,250);	  
    
		INSERT INTO TBI_SEGUIMIENTO_ERROR (TIPO_INSUMO,
										NOMBRE_INSUMO,
                                        DESCRIPCION_ERROR,
                                        FECHA_REGISTRO)
		VALUES ('SP',
                'SP_CONF_TRE_HERRAMIENTA',
                'Error: '
                || TO_CHAR (err_num)
                || ' '
                || SUBSTR (err_msg, 1, 520),
                SYSDATE);
		COMMIT;
END;                        
	
/
