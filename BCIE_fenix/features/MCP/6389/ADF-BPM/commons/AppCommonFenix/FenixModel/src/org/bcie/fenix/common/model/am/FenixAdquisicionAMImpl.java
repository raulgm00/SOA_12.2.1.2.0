package org.bcie.fenix.common.model.am;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ApplicationModuleImpl;


import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.FenixModelConstants;
import org.bcie.fenix.common.model.am.common.FenixAdquisicionAM;
import org.bcie.fenix.common.model.vo.AdjudicatariosContratoVOImpl;
import org.bcie.fenix.common.model.vo.AdjudicatariosContratoVORowImpl;
import org.bcie.fenix.common.model.vo.AdjudicatariosVOImpl;
import org.bcie.fenix.common.model.vo.AdjuntoVOImpl;
import org.bcie.fenix.common.model.vo.AdquisicionVOImpl;
import org.bcie.fenix.common.model.vo.AdquisicionesVOImpl;
import org.bcie.fenix.common.model.vo.ComisionesNoPagadasVOImpl;
import org.bcie.fenix.common.model.vo.ConcursanteAdjudicatarioVOImpl;
import org.bcie.fenix.common.model.vo.ConcursanteAdquisicionVOImpl;
import org.bcie.fenix.common.model.vo.ConsultaComisionNoPagadaVOImpl;
import org.bcie.fenix.common.model.vo.ConsultaComisionNoPagadaVORowImpl;
import org.bcie.fenix.common.model.vo.ConsultaDocumentoAdquisicionVOImpl;
import org.bcie.fenix.common.model.vo.ConsultarAdjudicatariosVOImpl;
import org.bcie.fenix.common.model.vo.ConsultarAdjudicatariosVORowImpl;
import org.bcie.fenix.common.model.vo.ConsultarContratadosVOImpl;
import org.bcie.fenix.common.model.vo.ConsultarContratadosVORowImpl;
import org.bcie.fenix.common.model.vo.ContratadosAdjudicatariosVOImpl;
import org.bcie.fenix.common.model.vo.ContratadosAdjudicatariosVORowImpl;
import org.bcie.fenix.common.model.vo.DatosPlantillaNoObjecionVOImpl;
import org.bcie.fenix.common.model.vo.DocumentosTrazabilidadOperacionAdquisicionesFiltroVOImpl;
import org.bcie.fenix.common.model.vo.DocumentosTrazabilidadOperacionAdquisicionesVOImpl;
import org.bcie.fenix.common.model.vo.DocumentosTrazabilidadOperacionFiltroVOImpl;
import org.bcie.fenix.common.model.vo.ContratadosVOImpl;
import org.bcie.fenix.common.model.vo.ContratadosVORowImpl;
import org.bcie.fenix.common.model.vo.DocumentosTrazabilidadOperacionVOImpl;
import org.bcie.fenix.common.model.vo.EvidenciasAdquisicionVOImpl;
import org.bcie.fenix.common.model.vo.NoObjecionEditableVOImpl;
import org.bcie.fenix.common.model.vo.NoObjecionParticipantesVOImpl;
import org.bcie.fenix.common.model.vo.NoObjecionVOImpl;
import org.bcie.fenix.common.model.vo.OferentesVOImpl;
import org.bcie.fenix.common.model.vo.ParticipantesNoObjecionVOImpl;
import org.bcie.fenix.common.model.vo.QPreguntaVORowImpl;
import org.bcie.fenix.common.model.vo.TcaPaisesVOImpl;
import org.bcie.fenix.common.model.vo.TcaProcesoBpmByIdVOImpl;
import org.bcie.fenix.common.model.vo.TcaTipoMonedaVOImpl;
import org.bcie.fenix.common.model.vo.TcaTipoNoObjecionVOImpl;
import org.bcie.fenix.common.model.vo.TiposDocumentoAdquisicionesVOImpl;
import org.bcie.fenix.common.model.vo.TreEvidenciaAdquisicionVOImpl;
import org.bcie.fenix.common.model.vo.TreeParticipantesObjecionVOImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 09 17:22:30 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FenixAdquisicionAMImpl extends ApplicationModuleImpl implements FenixAdquisicionAM {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public FenixAdquisicionAMImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Container's getter for AdquisicionVO.
     * @return AdquisicionVO
     */
    public AdquisicionVOImpl getAdquisicionVO() {
        return (AdquisicionVOImpl) findViewObject("AdquisicionVO");
    }


    /**
     * Container's getter for TcaTipoAdquisicionVO1.
     * @return TcaTipoAdquisicionVO1
     */
    public ViewObjectImpl getTcaTipoAdquisicionVO() {
        return (ViewObjectImpl) findViewObject("TcaTipoAdquisicionVO");
    }

    /**
     * Container's getter for TcaTipoAlcanceProcesoVO1.
     * @return TcaTipoAlcanceProcesoVO1
     */
    public ViewObjectImpl getTcaTipoAlcanceProcesoVO() {
        return (ViewObjectImpl) findViewObject("TcaTipoAlcanceProcesoVO");
    }

    /**
     * Container's getter for TcaTipoModalidadProcesoVO1.
     * @return TcaTipoModalidadProcesoVO1
     */
    public ViewObjectImpl getTcaTipoModalidadProcesoVO() {
        return (ViewObjectImpl) findViewObject("TcaTipoModalidadProcesoVO");
    }

    /**
     * Container's getter for TcaTipoMonedaVO1.
     * @return TcaTipoMonedaVO1
     */
    public TcaTipoMonedaVOImpl getTcaTipoMonedaVO() {
        return (TcaTipoMonedaVOImpl) findViewObject("TcaTipoMonedaVO");
    }

    /**
     * Container's getter for TcaTipoNormativaAplicadaVO1.
     * @return TcaTipoNormativaAplicadaVO1
     */
    public ViewObjectImpl getTcaTipoNormativaAplicadaVO() {
        return (ViewObjectImpl) findViewObject("TcaTipoNormativaAplicadaVO");
    }

    /**
     * Container's getter for AdquisicionesVO1.
     * @return AdquisicionesVO1
     */
    public AdquisicionesVOImpl getAdquisicionesVO() {
        return (AdquisicionesVOImpl) findViewObject("AdquisicionesVO");
    }

    /**
     * Container's getter for NoObjecionVO1.
     * @return NoObjecionVO1
     */
    public NoObjecionVOImpl getNoObjecionVO() {
        return (NoObjecionVOImpl) findViewObject("NoObjecionVO");
    }

    /**
     * Container's getter for NoObjecionParticipantesVO1.
     * @return NoObjecionParticipantesVO1
     */
    public NoObjecionParticipantesVOImpl getNoObjecionParticipantesVO() {
        return (NoObjecionParticipantesVOImpl) findViewObject("NoObjecionParticipantesVO");
    }


    /**
     * Container's getter for ConcursanteAdquisicionVO1.
     * @return ConcursanteAdquisicionVO1
     */
    public ConcursanteAdquisicionVOImpl getConcursanteAdquisicionVO() {
        return (ConcursanteAdquisicionVOImpl) findViewObject("ConcursanteAdquisicionVO");
    }

    /**
     * Container's getter for DocumentosTrazabilidadOperacionFiltroVO1.
     * @return DocumentosTrazabilidadOperacionFiltroVO1
     */
    public DocumentosTrazabilidadOperacionFiltroVOImpl getDocumentosTrazabilidadOperacionFiltroVO() {
        return (DocumentosTrazabilidadOperacionFiltroVOImpl) findViewObject("DocumentosTrazabilidadOperacionFiltroVO");
    }

    /**
     * Container's getter for DocumentosTrazabilidadOperacionVO1.
     * @return DocumentosTrazabilidadOperacionVO1
     */
    public DocumentosTrazabilidadOperacionVOImpl getDocumentosTrazabilidadOperacionVO() {
        return (DocumentosTrazabilidadOperacionVOImpl) findViewObject("DocumentosTrazabilidadOperacionVO");
    }


    /**
     * Container's getter for TreEvidenciaAdquisicionVO1.
     * @return TreEvidenciaAdquisicionVO1
     */
    public TreEvidenciaAdquisicionVOImpl getTreEvidenciaAdquisicionVO() {
        return (TreEvidenciaAdquisicionVOImpl) findViewObject("TreEvidenciaAdquisicionVO");
    }
    
    /**
     * Container's getter for ParticipantesNoObjecionVO1.
     * @return ParticipantesNoObjecionVO1
     */
    public ParticipantesNoObjecionVOImpl getParticipantesNoObjecionVO() {
        return (ParticipantesNoObjecionVOImpl) findViewObject("ParticipantesNoObjecionVO");
    }

    /**
     * Container's getter for TreeParticipantesObjecionVO1.
     * @return TreeParticipantesObjecionVO1
     */
    public TreeParticipantesObjecionVOImpl getTreeParticipantesObjecionVO() {
        return (TreeParticipantesObjecionVOImpl) findViewObject("TreeParticipantesObjecionVO");
    }

    /**
     * Container's getter for OferentesVO1.
     * @return OferentesVO1
     */
    public OferentesVOImpl getOferentesVO() {
        return (OferentesVOImpl) findViewObject("OferentesVO");
    }

    /**
     * Container's getter for AdjudicatariosVO1.
     * @return AdjudicatariosVO1
     */
    public AdjudicatariosVOImpl getAdjudicatariosVO() {
        return (AdjudicatariosVOImpl) findViewObject("AdjudicatariosVO");
    }

    /**
     * Container's getter for ContratadosVO1.
     * @return ContratadosVO1
     */
    public ContratadosVOImpl getContratadosVO() {
        return (ContratadosVOImpl) findViewObject("ContratadosVO");
    }

    /**
     * Container's getter for ConsultaDocumentoAdquisicionVO1.
     * @return ConsultaDocumentoAdquisicionVO1
     */
    public ConsultaDocumentoAdquisicionVOImpl getConsultaDocumentoAdquisicionVO() {
        return (ConsultaDocumentoAdquisicionVOImpl) findViewObject("ConsultaDocumentoAdquisicionVO");
    }

    /**
     * Container's getter for EvidenciasAdquisicionVO1.
     * @return EvidenciasAdquisicionVO1
     */
    public EvidenciasAdquisicionVOImpl getEvidenciasAdquisicionVO() {
        return (EvidenciasAdquisicionVOImpl) findViewObject("EvidenciasAdquisicionVO");
    }

    /**
     * Container's getter for TcaTipoNoObjecionVO1.
     * @return TcaTipoNoObjecionVO1
     */
    public TcaTipoNoObjecionVOImpl getTcaTipoNoObjecionVO() {
        return (TcaTipoNoObjecionVOImpl) findViewObject("TcaTipoNoObjecionVO");
    }

    /**
     * Container's getter for AdjuntoVO1.
     * @return AdjuntoVO1
     */
    public AdjuntoVOImpl getAdjuntoVO() {
        return (AdjuntoVOImpl) findViewObject("AdjuntoVO");
    }


    /**
     * Container's getter for ConsultarAdjudicatariosVO1.
     * @return ConsultarAdjudicatariosVO1
     */
    public ConsultarAdjudicatariosVOImpl getConsultarAdjudicatariosVO() {
        return (ConsultarAdjudicatariosVOImpl) findViewObject("ConsultarAdjudicatariosVO");
    }

    /**
     * Container's getter for AdjudicatariosContratoVO1.
     * @return AdjudicatariosContratoVO1
     */
    public AdjudicatariosContratoVOImpl getAdjudicatariosContratoVO() {
        return (AdjudicatariosContratoVOImpl) findViewObject("AdjudicatariosContratoVO");
    }
    
    public void llenarAdjudicatariosContrato(Long idAdquisicion) {
        logger.warning("Inside llenarAdjudicatariosContrato.");
        logger.warning("idAdquisicion: " + idAdquisicion);
        
        ConsultarAdjudicatariosVOImpl consultarAdjudicatariosVOImpl = null;
        consultarAdjudicatariosVOImpl = getConsultarAdjudicatariosVO();
        
        AdjudicatariosContratoVOImpl adjudicatariosContratoVOImpl = null;
        adjudicatariosContratoVOImpl = getAdjudicatariosContratoVO();
        
        adjudicatariosContratoVOImpl.executeQuery();
        
        if (null != consultarAdjudicatariosVOImpl) {
            consultarAdjudicatariosVOImpl.setidAdquisicion(idAdquisicion);
            /*
            try {
                consultarAdjudicatariosVOImpl.executeQuery();
            } catch (Exception e) {
                logger.warning("Error al ejecutar query");
            }*/
        }

        String nombrePaises=null;    
        RowSetIterator rowConsultarAdjudicatariosVO = consultarAdjudicatariosVOImpl.createRowSetIterator(null);
        rowConsultarAdjudicatariosVO.reset();
        while (rowConsultarAdjudicatariosVO.hasNext()) {
            ConsultarAdjudicatariosVORowImpl rowConsultarAdjudicatarios = (ConsultarAdjudicatariosVORowImpl) rowConsultarAdjudicatariosVO.next();
            nombrePaises=null; 
            nombrePaises=getTcaPaisesVO().getNombrePaisCorto((Integer)rowConsultarAdjudicatarios.getAttribute("IdCatPais")); 
            adjudicatariosContratoVOImpl.crearRowAdjudicatarioContrato2((Long)rowConsultarAdjudicatarios.getAttribute("Id"), (String)rowConsultarAdjudicatarios.getAttribute("NumeroCorrespondencia"),
                                                                        nombrePaises,(String)rowConsultarAdjudicatarios.getAttribute("Nombre"), (BigDecimal)rowConsultarAdjudicatarios.getAttribute("Monto") );
        }
        rowConsultarAdjudicatariosVO.closeRowSetIterator();
    }
    
    public void llenarContratados(Long idNoObjecion) {
        logger.warning("Inside llenarContratados.");
        logger.warning("idNoObjecion: " + idNoObjecion);
        
//        ContratadosAdjudicatariosVOImpl contratadosAdjudicatariosVOImpl = null;
//        contratadosAdjudicatariosVOImpl = getContratadosAdjudicatariosVO();
//        
//        getContratadosVO().setWhereParamsContratados(idNoObjecion, FenixModelConstants.ID_TIPO_PERFIL_CONTRATADO);
//        
//        RowSetIterator rowConsultarAdjudicatariosVO = getContratadosVO().createRowSetIterator(null);
//        rowConsultarAdjudicatariosVO.reset();
//        while (rowConsultarAdjudicatariosVO.hasNext()) {
//            ContratadosVORowImpl rowContratados = (ContratadosVORowImpl) rowConsultarAdjudicatariosVO.next();
//            
//            contratadosAdjudicatariosVOImpl.crearRowContratadosAdjudicatarios(rowContratados);
//        }
//        rowConsultarAdjudicatariosVO.closeRowSetIterator();
        
        
        
        
        
        //getFenixAdquisicionAM(). .precargaConcursantes(idNoObjecion, FenixModelConstants.ID_TIPO_PERFIL_CONTRATADO);
        
//        ConsultarContratadosVOImpl consultarContratadosVOImpl = null;
//        consultarContratadosVOImpl = getConsultarContratadosVO();
//        
//        ContratadosAdjudicatariosVOImpl contratadosAdjudicatariosVOImpl = null;
//        contratadosAdjudicatariosVOImpl = getContratadosAdjudicatariosVO();
//        
//        contratadosAdjudicatariosVOImpl.executeQuery();
//        
//        if (null != consultarContratadosVOImpl) {
//            consultarContratadosVOImpl.setvarIdAdquisicion(idAdquisicion);
//        }
//            
//        RowSetIterator rowConsultarContratadosVO = consultarContratadosVOImpl.createRowSetIterator(null);
//        rowConsultarContratadosVO.reset();
//        while (rowConsultarContratadosVO.hasNext()) {
//            ConsultarContratadosVORowImpl rowConsultarContratados = (ConsultarContratadosVORowImpl) rowConsultarContratadosVO.next();
//            
//            contratadosAdjudicatariosVOImpl.crearRowContratadosAdjudicatarios(rowConsultarContratados);
//        }
//        rowConsultarContratadosVO.closeRowSetIterator();
    }
    
    /**
     * Container's getter for ConcursanteAdjudicatarioVO1.
     * @return ConcursanteAdjudicatarioVO1
     */
    public ConcursanteAdjudicatarioVOImpl getConcursanteAdjudicatarioVO() {
        return (ConcursanteAdjudicatarioVOImpl) findViewObject("ConcursanteAdjudicatarioVO");
    }

    /**
     * Container's getter for ContratadosAdjudicatariosVO1.
     * @return ContratadosAdjudicatariosVO1
     */
    public ContratadosAdjudicatariosVOImpl getContratadosAdjudicatariosVO() {
        return (ContratadosAdjudicatariosVOImpl) findViewObject("ContratadosAdjudicatariosVO");
    }
    
    public void contratarAdjudicatarios(Long idNoObjecion) {
        logger.warning("Inside contratarAdjudicatarios.");
        
        ViewObjectImpl contratadosAdjudicatariosVOImpl = null;
        contratadosAdjudicatariosVOImpl = this.getContratadosAdjudicatariosVO();
        
        ConcursanteAdjudicatarioVOImpl concursanteAdjudicatarioVOImpl = null;
        concursanteAdjudicatarioVOImpl = this.getConcursanteAdjudicatarioVO();
        
        /*
        RowSetIterator rowContratadosAdjudicatariosVO = contratadosAdjudicatariosVOImpl.createRowSetIterator(null);
        rowContratadosAdjudicatariosVO.reset();
        
        int rowCount = rowContratadosAdjudicatariosVO.getRowCount();
        logger.warning("Inside contratarAdjudicatarios.numRegistros: " + rowCount);
        
        for(int index = 0; index <= rowCount; index++) {
            ContratadosAdjudicatariosVORowImpl rowContratadosAdjudicatarios = 
                (ContratadosAdjudicatariosVORowImpl) rowContratadosAdjudicatariosVO.getRowAtRangeIndex(index);
            
            if (null != rowContratadosAdjudicatarios) {
                Long idConcursante = (Long) rowContratadosAdjudicatarios.getAttribute("Id");
                    
                concursanteAdjudicatarioVOImpl.contrataAdjudicatario(idConcursante, idNoObjecion);
            }
        }*/
        
        RowSetIterator rowContratadosAdjudicatariosVO = contratadosAdjudicatariosVOImpl.createRowSetIterator(null);
        rowContratadosAdjudicatariosVO.reset();

        while (rowContratadosAdjudicatariosVO.hasNext()) {            
            ContratadosAdjudicatariosVORowImpl rowContratadosAdjudicatarios = 
                (ContratadosAdjudicatariosVORowImpl) rowContratadosAdjudicatariosVO.next();
            
            if (null != rowContratadosAdjudicatarios) {
                Long idConcursante = (Long) rowContratadosAdjudicatarios.getAttribute("Id");
                    
                concursanteAdjudicatarioVOImpl.contrataAdjudicatario(idConcursante, idNoObjecion);
                concursanteAdjudicatarioVOImpl.adjudicaContratado(idConcursante, idNoObjecion);
            }
        }

        rowContratadosAdjudicatariosVO.closeRowSetIterator();
    }
    
    public void adjudicarContratados(Long idNoObjecion) {
        logger.warning("Inside adjudicarContratados.");
        /*
        ViewObjectImpl adjudicatariosContratoVOImpl = null;
        adjudicatariosContratoVOImpl = this.getAdjudicatariosContratoVO();
        
        ConcursanteAdjudicatarioVOImpl concursanteAdjudicatarioVOImpl = null;
        concursanteAdjudicatarioVOImpl = this.getConcursanteAdjudicatarioVO();
        
        
        RowSetIterator rowAdjudicatariosContratoVO = adjudicatariosContratoVOImpl.createRowSetIterator(null);
        rowAdjudicatariosContratoVO.reset();
        
        int rowCount = rowAdjudicatariosContratoVO.getRowCount();
        logger.warning("Inside adjudicarContratados.numRegistros: " + rowCount);
        
        for(int index = 0; index <= rowCount; index++) {
            AdjudicatariosContratoVORowImpl rowAdjudicatariosContrato = 
                (AdjudicatariosContratoVORowImpl) rowAdjudicatariosContratoVO.getRowAtRangeIndex(index);
            
            if (null != rowAdjudicatariosContrato) {
                Long idConcursante = (Long) rowAdjudicatariosContrato.getAttribute("Id");
                
                concursanteAdjudicatarioVOImpl.adjudicaContratado(idConcursante, idNoObjecion);
            }
        }
        
        RowSetIterator rowAdjudicatariosContratoVO = adjudicatariosContratoVOImpl.createRowSetIterator(null);
        rowAdjudicatariosContratoVO.reset();

        while (rowAdjudicatariosContratoVO.hasNext()) {            
            AdjudicatariosContratoVORowImpl rowAdjudicatariosContrato = 
                (AdjudicatariosContratoVORowImpl) rowAdjudicatariosContratoVO.next();
            
            if (null != rowAdjudicatariosContrato) {
                Long idConcursante = (Long) rowAdjudicatariosContrato.getAttribute("Id");
                    
                concursanteAdjudicatarioVOImpl.adjudicaContratado(idConcursante, idNoObjecion);
            }
        }

        rowAdjudicatariosContratoVO.closeRowSetIterator(); */
    }
    
    /**
     * Container's getter for ConsultarContratadosVO1.
     * @return ConsultarContratadosVO1
     */
    public ConsultarContratadosVOImpl getConsultarContratadosVO() {
        return (ConsultarContratadosVOImpl) findViewObject("ConsultarContratadosVO");
    }

    /**
     * Container's getter for DocumentosTrazabilidadOperacionAdquisicionesVO1.
     * @return DocumentosTrazabilidadOperacionAdquisicionesVO1
     */
    public DocumentosTrazabilidadOperacionAdquisicionesVOImpl getDocumentosTrazabilidadOperacionAdquisicionesVO() {
        return (DocumentosTrazabilidadOperacionAdquisicionesVOImpl) findViewObject("DocumentosTrazabilidadOperacionAdquisicionesVO");
    }

    /**
     * Container's getter for DocumentosTrazabilidadOperacionAdquisicionesFiltroVO1.
     * @return DocumentosTrazabilidadOperacionAdquisicionesFiltroVO1
     */
    public DocumentosTrazabilidadOperacionAdquisicionesFiltroVOImpl getDocumentosTrazabilidadOperacionAdquisicionesFiltroVO() {
        return (DocumentosTrazabilidadOperacionAdquisicionesFiltroVOImpl) findViewObject("DocumentosTrazabilidadOperacionAdquisicionesFiltroVO");
    }

    /**
     * Container's getter for TiposDocumentoAdquisicionesVO1.
     * @return TiposDocumentoAdquisicionesVO1
     */
    public TiposDocumentoAdquisicionesVOImpl getTiposDocumentoAdquisicionesVO() {
        return (TiposDocumentoAdquisicionesVOImpl) findViewObject("TiposDocumentoAdquisicionesVO");
    }

    /**
     * Container's getter for TcaProcesoBpmByIdVO1.
     * @return TcaProcesoBpmByIdVO1
     */
    public TcaProcesoBpmByIdVOImpl getTcaProcesoBpmByIdVO() {
        return (TcaProcesoBpmByIdVOImpl) findViewObject("TcaProcesoBpmByIdVO");
    }

    /**
     * Container's getter for NoObjecionEditableVO1.
     * @return NoObjecionEditableVO1
     */
    public NoObjecionEditableVOImpl getNoObjecionEditableVO() {
        return (NoObjecionEditableVOImpl) findViewObject("NoObjecionEditableVO");
    }

    /**
     * Container's getter for NoObjecionVO1.
     * @return NoObjecionVO1
     */
    public NoObjecionVOImpl getNoObjecionValidaVO() {
        return (NoObjecionVOImpl) findViewObject("NoObjecionValidaVO");
    }

    /**
     * Container's getter for ConcursanteAdquisicionVO1.
     * @return ConcursanteAdquisicionVO1
     */
    public ConcursanteAdquisicionVOImpl getConcursanteActivoVO() {
        return (ConcursanteAdquisicionVOImpl) findViewObject("ConcursanteActivoVO");
    }

    /**
     * Container's getter for NoObjecionEditableVO1.
     * @return NoObjecionEditableVO1
     */
    public NoObjecionEditableVOImpl getNoObjecionEstableVO() {
        return (NoObjecionEditableVOImpl) findViewObject("NoObjecionEstableVO");
    }

    /**
     * Container's getter for TcaPaisesVO1.
     * @return TcaPaisesVO1
     */
    public TcaPaisesVOImpl getTcaPaisesVO() {
        return (TcaPaisesVOImpl) findViewObject("TcaPaisesVO");
    }

    /**
     * Container's getter for DatosPlantillaNoObjecionVO1.
     * @return DatosPlantillaNoObjecionVO1
     */
    public DatosPlantillaNoObjecionVOImpl getDatosPlantillaNoObjecionVO() {
        return (DatosPlantillaNoObjecionVOImpl) findViewObject("DatosPlantillaNoObjecionVO");
    }
}

