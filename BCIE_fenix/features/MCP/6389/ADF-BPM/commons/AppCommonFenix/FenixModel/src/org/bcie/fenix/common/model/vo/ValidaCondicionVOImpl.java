package org.bcie.fenix.common.model.vo;

import java.util.logging.Logger;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ValidaCondicionVO;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 15 15:15:56 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ValidaCondicionVOImpl extends ViewObjectImpl implements ValidaCondicionVO {
    /**
     * This is the default constructor (do not remove).
     */
    private static ADFLogger logger = null;
    
    public ValidaCondicionVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void probarActualizarFinalizoTarea(Integer finalizoTarea,Integer estado){
        Long idCondicion = 29542L;
        Long idAgrupador = 147L;
        Integer idRol = 1;
        String loginUsuario = null;
        
        this.actualizarFinalizoTarea(idCondicion, idAgrupador, idRol, finalizoTarea, estado, null);
    }
    
    public Boolean actualizarFinalizoTarea(Long idCondicion, Long idAgrupador, Integer idRol,
                                                Integer finalizoTarea, Integer estado, String loginUsuario){
        logger.warning("Entra en actualizarFinalizoTarea");
        logger.warning("idCondicion : "+idCondicion);
        logger.warning("idAgrupador : "+idAgrupador);
        logger.warning("idRol : "+idRol);
        logger.warning("finalizoTarea : "+finalizoTarea);
        logger.warning("estado : "+estado);
        logger.warning("loginUsuario : "+loginUsuario);
        
        Boolean validaActualizar = Boolean.FALSE;
        try{
            try {
                ViewCriteria criteria =this.getViewCriteriaManager().getViewCriteria("ValidaCondicionVOCriteria");
                criteria.ensureVariableManager().setVariableValue("varIdAgrupador", idAgrupador);
                criteria.ensureVariableManager().setVariableValue("varIdCondicion", idCondicion);
                criteria.ensureVariableManager().setVariableValue("varIdRolBpm", idRol);
                criteria.ensureVariableManager().setVariableValue("varLoginUsuario", loginUsuario);
                this.applyViewCriteria(criteria);
                this.executeQuery();
                this.setRangeSize(-1);
                for (Row row : this.getAllRowsInRange()) {
                    if(null != finalizoTarea){
                        row.setAttribute("FinalizoTarea", finalizoTarea);
                    }else{
                        logger.warning("El valor de finalizo tarea es nulo.");
                    }
                    
                    logger.warning("Valor estado" + estado);
                    row.setAttribute("Estado", estado);
                    validaActualizar = Boolean.TRUE;
                    getDBTransaction().commit();
                }
            } catch (Exception ex) {
                getDBTransaction().rollback();
                logger.severe("Error en actualizarFinalizoTarea : ",ex);
            } finally {
                this.getViewCriteriaManager().removeApplyViewCriteriaName("ValidaCondicionVOCriteria");
            }
        }catch(Exception e){
            logger.log(ADFLogger.WARNING, "Error al buscar el registro.");
        }
        
        logger.warning("Fuera de actualizarFinalizoTarea, return : "+validaActualizar);
        return validaActualizar;
    }

    /**
     * Returns the variable value for varIdAgrupador.
     * @return variable value for varIdAgrupador
     */
    public Long getvarIdAgrupador() {
        return (Long) ensureVariableManager().getVariableValue("varIdAgrupador");
    }

    /**
     * Sets <code>value</code> for variable varIdAgrupador.
     * @param value value to bind as varIdAgrupador
     */
    public void setvarIdAgrupador(Long value) {
        ensureVariableManager().setVariableValue("varIdAgrupador", value);
    }

    /**
     * Returns the variable value for varIdCondicion.
     * @return variable value for varIdCondicion
     */
    public Long getvarIdCondicion() {
        return (Long) ensureVariableManager().getVariableValue("varIdCondicion");
    }

    /**
     * Sets <code>value</code> for variable varIdCondicion.
     * @param value value to bind as varIdCondicion
     */
    public void setvarIdCondicion(Long value) {
        ensureVariableManager().setVariableValue("varIdCondicion", value);
    }

    /**
     * Returns the variable value for varIdRolBpm.
     * @return variable value for varIdRolBpm
     */
    public Integer getvarIdRolBpm() {
        return (Integer) ensureVariableManager().getVariableValue("varIdRolBpm");
    }

    /**
     * Sets <code>value</code> for variable varIdRolBpm.
     * @param value value to bind as varIdRolBpm
     */
    public void setvarIdRolBpm(Integer value) {
        ensureVariableManager().setVariableValue("varIdRolBpm", value);
    }

    /**
     * Returns the variable value for varLoginUsuario.
     * @return variable value for varLoginUsuario
     */
    public String getvarLoginUsuario() {
        return (String) ensureVariableManager().getVariableValue("varLoginUsuario");
    }

    /**
     * Sets <code>value</code> for variable varLoginUsuario.
     * @param value value to bind as varLoginUsuario
     */
    public void setvarLoginUsuario(String value) {
        ensureVariableManager().setVariableValue("varLoginUsuario", value);
    }
}

