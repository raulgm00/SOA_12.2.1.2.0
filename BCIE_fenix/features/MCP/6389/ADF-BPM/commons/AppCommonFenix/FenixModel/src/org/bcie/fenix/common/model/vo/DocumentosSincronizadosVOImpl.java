package org.bcie.fenix.common.model.vo;

import java.util.ArrayList;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 15 18:34:55 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocumentosSincronizadosVOImpl extends ViewObjectImpl {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public DocumentosSincronizadosVOImpl() {
        
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for varIdOperacion.
     * @return bind variable value for varIdOperacion
     */
    public Long getvarIdOperacion() {
        return (Long) getNamedWhereClauseParam("varIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable varIdOperacion.
     * @param value value to bind as varIdOperacion
     */
    public void setvarIdOperacion(Long value) {
        setNamedWhereClauseParam("varIdOperacion", value);
    }

    /**
     * Returns the bind variable value for varIdTareaBpm.
     * @return bind variable value for varIdTareaBpm
     */
    public Integer getvarIdTareaBpm() {
        return (Integer) getNamedWhereClauseParam("varIdTareaBpm");
    }

    /**
     * Sets <code>value</code> for bind variable varIdTareaBpm.
     * @param value value to bind as varIdTareaBpm
     */
    public void setvarIdTareaBpm(Integer value) {
        setNamedWhereClauseParam("varIdTareaBpm", value);
    }
    
    /**
     * Obtiene una lista de IdDocumento de los documentos sincronizados, i.e. TCA_ACCION_DOCUMENTO.ID = 4, 
     * que correspondan a una Operación, Tarea y Tipo de Documento en específico.
     * @param idOperacion
     * @param idTareaBpm
     * @param idTipoDocumento
     * @return lista con los IdDocumento, si existen. Caso contrario, null.
     * 
     * @author Francisco Cuevas Pineda 
     * @since 18/abril/2016
     */
    public List<Long> obtenerIdsDocPorOperacionTareaTipoDoc(Long idOperacion, Integer idTareaBpm, Integer idTipoDocumento) {
        List<Long> idsDocumento = null;
        RowSetIterator iterator = null;
        
        // Asignamos parámetros y ejecutamos query 
        setvarIdOperacion(idOperacion);
        setvarIdTareaBpm(idTareaBpm);
        this.executeQuery();
        
        // Llenamos lista
        if(this.getEstimatedRowCount() > 0) {
            idsDocumento = new ArrayList<Long>();
            iterator = this.createRowSetIterator(null);
            iterator.reset();
            
            while (iterator.hasNext()) {
                Row row = iterator.next();
                Long idDocumento = (Long)row.getAttribute("IdDocumento");
                Integer idTipo = (Integer)row.getAttribute("IdTipoDocumento");
                
                if(idTipo.compareTo(idTipoDocumento) == 0)    
                    idsDocumento.add(idDocumento);
            }
            
            iterator.closeRowSetIterator();  
        }
        
        return idsDocumento;
    }
}

