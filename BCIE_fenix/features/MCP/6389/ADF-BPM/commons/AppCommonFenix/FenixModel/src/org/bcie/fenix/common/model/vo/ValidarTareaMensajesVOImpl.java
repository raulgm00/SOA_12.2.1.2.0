package org.bcie.fenix.common.model.vo;

import java.sql.ResultSet;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;

import org.bcie.fenix.common.model.vo.common.ValidarTareaMensajesVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 27 15:09:02 CST 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ValidarTareaMensajesVOImpl extends ViewObjectImpl implements ValidarTareaMensajesVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public ValidarTareaMensajesVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }

    /**
     * Returns the bind variable value for accionFinalizarTarea.
     * @return bind variable value for accionFinalizarTarea
     */
    public String getaccionFinalizarTarea() {
        return (String) getNamedWhereClauseParam("accionFinalizarTarea");
    }

    /**
     * Sets <code>value</code> for bind variable accionFinalizarTarea.
     * @param value value to bind as accionFinalizarTarea
     */
    public void setaccionFinalizarTarea(String value) {
        setNamedWhereClauseParam("accionFinalizarTarea", value);
    }

    /**
     * Returns the bind variable value for idProducto.
     * @return bind variable value for idProducto
     */
    public Long getidProducto() {
        return (Long) getNamedWhereClauseParam("idProducto");
    }

    /**
     * Sets <code>value</code> for bind variable idProducto.
     * @param value value to bind as idProducto
     */
    public void setidProducto(Long value) {
        setNamedWhereClauseParam("idProducto", value);
    }

    /**
     * Returns the bind variable value for idTarea.
     * @return bind variable value for idTarea
     */
    public Long getidTarea() {
        return (Long) getNamedWhereClauseParam("idTarea");
    }

    /**
     * Sets <code>value</code> for bind variable idTarea.
     * @param value value to bind as idTarea
     */
    public void setidTarea(Long value) {
        setNamedWhereClauseParam("idTarea", value);
    }
    
    /**
     * Returns the bind variable value for idOperacion.
     * @return bind variable value for idOperacion
     */
    public Integer getidOperacion() {
        return (Integer) getNamedWhereClauseParam("idOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable idOperacion.
     * @param value value to bind as idOperacion
     */
    public void setidOperacion(Integer value) {
        setNamedWhereClauseParam("idOperacion", value);
    }

    /**
     * Returns the bind variable value for idCliente.
     * @return bind variable value for idCliente
     */
    public Integer getidCliente() {
        return (Integer) getNamedWhereClauseParam("idCliente");
    }

    /**
     * Sets <code>value</code> for bind variable idCliente.
     * @param value value to bind as idCliente
     */
    public void setidCliente(Integer value) {
        setNamedWhereClauseParam("idCliente", value);
    }

    /**
     * Returns the bind variable value for idProceso.
     * @return bind variable value for idProceso
     */
    public Integer getidProceso() {
        return (Integer) getNamedWhereClauseParam("idProceso");
    }

    /**
     * Sets <code>value</code> for bind variable idProceso.
     * @param value value to bind as idProceso
     */
    public void setidProceso(Integer value) {
        setNamedWhereClauseParam("idProceso", value);
    }
    
    /**
     * Filtra los mensajes del VO por idTarea.
     * 
     * @param idTarea Id de la tarea a filtrar.
     * @return void
     */
    public void filtrarMensajes(Long idTarea)
    {
        this.clearCache();
        this.setidTarea(idTarea);
        this.setidProducto(null);
        this.setidOperacion(null);
        this.setidCliente(null);
        this.setidProceso(null);
        this.setaccionFinalizarTarea(null);
        this.executeQuery();
    }
    
    /**
     * Filtra los mensajes del VO por idTarea y la accion de finalizacion de la tarea.
     * 
     * @param idTarea Id de la tarea a filtrar.
     * @param accionFinalizarTarea accion de salida al finalizar la tarea por la cual deben filtrarse los mensajes.
     * @return void
     */    
    public void filtrarMensajes(Long idTarea, String accionFinalizarTarea)
    {
        this.clearCache();
        this.setidTarea(idTarea);
        this.setidProducto(null);
        this.setidOperacion(null);
        this.setidCliente(null);
        this.setidProceso(null);
        this.setaccionFinalizarTarea(accionFinalizarTarea);
        this.executeQuery();
    }
    
    /**
     * Filtra los mensajes del VO por idTarea, idProducto y la accion de finalizacion de la tarea.
     * 
     * @param idTarea Id de la tarea a filtrar.
     * @param idProducto Id del producto por el cual se filtran los mensajes.
     * @param accionFinalizarTarea accion de salida al finalizar la tarea por la cual deben filtrarse los mensajes.
     * @return void
     */
    public void filtrarMensajes(Long idTarea, Long idProducto, String accionFinalizarTarea)
    {
        this.clearCache();
        this.setidTarea(idTarea);
        this.setidProducto(idProducto);
        this.setidOperacion(null);
        this.setidCliente(null);
        this.setidProceso(null);
        this.setaccionFinalizarTarea(accionFinalizarTarea);
        this.executeQuery();
    }

    /**
     * Filtra los mensajes del VO por idTarea, idProducto y la accion de finalizacion de la tarea.
     * 
     * @param idTarea Id de la tarea a filtrar.
     * @param idProducto Id del producto por el cual se filtran los mensajes.
     * @param idOperacion Id de la operacion para el parametro del URI.
     * @param idCliente Id del cliente para el parametro del URI.
     * @param idProceso Id del proceso para el parametro del URI.
     * @param accionFinalizarTarea accion de salida al finalizar la tarea por la cual deben filtrarse los mensajes.
     * @return void
     */
    public void filtrarMensajes(Long idTarea, Long idProducto, Integer idOperacion, Integer idCliente, Integer idProceso, String accionFinalizarTarea)
    {
        logger.warning("INTO  filtrarMensajes : ");
        logger.warning("idTarea : " + idTarea );
        logger.warning("idProducto : " + idProducto);
        logger.warning("idOperacion : " + idOperacion);
        logger.warning("idCliente : " + idCliente);
        logger.warning("idProceso : " + idProceso);
        logger.warning("accionFinalizarTarea : " + accionFinalizarTarea);
        this.clearCache();
        this.setidTarea(idTarea);
        this.setidProducto(idProducto);
        this.setidOperacion(idOperacion);
        this.setidCliente(idCliente);
        this.setidProceso(idProceso);
        this.setaccionFinalizarTarea(accionFinalizarTarea);
        this.executeQuery();
    }
}
