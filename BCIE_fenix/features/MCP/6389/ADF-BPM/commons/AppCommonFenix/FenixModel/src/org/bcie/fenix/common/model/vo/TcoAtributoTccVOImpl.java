package org.bcie.fenix.common.model.vo;

import java.util.HashMap;
import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TcoAtributoTccVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 25 15:49:09 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TcoAtributoTccVOImpl
  extends ViewObjectImpl
  implements TcoAtributoTccVO
{   
    /**
     * Define Log de la aplicacion
     */
    public static final ADFLogger logger = ADFLogger.createADFLogger(TcoAtributoTccVOImpl.class);
  
    //TCC
    public static final String TCC_TERMINO = "TERMINO";
    public static final String TCC_COMISION = "COMISION";
    public static final String TCC_CONDICION = "CONDICION";
    
    //BindVariables
    public static final String BV_TERMINO = "varIdTcaTermino";
    public static final String BV_COMISION = "varIdTcaComision";
    public static final String BV_CONDICION = "varIdTcaCondicion";
    
    //ViewCriteria
    public static final String CRITERIA_TERMINO = "TcoAtributoTccVOByIdTcaTermino";
    public static final String CRITERIA_COMISION = "TcoAtributoTccVOByIdTcaComision";
    public static final String CRITERIA_CONDICION = "TcoAtributoTccVOByIdTcaCondicion";
  
  /**
   * This is the default constructor (do not remove).
   */
  public TcoAtributoTccVOImpl()
  {
  }

  /**
   * Returns the variable value for varIdTcaComision.
   * @return variable value for varIdTcaComision
   */
  public Integer getvarIdTcaComision()
  {
    return (Integer) ensureVariableManager().getVariableValue("varIdTcaComision");
  }

  /**
   * Sets <code>value</code> for variable varIdTcaComision.
   * @param value value to bind as varIdTcaComision
   */
  public void setvarIdTcaComision(Integer value)
  {
    ensureVariableManager().setVariableValue("varIdTcaComision", value);
  }

  /**
   * Returns the variable value for varIdTcaCondicion.
   * @return variable value for varIdTcaCondicion
   */
  public Integer getvarIdTcaCondicion()
  {
    return (Integer) ensureVariableManager().getVariableValue("varIdTcaCondicion");
  }

  /**
   * Sets <code>value</code> for variable varIdTcaCondicion.
   * @param value value to bind as varIdTcaCondicion
   */
  public void setvarIdTcaCondicion(Integer value)
  {
    ensureVariableManager().setVariableValue("varIdTcaCondicion", value);
  }
  
  /**
   * Returns the variable value for varIdTcaTermino.
   * @return variable value for varIdTcaTermino
   */
  public Integer getvarIdTcaTermino()
  {
    return (Integer) ensureVariableManager().getVariableValue("varIdTcaTermino");
  }

  /**
   * Sets <code>value</code> for variable varIdTcaTermino.
   * @param value value to bind as varIdTcaTermino
   */
  public void setvarIdTcaTermino(Integer value)
  {
    ensureVariableManager().setVariableValue("varIdTcaTermino", value);
  }
  
  public Map<String,Map> obtenerConfigucacionAtributosTcc(Integer piIdTcc, String psTipoTCC)
  { 
      logger.warning("INTO obtenerConfigucacionAtributosTcc.....");
    logger.warning("Parametro Id TCC: " + piIdTcc);
    logger.warning("Parametro Tipo TCC: " + psTipoTCC);
    
    Map<String,Map> atributosTccList = new HashMap<String,Map>();
    String criteriaName = null;
    String variableName = null;
    
    if(psTipoTCC != null && psTipoTCC.equalsIgnoreCase(TCC_TERMINO))
    {
      criteriaName = CRITERIA_TERMINO;
      variableName = BV_TERMINO;
      
    }else if(psTipoTCC != null && psTipoTCC.equalsIgnoreCase(TCC_COMISION))
    {
      criteriaName = CRITERIA_COMISION;
      variableName = BV_COMISION;
      
    }else if(psTipoTCC != null && psTipoTCC.equalsIgnoreCase(TCC_CONDICION))
    {
      criteriaName = CRITERIA_CONDICION;
      variableName = BV_CONDICION;
      
    }
    if(criteriaName != null)
    {
      aplicarCriterioBusqueda(criteriaName,variableName,piIdTcc);
      
      logger.warning("Cantidad de registros de configuracion encontrados: " + 
                     getEstimatedRowCount());
      
      RowSetIterator rs = this.createRowSetIterator(null);
      rs.reset();
  
      while (rs.hasNext()) {
          TcoAtributoTccVORowImpl r = (TcoAtributoTccVORowImpl) rs.next();
          atributosTccList.put((String)r.getAttribute(TcoAtributoTccVORowImpl.COLUMNA),r.getAttributesMap());
      }
  
      rs.closeRowSetIterator();
      
      removerCriterioBusqueda(criteriaName);
    }
    return atributosTccList;
  }
  
  private void aplicarCriterioBusqueda(String psNombreCriterio, String psNombreVariable , Object poValorVariable )
  {
    if(psNombreCriterio!= null)
    {
      ViewCriteria criteria = this.getViewCriteriaManager().getViewCriteria(psNombreCriterio);
      criteria.ensureVariableManager().setVariableValue(psNombreVariable, poValorVariable);
  
      this.applyViewCriteria(criteria);
      this.executeQuery();
    }
  }
    

  private void removerCriterioBusqueda(String psNombreCriterio)
  {
    this.getViewCriteriaManager().removeApplyViewCriteriaName(psNombreCriterio);
  }
  
  
}

