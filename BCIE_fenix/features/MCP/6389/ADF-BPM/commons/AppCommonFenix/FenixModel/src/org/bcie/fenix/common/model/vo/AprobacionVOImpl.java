package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.AprobacionVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 24 16:31:19 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AprobacionVOImpl extends ViewObjectImpl implements AprobacionVO {
    
    private static ADFLogger logger = ADFLogger.createADFLogger(AprobacionVOImpl.class);
    
    public static final String BUSCAR_POR_DECISION_VC = "AprobacionVOByIdDecisionCriteria";
    
    /**
     * This is the default constructor (do not remove).
     */
    public AprobacionVOImpl() {
    }
    
    public void buscarAprobacionPorIdDecisionVC(Number idDecision){
        logger.warning("Entra a buscarAprobacionPorIdDecisionVC");
        setpIdDecision(idDecision);
        
        ViewCriteria vc = getViewCriteria(BUSCAR_POR_DECISION_VC);
        applyViewCriteria(vc);
        executeQuery();
        
        setCurrentRow(last());
        logger.warning("Termina buscarAprobacionPorIdDecisionVC");
    }
    
    public String getNumeroResolucionById(Number id) {
        logger.warning("*** Inicia metodo getNumeroResolucionById");
        String numeroResolucion = null;
        
        if (id == null) {
            logger.warning("*** El parametro id es requerido para la busqueda");
            return null;
        } else {
            try {
                ViewCriteria vc = getViewCriteriaManager().getViewCriteria("AprobacionNumeroResolucionByIdVOCriteria");
                vc.ensureVariableManager().setVariableValue("pId", id);
                applyViewCriteria(vc);
                executeQuery();
                
                if (getEstimatedRowCount() > 0) {
                    setCurrentRow(first());
                    try  {
                        numeroResolucion = (String) getCurrentRow().getAttribute(AprobacionVORowImpl.NUMERORESOLUCION);
                        logger.warning("numeroResolucion recuperado -> " + numeroResolucion);
                    } catch (Exception e) {
                        logger.log(ADFLogger.ERROR, e.getMessage());
                    }
                } else {
                    logger.warning("El row recuperado es Null no hay coincidencias en la busqueda");
                }
            } catch (Exception e) {
                logger.log(ADFLogger.WARNING,
                           "*** Error al Buscar Por id??->" + e.getClass() + ":" + e.getMessage());
            } finally {
                getViewCriteriaManager().removeApplyViewCriteriaName("AprobacionNumeroResolucionByIdVOCriteria");
                executeQuery();
            }
        }
        logger.warning("*** Termina metodo getNumeroResolucionById");
        return numeroResolucion;
    }

    /**
     * Returns the variable value for pIdDecision.
     * @return variable value for pIdDecision
     */
    public Number getpIdDecision() {
        return (Number) ensureVariableManager().getVariableValue("pIdDecision");
    }

    /**
     * Sets <code>value</code> for variable pIdDecision.
     * @param value value to bind as pIdDecision
     */
    public void setpIdDecision(Number value) {
        ensureVariableManager().setVariableValue("pIdDecision", value);
    }

    /**
     * Returns the variable value for pId.
     * @return variable value for pId
     */
    public Number getpId() {
        return (Number) ensureVariableManager().getVariableValue("pId");
    }

    /**
     * Sets <code>value</code> for variable pId.
     * @param value value to bind as pId
     */
    public void setpId(Number value) {
        ensureVariableManager().setVariableValue("pId", value);
    }
}

