package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import java.math.RoundingMode;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 07 13:29:28 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FormularioCalculoInteresesVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        Base,
        Tasa,
        Desde,
        Hasta,
        Dias,
        Intereses,
        ContratoDesembolso,
        MontoPrepago,
        Moneda,
        IdTrePrepagoContrato,
        totalInteres;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int BASE = AttributesEnum.Base.index();
    public static final int TASA = AttributesEnum.Tasa.index();
    public static final int DESDE = AttributesEnum.Desde.index();
    public static final int HASTA = AttributesEnum.Hasta.index();
    public static final int DIAS = AttributesEnum.Dias.index();
    public static final int INTERESES = AttributesEnum.Intereses.index();
    public static final int CONTRATODESEMBOLSO = AttributesEnum.ContratoDesembolso.index();
    public static final int MONTOPREPAGO = AttributesEnum.MontoPrepago.index();
    public static final int MONEDA = AttributesEnum.Moneda.index();
    public static final int IDTREPREPAGOCONTRATO = AttributesEnum.IdTrePrepagoContrato.index();
    public static final int TOTALINTERES = AttributesEnum.totalInteres.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FormularioCalculoInteresesVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public Long getId() {
        return (Long) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Id.
     * @param value value to set the  Id
     */
    public void setId(Long value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Base.
     * @return the Base
     */
    public String getBase() {
        return (String) getAttributeInternal(BASE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Base.
     * @param value value to set the  Base
     */
    public void setBase(String value) {
        setAttributeInternal(BASE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Tasa.
     * @return the Tasa
     */
    public BigDecimal getTasa() {
        return (BigDecimal) getAttributeInternal(TASA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Tasa.
     * @param value value to set the  Tasa
     */
    public void setTasa(BigDecimal value) {
        setAttributeInternal(TASA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Desde.
     * @return the Desde
     */
    public Timestamp getDesde() {
        return (Timestamp) getAttributeInternal(DESDE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Desde.
     * @param value value to set the  Desde
     */
    public void setDesde(Timestamp value) {
        setAttributeInternal(DESDE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Hasta.
     * @return the Hasta
     */
    public Timestamp getHasta() {
        return (Timestamp) getAttributeInternal(HASTA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Hasta.
     * @param value value to set the  Hasta
     */
    public void setHasta(Timestamp value) {
        setAttributeInternal(HASTA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Dias.
     * @return the Dias
     */
    public Integer getDias() {
        return (Integer) getAttributeInternal(DIAS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dias.
     * @param value value to set the  Dias
     */
    public void setDias(Integer value) {
        setAttributeInternal(DIAS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Intereses.
     * @return the Intereses
     */
    public BigDecimal getIntereses() {
        return (BigDecimal) getAttributeInternal(INTERESES);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Intereses.
     * @param value value to set the  Intereses
     */
    public void setIntereses(BigDecimal value) {
        setAttributeInternal(INTERESES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ContratoDesembolso.
     * @return the ContratoDesembolso
     */
    public String getContratoDesembolso() {
        return (String) getAttributeInternal(CONTRATODESEMBOLSO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ContratoDesembolso.
     * @param value value to set the  ContratoDesembolso
     */
    public void setContratoDesembolso(String value) {
        setAttributeInternal(CONTRATODESEMBOLSO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MontoPrepago.
     * @return the MontoPrepago
     */
    public BigDecimal getMontoPrepago() {
        return (BigDecimal) getAttributeInternal(MONTOPREPAGO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MontoPrepago.
     * @param value value to set the  MontoPrepago
     */
    public void setMontoPrepago(BigDecimal value) {
        setAttributeInternal(MONTOPREPAGO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Moneda.
     * @return the Moneda
     */
    public String getMoneda() {
        return (String) getAttributeInternal(MONEDA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Moneda.
     * @param value value to set the  Moneda
     */
    public void setMoneda(String value) {
        setAttributeInternal(MONEDA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IdTrePrepagoContrato.
     * @return the IdTrePrepagoContrato
     */
    public Long getIdTrePrepagoContrato() {
        return (Long) getAttributeInternal(IDTREPREPAGOCONTRATO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IdTrePrepagoContrato.
     * @param value value to set the  IdTrePrepagoContrato
     */
    public void setIdTrePrepagoContrato(Long value) {
        setAttributeInternal(IDTREPREPAGOCONTRATO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute totalInteres.
     * @return the totalInteres
     */
    public BigDecimal gettotalInteres() {
        BigDecimal totalInteres = new BigDecimal(0);
        BigDecimal montoInteres = new BigDecimal(0);
        
        RowSetIterator iterator = this.getViewObject().createRowSetIterator(null);
               iterator.reset();
               
               while (iterator.hasNext()) {
                   Row row = iterator.next();
                   montoInteres = (BigDecimal)row.getAttribute("Intereses");
               if(montoInteres != null)
                   totalInteres = totalInteres.add(montoInteres.setScale(2, RoundingMode.CEILING));
               }
        
        iterator.closeRowSetIterator(); 
        return totalInteres;
    }
}

