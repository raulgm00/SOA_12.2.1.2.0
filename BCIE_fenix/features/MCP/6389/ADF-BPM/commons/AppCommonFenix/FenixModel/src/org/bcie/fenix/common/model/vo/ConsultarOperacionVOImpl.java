package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ConsultarOperacionVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 11 11:02:56 CST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultarOperacionVOImpl extends ViewObjectImpl implements ConsultarOperacionVO {
     
    private static ADFLogger logger = null;
   
    public ConsultarOperacionVOImpl() {
        
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
        
    }



    public Boolean verificarUsuarioComoResponsable(String usuario, Long idOperacion){
      logger.warning("Inicia metodo verificarUsuarioComoResponsable");
      logger.warning("Usuario a comprobar: "+usuario);
       Boolean esResponsableOperacion = Boolean.FALSE;
       String responsableOperacion = "";
        
       if(idOperacion != null){
           
                setpIdOperacion(idOperacion);
                executeQuery();
                
                if(getEstimatedRowCount() > 0){
                    Row fila = first();
                    
                    try{
                        responsableOperacion = (String)fila.getAttribute("Usuario");
                        logger.warning("El responsable de la operacion "+idOperacion+" es "+responsableOperacion);
                        
                        if(responsableOperacion.equalsIgnoreCase(usuario)){
                             esResponsableOperacion = Boolean.TRUE;
                        }
                    }catch(Exception e){
                        logger.warning("Ha ocurrido un error al comprobar el usuario como responsable de la operacion");
                    } 
                                    
                }else{
                    logger.warning("no se encontro el registro de la operacion "+idOperacion);
                }
            
       }else{
            logger.warning("Error, Parametro idOperacion resuelto a null, no se validara usuario");
        }
          
        
       logger.warning("Termina metodo verificarUsuarioComoResponsable");
      return esResponsableOperacion;
    }
   

    public Boolean esProductoOperacionIFI(Long idOperacion){
      logger.warning("Inicia metodo esProductoOperacionIFI");
      logger.warning("idOperacion: "+idOperacion);
       Boolean esProductoOperacionIFI = Boolean.FALSE;
       Integer idProducto = null;
       final Integer PRODUCTO_IFI = new Integer(26);
        
       if(idOperacion != null){
           
                setpIdOperacion(idOperacion);
                executeQuery();
                
                if(getEstimatedRowCount() > 0){
                    Row fila = first();
                    
                    try{
                        idProducto = (Integer)fila.getAttribute("IdProducto");
                                               
                        if(idProducto != null && idProducto.compareTo(PRODUCTO_IFI) == 0){
                            esProductoOperacionIFI = Boolean.TRUE;
                        }
                        
                    }catch(Exception e){
                        logger.warning("Ha ocurrido un error al comprobar el producto de la operacion");
                    } 
                                    
                }else{
                    logger.warning("no se encontro el registro de la operacion "+idOperacion);
                }
            
        }else{
            logger.warning("Error, Parametro idOperacion resuelto a null, no se validara el producto");
        }
          
        
       logger.warning("Termina metodo esProductoOperacionIFI :"+esProductoOperacionIFI);
      return esProductoOperacionIFI;
    }

    /**
     * Returns the bind variable value for pIdOperacion.
     * @return bind variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) getNamedWhereClauseParam("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        setNamedWhereClauseParam("pIdOperacion", value);
    }
}

