package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TcaSCRVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 27 12:13:45 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TcaSCRVOImpl extends ViewObjectImpl implements TcaSCRVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public TcaSCRVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void findDescripcionSCRById(Integer id) {
        logger.log(ADFLogger.WARNING, "Inside getDescripcionSCRById.");
        TcaSCRVORowImpl row = null;
        ViewCriteria viewCriteria = null;
        
        if(id != null && id > 0) {
            viewCriteria = this.getViewCriteriaManager().getViewCriteria("TcaSCRByIdVOCriteria");
            viewCriteria.ensureVariableManager().setVariableValue("pId", id);
            this.applyViewCriteria(viewCriteria);
            this.executeQuery();
            
            if(this.getEstimatedRowCount() > 0) {
                row = (TcaSCRVORowImpl) this.getRowAtRangeIndex(0);
                this.setCurrentRow(row); 
                this.getViewCriteriaManager().removeApplyViewCriteriaName("TcaSCRByIdVOCriteria");
            } else {
                logger.log(ADFLogger.WARNING, "No se encontraron registros con el Id " + id);
            }
        } else {
            logger.log(ADFLogger.WARNING, "Id es NULL o es menor a CERO");
        }
        logger.log(ADFLogger.WARNING, "Saliendo de getDescripcionSCRById.");
    }

    /**
     * Returns the variable value for pId.
     * @return variable value for pId
     */
    public Integer getpId() {
        return (Integer) ensureVariableManager().getVariableValue("pId");
    }

    /**
     * Sets <code>value</code> for variable pId.
     * @param value value to bind as pId
     */
    public void setpId(Integer value) {
        ensureVariableManager().setVariableValue("pId", value);
    }
}

