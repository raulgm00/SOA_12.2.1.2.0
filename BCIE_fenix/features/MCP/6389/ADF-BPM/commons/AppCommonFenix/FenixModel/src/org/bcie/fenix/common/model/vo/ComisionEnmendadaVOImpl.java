package org.bcie.fenix.common.model.vo;

import java.util.ArrayList;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ComisionEnmendadaVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 10 13:45:51 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ComisionEnmendadaVOImpl extends ViewObjectImpl implements ComisionEnmendadaVO {
    /**
     * This is the default constructor (do not remove).
     */
    private static ADFLogger logger = null;
    public ComisionEnmendadaVOImpl() {
        if(null == logger){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public List<Long> obtenerComisionesEnmendadas(Long idOperacion){
        logger.warning("Entra en obtenerComisionesEnmendadas.");
        List<Long> comisionEnmendada = new ArrayList<Long>();
        Long idComision = null;
        Long idComisionEnmendada = null;
        try{
            this.setpIdOperacion(idOperacion);
            this.executeQuery();
            RowSetIterator iterator = this.createRowSetIterator(null);
            iterator.reset();
            while(iterator.hasNext()){
                ComisionEnmendadaVORowImpl row = (ComisionEnmendadaVORowImpl)iterator.next();
                if(null !=row){
                    if(null != row.getIdComision()){
                        idComision = row.getIdComision();
                        comisionEnmendada.add(idComision);
                        if(null != row.getIdComisionEnmendada()){
                            idComisionEnmendada = row.getIdComisionEnmendada();
                            comisionEnmendada.add(idComisionEnmendada);
                        }else{
                            logger.warning("No se encontro id comision enmendada.");
                        }
                    }else{
                        logger.warning("No se recupero el id de la comision.");
                    }
                }else{
                    logger.warning("El row es nulo.");
                }
            }
            iterator.closeRowSetIterator();
        }catch(Exception e){
            logger.warning("Error en obtenerComisionesEnmendadas.", e);
        }
        return comisionEnmendada;
    }
    /**
     * Returns the bind variable value for pIdOperacion.
     * @return bind variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) getNamedWhereClauseParam("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        setNamedWhereClauseParam("pIdOperacion", value);
    }
}

