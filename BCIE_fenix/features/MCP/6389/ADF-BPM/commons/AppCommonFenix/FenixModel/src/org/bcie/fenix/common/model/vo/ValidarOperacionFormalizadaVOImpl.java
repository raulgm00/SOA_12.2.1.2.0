package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ValidarOperacionFormalizadaVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 12 17:00:34 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ValidarOperacionFormalizadaVOImpl extends ViewObjectImpl implements ValidarOperacionFormalizadaVO {
    
    private static ADFLogger logger = null;
    
    public ValidarOperacionFormalizadaVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }



    public Boolean validarOperacion(Long idOperacion){
        logger.warning("Inf, inicia metodo validarOperacion para la operacion : " +idOperacion);
         Boolean respuesta = Boolean.TRUE;
          
         if(idOperacion == null){
               logger.warning("Inf, el parametro idOperacion requerido es resuelto a null");
               return Boolean.FALSE;
             }
          
            setpIdOperacion(idOperacion);
            executeQuery();
            
          
            if(getEstimatedRowCount() >0){
                  logger.warning("Inf, numero de lienas asociadas a la operacion: "+getEstimatedRowCount());
                   
                  RowSetIterator iter = createRowSetIterator(null);                  
                  ValidarOperacionFormalizadaVORowImpl row = null;
                 
                  logger.warning("Inf, iterando sobre lineas...");
                  while(iter.hasNext()){
                      row = (ValidarOperacionFormalizadaVORowImpl) iter.next();                                        
                     
                               Long idLinea = (null == row.getAttribute("Idlinea"))? null 
                                            : (Long)row.getAttribute("Idlinea");
                      
                          String codigoFlex = (null == row.getAttribute("IdFlexcube") )? null
                                            : row.getAttribute("IdFlexcube").toString() ;
                      
                         Integer banEstatus = (null == row.getAttribute("BanEstatus") )? null
                                            : (Integer)row.getAttribute("BanEstatus") ;
                     
                      logger.warning("Inf, La linea : "+idLinea+" tiene un codigo flex de :"+codigoFlex);
                      
                      if(banEstatus != null && banEstatus == 1 ){
                          if(codigoFlex == null || codigoFlex.equals("")){
                                 // logger.warning("Inf, *Importante! La linea : "+idLinea+" no tiene un codigo flex ");
                                  respuesta = Boolean.FALSE;
                              }
                      }else{
                         //logger.warning("Inf, La linea : "+idLinea+" tiene ban estatus 0 no se tomara en cuenta para validacion");
                       }
                          
                      } 
                  iter.closeRowSetIterator();  
                
              }else{
                logger.warning("Inf, *Importante! la operacion a validar no cuenta con lineas ");
                return Boolean.FALSE; 
              }
        
        
        logger.warning("Inf, termina metodo validarOperacion");
        return respuesta;
        }


    /**
     * Returns the bind variable value for pIdOperacion.
     * @return bind variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) getNamedWhereClauseParam("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        setNamedWhereClauseParam("pIdOperacion", value);
    }
}

