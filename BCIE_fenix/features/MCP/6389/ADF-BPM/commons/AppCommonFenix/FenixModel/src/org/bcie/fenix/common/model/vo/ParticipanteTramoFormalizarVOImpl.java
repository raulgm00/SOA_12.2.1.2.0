package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ParticipanteTramoFormalizarVO;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 08 11:36:18 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ParticipanteTramoFormalizarVOImpl extends ViewObjectImpl implements ParticipanteTramoFormalizarVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public ParticipanteTramoFormalizarVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for idTramo.
     * @return bind variable value for idTramo
     */
    public Long getIdTramo() {
        return (Long) getNamedWhereClauseParam("IdTramo");
    }

    /**
     * Sets <code>value</code> for bind variable idTramo.
     * @param value value to bind as idTramo
     */
    public void setIdTramo(Long value) {
        logger.log(ADFLogger.WARNING, "Inside setIdTramo.");
        logger.log(ADFLogger.WARNING, "value:"+value);
        setNamedWhereClauseParam("IdTramo", value);
        this.executeQuery();
        logger.log(ADFLogger.WARNING, "Cantidad de rows obtenidos:" +this.getRowCount());
    }
    
    public void crearParticipanteTramoFormalizar(Long idCliente,Long idTramoFormalizar,BigDecimal monto,
                                                            BigDecimal porcentaje) {
        logger.log(ADFLogger.TRACE, "Into crearParticipanteTramoFormalizar.");
        Row tramoFormalizarRow = null;
        oracle.jbo.domain.Number idParticipanteTramoFormalizar = null;
        NameValuePairs nvpParticipanteTramoFormalizar = null;
        SequenceImpl seqParticipanteTramoFormalizar = null;

        seqParticipanteTramoFormalizar = new SequenceImpl("PARTICIPANTE_TRAMO_FORMA_SEQ", getDBTransaction());
        idParticipanteTramoFormalizar = seqParticipanteTramoFormalizar.getSequenceNumber();
        
        nvpParticipanteTramoFormalizar = new NameValuePairs();
        nvpParticipanteTramoFormalizar.setAttribute("Id", idParticipanteTramoFormalizar);
        nvpParticipanteTramoFormalizar.setAttribute("IdCliente", idCliente);
        nvpParticipanteTramoFormalizar.setAttribute("IdTramoFormalizar", idTramoFormalizar);
        nvpParticipanteTramoFormalizar.setAttribute("Monto", monto);
        nvpParticipanteTramoFormalizar.setAttribute("Porcentaje", porcentaje);
        nvpParticipanteTramoFormalizar.setAttribute("BanEstatus", Integer.valueOf(1));//default value 1
        nvpParticipanteTramoFormalizar.setAttribute("FechaRegistro",
                                                                new java.sql.Timestamp(System.currentTimeMillis()));
        
        tramoFormalizarRow = this.createAndInitRow(nvpParticipanteTramoFormalizar);
                
        getDBTransaction().commit();
        
        //ejecutar query
        this.executeQuery();

    }
    
    public void eliminarParticipanteTramoFormalizar(Long idParticipanteTramoFormalizar) {
        logger.log(ADFLogger.TRACE, "Into eliminarParticipanteTramoFormalizar.");
        Row ParticipanteTramoFormalizarRow = null;
        ParticipanteTramoFormalizarRow = this.getRow(new Key(new Object[] {idParticipanteTramoFormalizar}));
        if(ParticipanteTramoFormalizarRow != null) {
            ParticipanteTramoFormalizarRow.setAttribute("BanEstatus",new Integer(0));
            getDBTransaction().commit();
        }
        //ejecutar query
        this.executeQuery();
    }
    
    public void actualizarParticipanteTramoFormalizar(Long idParticipanteTramoFormalizar,Long idCliente,
                                                      BigDecimal monto, BigDecimal porcentaje) {
        logger.log(ADFLogger.TRACE, "Into actualizarParticipanteTramoFormalizar.");
        Row ParticipanteTramoFormalizarRow = null;
        ParticipanteTramoFormalizarRow = this.getRow(new Key(new Object[] {idParticipanteTramoFormalizar}));
        if(ParticipanteTramoFormalizarRow != null) {
            ParticipanteTramoFormalizarRow.setAttribute("IdCliente",idCliente);
            ParticipanteTramoFormalizarRow.setAttribute("Monto",monto);
            ParticipanteTramoFormalizarRow.setAttribute("Porcentaje",porcentaje);
            getDBTransaction().commit();
        }
        //ejecutar query
        this.executeQuery();
    }
}

