package org.bcie.fenix.common.model.vo;

import java.sql.Timestamp;

import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 11 16:03:37 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TcaAppExternaVORowImpl extends ViewRowImpl {


    public static final int ENTITY_TCAAPPEXTERNA = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        Descripcion,
        DescripcionCorta,
        BanEstatus,
        FechaRegistro,
        CodExterno,
        RequiereNuevaVentana,
        BanEstatusAdapter;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int DESCRIPCION = AttributesEnum.Descripcion.index();
    public static final int DESCRIPCIONCORTA = AttributesEnum.DescripcionCorta.index();
    public static final int BANESTATUS = AttributesEnum.BanEstatus.index();
    public static final int FECHAREGISTRO = AttributesEnum.FechaRegistro.index();
    public static final int CODEXTERNO = AttributesEnum.CodExterno.index();
    public static final int REQUIERENUEVAVENTANA = AttributesEnum.RequiereNuevaVentana.index();
    public static final int BANESTATUSADAPTER = AttributesEnum.BanEstatusAdapter.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TcaAppExternaVORowImpl() {
    }

    /**
     * Gets TcaAppExterna entity object.
     * @return the TcaAppExterna
     */
    public EntityImpl getTcaAppExterna() {
        return (EntityImpl) getEntity(ENTITY_TCAAPPEXTERNA);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public DBSequence getId() {
        return (DBSequence) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for DESCRIPCION using the alias name Descripcion.
     * @return the DESCRIPCION
     */
    public String getDescripcion() {
        return (String) getAttributeInternal(DESCRIPCION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPCION using the alias name Descripcion.
     * @param value value to set the DESCRIPCION
     */
    public void setDescripcion(String value) {
        setAttributeInternal(DESCRIPCION, value);
    }

    /**
     * Gets the attribute value for DESCRIPCION_CORTA using the alias name DescripcionCorta.
     * @return the DESCRIPCION_CORTA
     */
    public String getDescripcionCorta() {
        return (String) getAttributeInternal(DESCRIPCIONCORTA);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPCION_CORTA using the alias name DescripcionCorta.
     * @param value value to set the DESCRIPCION_CORTA
     */
    public void setDescripcionCorta(String value) {
        setAttributeInternal(DESCRIPCIONCORTA, value);
    }

    /**
     * Gets the attribute value for BAN_ESTATUS using the alias name BanEstatus.
     * @return the BAN_ESTATUS
     */
    public Integer getBanEstatus() {
        return (Integer) getAttributeInternal(BANESTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for BAN_ESTATUS using the alias name BanEstatus.
     * @param value value to set the BAN_ESTATUS
     */
    public void setBanEstatus(Integer value) {
        setAttributeInternal(BANESTATUS, value);
    }

    /**
     * Gets the attribute value for FECHA_REGISTRO using the alias name FechaRegistro.
     * @return the FECHA_REGISTRO
     */
    public Timestamp getFechaRegistro() {
        return (Timestamp) getAttributeInternal(FECHAREGISTRO);
    }

    /**
     * Sets <code>value</code> as attribute value for FECHA_REGISTRO using the alias name FechaRegistro.
     * @param value value to set the FECHA_REGISTRO
     */
    public void setFechaRegistro(Timestamp value) {
        setAttributeInternal(FECHAREGISTRO, value);
    }

    /**
     * Gets the attribute value for COD_EXTERNO using the alias name CodExterno.
     * @return the COD_EXTERNO
     */
    public String getCodExterno() {
        return (String) getAttributeInternal(CODEXTERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for COD_EXTERNO using the alias name CodExterno.
     * @param value value to set the COD_EXTERNO
     */
    public void setCodExterno(String value) {
        setAttributeInternal(CODEXTERNO, value);
    }

    /**
     * Gets the attribute value for REQUIERE_NUEVA_VENTANA using the alias name RequiereNuevaVentana.
     * @return the REQUIERE_NUEVA_VENTANA
     */
    public Integer getRequiereNuevaVentana() {
        return (Integer) getAttributeInternal(REQUIERENUEVAVENTANA);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUIERE_NUEVA_VENTANA using the alias name RequiereNuevaVentana.
     * @param value value to set the REQUIERE_NUEVA_VENTANA
     */
    public void setRequiereNuevaVentana(Integer value) {
        setAttributeInternal(REQUIERENUEVAVENTANA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BanEstatusAdapter.
     * @return the BanEstatusAdapter
     */
    public Boolean getBanEstatusAdapter() {
        Boolean banEstatusBool = null;
        if (null != getBanEstatus()) {
            if (getBanEstatus().compareTo(1) == 0) {
                banEstatusBool = Boolean.TRUE;
            } else {
                banEstatusBool = Boolean.FALSE;
            }
        }
        return banEstatusBool;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BanEstatusAdapter.
     * @param value value to set the  BanEstatusAdapter
     */
    public void setBanEstatusAdapter(Boolean value) {
        Integer banEstatusInt = null;
        
        if (null != value) {
            if (value.compareTo(Boolean.TRUE) == 0) {
                banEstatusInt = 1;
            } else {
                banEstatusInt = 0;
            }
        }
        
        setAttributeInternal(BANESTATUS, banEstatusInt);
    }
}

