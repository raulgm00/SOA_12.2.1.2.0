package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ConsultarTccTerminoVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 18 11:11:44 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultarTccTerminoVOImpl extends ViewObjectImpl implements ConsultarTccTerminoVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public ConsultarTccTerminoVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    /**
     *Metodo para validar existencia de algun termino en la tabla TERMINO por operacion y TcaTermino
     * @param idOperacion
     * @param idTcaTermino
     * @return Boolean 'existeTermino'
     */
    public Boolean validarExisteTermino(Long idOperacion, Integer idTcaTermino){
        logger.warning("Inicia metodo validarTerminoFechaFirmaContrato.");
        Boolean existeTermino = Boolean.FALSE;
        ViewCriteria vc = null;
        
        if(null == idOperacion || null == idTcaTermino){
            logger.warning("Parametros requeridos son NULL. IdOperacion: " + idOperacion + 
                           ", IdTcaTermino: " + idTcaTermino);
            return null;
        }
        
        try{
            logger.warning("Ejecutando criteria de busqueda de Termino por Operacion: " + idOperacion + 
                           " y TcaTermino: " + idTcaTermino);
            vc = this.getViewCriteriaManager().getViewCriteria("ConsultarTerminoOperacionTcaTerminoVC");
            vc.ensureVariableManager().setVariableValue("pIdOperacion", idOperacion);
            vc.ensureVariableManager().setVariableValue("pIdTcaTermino", idTcaTermino);
            this.applyViewCriteria(vc);
            this.executeQuery();
        }catch(Exception e){
            logger.warning("ERROR al ejecutar el crietria ConsultarTerminoOperacionTcaTerminoVC.", e);
            //Eliminamos el ViewCriteria
            this.getViewCriteriaManager().removeApplyViewCriteriaName("ConsultarTerminoOperacionTcaTerminoVC");
            return null;
        }
        
        logger.warning("Registros encontrados para el termino: " + getEstimatedRowCount());
        if(getEstimatedRowCount() > 0){
            existeTermino = Boolean.TRUE;
        }
        
        //Eliminamos el ViewCriteria
        this.getViewCriteriaManager().removeApplyViewCriteriaName("ConsultarTerminoOperacionTcaTerminoVC");
        logger.warning("Termina metodo validarTerminoFechaFirmaContrato.");
        return existeTermino;
    }

    /**
     * Returns the variable value for pIdOperacion.
     * @return variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) ensureVariableManager().getVariableValue("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        ensureVariableManager().setVariableValue("pIdOperacion", value);
    }

    /**
     * Returns the variable value for pIdTcaTermino.
     * @return variable value for pIdTcaTermino
     */
    public Integer getpIdTcaTermino() {
        return (Integer) ensureVariableManager().getVariableValue("pIdTcaTermino");
    }

    /**
     * Sets <code>value</code> for variable pIdTcaTermino.
     * @param value value to bind as pIdTcaTermino
     */
    public void setpIdTcaTermino(Integer value) {
        ensureVariableManager().setVariableValue("pIdTcaTermino", value);
    }
}

