package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import java.util.HashMap;
import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.DatosDesembolsoVO;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 13 19:12:55 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DatosDesembolsoVOImpl extends ViewObjectImpl implements DatosDesembolsoVO {
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public DatosDesembolsoVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public Map monto(Long id){
        double TInicio, TFin, tiempo; //Variables para determinar el tiempo de ejecución
        TInicio = System.currentTimeMillis(); //Tomamos la hora en que inicio el algoritmo y la almacenamos en la variable inicio
        HashMap<String,Object> resultado=  new HashMap<String,Object>();
        setvarIdDesembolso(id);
        executeQuery();
        if(getEstimatedRowCount()>0){
                Row row= getRowAtRangeIndex(0);
                logger.warning("Monto: "+(BigDecimal) row.getAttribute("MontoDesembolsar"));
                logger.warning("proyecto: "+(Integer) row.getAttribute("IdTcaProyMunicipal"));
                logger.warning("MontoTipo: "+(Integer) row.getAttribute("IdTcaTipoMoneda"));
                logger.warning("MontoUSD: "+(BigDecimal) row.getAttribute("MontoDesembolsarUsd"));
                logger.warning("Contrato: "+(String) row.getAttribute("ContratoFlexcube"));
                logger.warning("Estado: "+(Integer) row.getAttribute("IdTcaEstado"));
                logger.warning("Id iniciativa: "+ (Integer) row.getAttribute("IniciativaEstrategica"));
                logger.warning("ProgramaOperacion: "+(String) row.getAttribute("ProgramaOperacion"));
                logger.warning("DestinoFinanciamiento: "+(String) row.getAttribute("DestinoFinanciamiento"));
                logger.warning("IdTcaModalidadFinan: "+(Integer) row.getAttribute("IdTcaModalidadFinan"));
                logger.warning("IdCatActividadEconomica: "+(Integer) row.getAttribute("IdCatActividadEconomica"));
                logger.warning("IdCatAreaFocalizacion: "+(Integer) row.getAttribute("IdCatAreaFocalizacion"));
                logger.warning("IdTcaActividadEconomicaF1: "+(Integer) row.getAttribute("IdTcaActividadEconomicaF1"));
                logger.warning("IdCatEjeEstrategico: "+(Integer) row.getAttribute("IdCatEjeEstrategico"));
                
                resultado.put("resultado",Boolean.TRUE);
                if(null!=(BigDecimal) row.getAttribute("MontoDesembolsar")){
                        resultado.put("monto", (BigDecimal) row.getAttribute("MontoDesembolsar"));
                    }
                if(null!=(Integer) row.getAttribute("IdTcaTipoMoneda")){
                        resultado.put("tipomonto", (Integer) row.getAttribute("IdTcaTipoMoneda"));
                    }
                if(null!=(BigDecimal) row.getAttribute("MontoDesembolsarUsd")){
                        resultado.put("montousd", (BigDecimal) row.getAttribute("MontoDesembolsarUsd"));
                    }
                if(null!=(String) row.getAttribute("ContratoFlexcube")){
                        resultado.put("contrato", (String) row.getAttribute("ContratoFlexcube"));
                    }
                if(null!=(Integer) row.getAttribute("IdTcaEstado")){
                        resultado.put("estado", (Integer) row.getAttribute("IdTcaEstado"));
                    }
                
                if(null!=(String) row.getAttribute("ProgramaOperacion")){
                        resultado.put("programa", (String) row.getAttribute("ProgramaOperacion"));
                    }
                if(null!=(String) row.getAttribute("DestinoFinanciamiento")){
                        resultado.put("destino", (String) row.getAttribute("DestinoFinanciamiento"));
                    }
                
                if(null!=(Integer) row.getAttribute("IdTcaModalidadFinan")){
                        resultado.put("modalidad", (Integer) row.getAttribute("IdTcaModalidadFinan"));
                    }
                if(null!=(Integer) row.getAttribute("IdCatActividadEconomica")){
                        resultado.put("actividad", (Integer) row.getAttribute("IdCatActividadEconomica"));
                    }
                if(null!=(Integer) row.getAttribute("IdCatAreaFocalizacion")){
                        resultado.put("area", (Integer) row.getAttribute("IdCatAreaFocalizacion"));
                    }
                if(null!=(Integer) row.getAttribute("IdCatEjeEstrategico")){
                        resultado.put("eje", (Integer) row.getAttribute("IdCatEjeEstrategico"));
                    }
                if(null!=(Integer) row.getAttribute("IdTcaActividadEconomicaF1")){
                        resultado.put("actividadf1", (Integer) row.getAttribute("IdTcaActividadEconomicaF1"));
                    }
                if(null!=(Integer) row.getAttribute("IniciativaEstrategica")){
                        resultado.put("iniciativa", (Integer) row.getAttribute("IniciativaEstrategica"));
                    }
                
                if(null!=(Integer) row.getAttribute("IdTcaProyMunicipal")){
                        resultado.put("proyecto", (Integer) row.getAttribute("IdTcaProyMunicipal"));
                    }
                if(null!=(Long) row.getAttribute("IdTcaProductoPrograma")){
                        resultado.put("IdTcaProductoPrograma", (Long) row.getAttribute("IdTcaProductoPrograma"));
                    }
            }
        else{
                resultado.put("destino",Boolean.FALSE);
            }
        TFin = System.currentTimeMillis(); //Tomamos la hora en que finalizó el algoritmo y la almacenamos en la variable T
        tiempo = (TFin - TInicio)/ 1000; //Calculamos los milisegundos de diferencia
        logger.warning("termina el metodo monto con una duracion de: "+tiempo+" segundos");
        return resultado;
        }

    /**
     * Returns the bind variable value for varIdDesembolso.
     * @return bind variable value for varIdDesembolso
     */
    public Long getvarIdDesembolso() {
        return (Long) getNamedWhereClauseParam("varIdDesembolso");
    }

    /**
     * Sets <code>value</code> for bind variable varIdDesembolso.
     * @param value value to bind as varIdDesembolso
     */
    public void setvarIdDesembolso(Long value) {
        if(null!=value){
        setNamedWhereClauseParam("varIdDesembolso", value);
            }
        
    }
}

