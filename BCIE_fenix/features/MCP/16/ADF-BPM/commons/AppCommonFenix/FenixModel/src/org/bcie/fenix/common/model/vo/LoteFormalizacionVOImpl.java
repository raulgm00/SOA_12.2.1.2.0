package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.LoteFormalizacionVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 21 19:09:58 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LoteFormalizacionVOImpl extends ViewObjectImpl implements LoteFormalizacionVO {
    private static ADFLogger logger = null;
    /**
     * This is the default constructor (do not remove).
     */
    public LoteFormalizacionVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for varOperacion.
     * @return bind variable value for varOperacion
     */
    public Long getvarOperacion() {
        return (Long) getNamedWhereClauseParam("varOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable varOperacion.
     * @param value value to bind as varOperacion
     */
    public void setvarOperacion(Long value) {
        setNamedWhereClauseParam("varOperacion", value);
    }

    /**
     * Returns the bind variable value for varLote.
     * @return bind variable value for varLote
     */
    public Long getvarLote() {
        return (Long) getNamedWhereClauseParam("varLote");
    }

    /**
     * Sets <code>value</code> for bind variable varLote.
     * @param value value to bind as varLote
     */
    public void setvarLote(Long value) {
        setNamedWhereClauseParam("varLote", value);
    }
    
    public Boolean validarMontoLote(Long idOperacion, Long idLote, BigDecimal monto){
        Boolean respuesta=Boolean.FALSE;
        BigDecimal montoPresupuestado=BigDecimal.ZERO;
        logger.warning("Inicia metodo validarMontoLote");
        logger.warning("idOperacion: "+ idOperacion);
        logger.warning("idLote: "+ idLote);
        logger.warning("monto: "+ monto);
        if(null!= idOperacion && null!=idLote && null!= monto){
            setvarOperacion(idOperacion);
            setvarLote(idLote);
            this.executeQuery();
            Row row =this.getRowAtRangeIndex(0);
            if(null!=row){
                if(null!=row.getAttribute("MontoPresupuestado")){
                        montoPresupuestado=(BigDecimal)row.getAttribute("MontoPresupuestado");
                        if(montoPresupuestado.compareTo(monto)==0 ||
                        montoPresupuestado.compareTo(monto)==1){
                                                                respuesta=Boolean.TRUE;
                                                                    }
                    }
                else{
                    logger.warning("No se pudo obtener dato del monto presupuestado");
                    }
                }
            else{
                logger.warning("No hay registro del lote con los parametros ingresados");
                }
            }
        else{
            logger.warning("Datos vienen en nulo");
            }
        logger.warning("Termina metodo validarMontoLote");
        logger.warning("resultado: "+ respuesta);
        return respuesta;
        }
}

