package org.bcie.fenix.common.model.vo.consultarconfigcondicionesfinancieras;

import java.math.BigDecimal;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.consultarconfigcondicionesfinancieras.clases.TablaDinamicaVOBean;
import org.bcie.fenix.common.model.vo.consultarconfigcondicionesfinancieras.common.TcaTareaConBtnDinVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 11 16:35:48 CDT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TcaTareaConBtnDinVOImpl extends ViewObjectImpl implements TcaTareaConBtnDinVO {
    /**
     * This is the default constructor (do not remove).
     */

    private static ADFLogger logger = null;

    public TcaTareaConBtnDinVOImpl() {

        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }


    public Map<String, TablaDinamicaVOBean> obtenerDatos(String p_nombreTabla, Integer p_idTareaBpm, Integer p_IdProducto) {
        // Declaración de un Mapa de "String". Puede ser de cualquier otro Elemento u Objeto (float, Boolean, Object, ...)
        Map<String, TablaDinamicaVOBean> map = new HashMap<String, TablaDinamicaVOBean>();
        String mess = "en proceso";
        ViewCriteria criterial = null;

        System.out.println("=====================================================================================");
        System.out.println("-- PROCESO " + mess + " Id Tarea: " + p_idTareaBpm + " Nombre Tabla: " + p_nombreTabla);
        System.out.println("=====================================================================================");

        try {
            //criterial = this.getViewCriteriaManager().getViewCriteria("TcaTareaConBtnDinVOCriteria");
            //criterial.ensureVariableManager().setVariableValue("p_idTareaBpm", p_idTareaBpm);
            //this.applyViewCriteria(criterial);
            this.setP_ID_PRODUCTO(p_IdProducto);
            this.executeQuery();

            logger.warning("cantidad de registros :" + this.getEstimatedRowCount());

            //Validar que existen datos en la ejecucuón de View Criterial
            if (this.getEstimatedRowCount() > 0) {
                logger.warning("Se encontraron " + this.getEstimatedRowCount() + " registro");
                //Iteración de View Criterial:
                RowSetIterator iter = this.createRowSetIterator(null);
                map = desempaquetarColecion(iter);
                imprimirTca(map);
            } else {
                logger.warning("No se encontraron registros");
                map.put("ERROR", null);
                
            }


        } catch (Exception e) {
            // TODO: Add catch code
            logger.warning("Error al buscar por p_idTareaBpm : " + e);
        } finally {
            logger.warning("Se remueve criterio de busqueda");
            getViewCriteriaManager().removeApplyViewCriteriaName("TcaTareaConBtnDinVOCriteria");
        }
        this.executeQuery();
        logger.warning("Fuera de obtenerDatos");
        return map;
    }

    public Map<String, TablaDinamicaVOBean> desempaquetarColecion(RowSetIterator iter) {
        int contador;
        Map<String, TablaDinamicaVOBean> mapa = new HashMap<String, TablaDinamicaVOBean>();
        TablaDinamicaVOBean beanLocal = null;
        Integer[][] tablaVerdad = new Integer[2][2];

        contador = 1;
        while (iter.hasNext()) {
            
            Row r = iter.next();
            //imprimirRow(r);
            tablaVerdad[(Integer) r.getAttribute("ProductoConfigurado")][(Integer) r.getAttribute("Retorno")] = (Integer) r.getAttribute("Visible");
            if (contador == 4) {
                contador = 1;
                
                
                    beanLocal = new TablaDinamicaVOBean(Integer.parseInt(r.getAttribute("Id").toString()),
                                            r.getAttribute("Componente").toString(),
                                            Integer.parseInt(r.getAttribute("IdTareaBpm").toString()),
                                            Integer.parseInt(r.getAttribute("BanStatus").toString()),
                                            r.getAttribute("Accion").toString(),
                                            Integer.parseInt(r.getAttribute("ProductoConfigurado").toString()),
                                            Integer.parseInt(r.getAttribute("Retorno").toString()),
                                            Integer.parseInt(r.getAttribute("Visible").toString()),
                                            r.getAttribute("FechaRegistro").toString(),
                                            tablaVerdad,
                                            Integer.parseInt(r.getAttribute("IdProducto").toString()));

                mapa.put(r.getAttribute("Componente").toString(), beanLocal);
                //String encabezado = r.getAttribute("Componente").toString() + " - " + r.getAttribute("Accion").toString();
                //imprimirTablaVerdad(tablaVerdad, encabezado);
                //System.out.println(beanLocal.toString());
                tablaVerdad = new Integer[2][2];
            } else {
                contador += 1;
            }
        }

        return mapa;
    }

    public void imprimirRow(Row fila) {
        System.out.println("==================== OBJ BD ===================================");
        System.out.println("Id = " + fila.getAttribute("Id"));
        System.out.println("Componente = " + fila.getAttribute("Componente"));
        System.out.println("IdTareaBpm = " + fila.getAttribute("IdTareaBpm"));
        System.out.println("BanStatus = " + fila.getAttribute("BanStatus"));
        System.out.println("Acción = " + fila.getAttribute("Accion"));
        System.out.println("ProductoConfigurado = " + fila.getAttribute("ProductoConfigurado"));
        System.out.println("Retorno = " + fila.getAttribute("Retorno"));
        System.out.println("Visible = " + fila.getAttribute("Visible"));
        System.out.println("FechaRegistro = " + fila.getAttribute("FechaRegistro"));
        //System.out.println("TiposProductosConfigurados = " + fila.getAttribute("TiposProductosConfigurados"));
        System.out.println("IdPrpoducto = " + fila.getAttribute("IdProducto"));
        System.out.println("===============================================================");

    }

    public void imprimirTablaVerdad(Integer[][] t, String btn) {

        System.out.println("============================= " + btn + " ================================");
        for (int x = 0; x < 2; x++) {
            for (int y = 0; y < 2; y++) {
                System.out.println("[" + x + "]" + "[" + y + "]" + " = " + t[x][y]);
            }
        }

    }
    
    public void imprimirTca(Map<String, TablaDinamicaVOBean> map) {

        for (Map.Entry<String, TablaDinamicaVOBean> entry : map.entrySet()) {
            System.out.println(" ======================== " + entry.getKey() + " ================================== " );
            System.out.println(entry.getValue().toString());
        }

    }
    

    /**
     * Returns the variable value for p_idTareaBpm.
     * @return variable value for p_idTareaBpm
     */
    public BigDecimal getp_idTareaBpm() {
        return (BigDecimal) ensureVariableManager().getVariableValue("p_idTareaBpm");
    }

    /**
     * Sets <code>value</code> for variable p_idTareaBpm.
     * @param value value to bind as p_idTareaBpm
     */
    public void setp_idTareaBpm(BigDecimal value) {
        ensureVariableManager().setVariableValue("p_idTareaBpm", value);
    }

    /**
     * Returns the bind variable value for P_ID_PRODUCTO.
     * @return bind variable value for P_ID_PRODUCTO
     */
    public Integer getP_ID_PRODUCTO() {
        return (Integer) getNamedWhereClauseParam("P_ID_PRODUCTO");
    }

    /**
     * Sets <code>value</code> for bind variable P_ID_PRODUCTO.
     * @param value value to bind as P_ID_PRODUCTO
     */
    public void setP_ID_PRODUCTO(Integer value) {
        setNamedWhereClauseParam("P_ID_PRODUCTO", value);
    }

}

