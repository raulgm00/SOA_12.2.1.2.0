package org.bcie.fenix.common.model.vo;

import java.text.DateFormat;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.Calendar;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;

import org.bcie.fenix.common.model.utils.ModelUtils;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 09 15:58:13 VET 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class GestionarAvisoDeCobroVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        IdCliente,
        Periodicidad,
        TipoGeneracion,
        TipoSaldos,
        FechaInicial,
        FechaFinal,
        SegregarOperacion,
        NivelDetalle,
        PeriodicidadLOV1,
        TipoGeneracionLOV1,
        TipoSaldosLOV1,
        NivelDetalleLOV1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final String DATE_FORMAT = "yyyy-MM-dd";
    public static final String DATE_SEPARATOR = "-";
    public static final String FIRST_DAY_OF_MONTH = "01";
    public static final String DEFAULT_VALUE_TODOS = "TODOS";
    public static final String DEFAULT_VALUE_CONSOLIDADA = "CONSOLIDADA";


    public static final int IDCLIENTE = AttributesEnum.IdCliente.index();
    public static final int PERIODICIDAD = AttributesEnum.Periodicidad.index();
    public static final int TIPOGENERACION = AttributesEnum.TipoGeneracion.index();
    public static final int TIPOSALDOS = AttributesEnum.TipoSaldos.index();
    public static final int FECHAINICIAL = AttributesEnum.FechaInicial.index();
    public static final int FECHAFINAL = AttributesEnum.FechaFinal.index();
    public static final int SEGREGAROPERACION = AttributesEnum.SegregarOperacion.index();
    public static final int NIVELDETALLE = AttributesEnum.NivelDetalle.index();
    public static final int PERIODICIDADLOV1 = AttributesEnum.PeriodicidadLOV1.index();
    public static final int TIPOGENERACIONLOV1 = AttributesEnum.TipoGeneracionLOV1.index();
    public static final int TIPOSALDOSLOV1 = AttributesEnum.TipoSaldosLOV1.index();
    public static final int NIVELDETALLELOV1 = AttributesEnum.NivelDetalleLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public GestionarAvisoDeCobroVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute IdCliente.
     * @return the IdCliente
     */
    public Long getIdCliente() {
        return (Long) getAttributeInternal(IDCLIENTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IdCliente.
     * @param value value to set the  IdCliente
     */
    public void setIdCliente(Long value) {
        setAttributeInternal(IDCLIENTE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Periodicidad.
     * @return the Periodicidad
     */
    public String getPeriodicidad() {        
        return getAttributeInternal(PERIODICIDAD) == null ? 
                    DEFAULT_VALUE_TODOS :                   
                    (String) getAttributeInternal(PERIODICIDAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Periodicidad.
     * @param value value to set the  Periodicidad
     */
    public void setPeriodicidad(String value) {
        setAttributeInternal(PERIODICIDAD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TipoGeneracion.
     * @return the TipoGeneracion
     */
    public String getTipoGeneracion() {
        return getAttributeInternal(TIPOGENERACION) == null ? 
                    DEFAULT_VALUE_CONSOLIDADA :                   
                    (String) getAttributeInternal(TIPOGENERACION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TipoGeneracion.
     * @param value value to set the  TipoGeneracion
     */
    public void setTipoGeneracion(String value) {
        setAttributeInternal(TIPOGENERACION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TipoSaldos.
     * @return the TipoSaldos
     */
    public String getTipoSaldos() {        
        return getAttributeInternal(TIPOSALDOS) == null ? 
                    DEFAULT_VALUE_TODOS :                   
                    (String) getAttributeInternal(TIPOSALDOS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TipoSaldos.
     * @param value value to set the  TipoSaldos
     */
    public void setTipoSaldos(String value) {
        setAttributeInternal(TIPOSALDOS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FechaInicial.
     * @return the FechaInicial
     */
    public Date getFechaInicial() {
        if (getAttributeInternal(FECHAINICIAL) == null) {
            Date fechaInicio = null;
            java.util.Date date = null;
            Calendar systemDate = Calendar.getInstance();
            StringBuffer fechaInicioBuffer = new StringBuffer();
            DateFormat formatter = new SimpleDateFormat(DATE_FORMAT);
            
            systemDate.add(Calendar.MONTH, 1);
            fechaInicioBuffer.append(String.valueOf(systemDate.get(Calendar.YEAR)));
            fechaInicioBuffer.append(DATE_SEPARATOR);
            fechaInicioBuffer.append(String.valueOf(systemDate.get(Calendar.MONTH) + 1));
            fechaInicioBuffer.append(DATE_SEPARATOR);
            fechaInicioBuffer.append(FIRST_DAY_OF_MONTH);
            try {
                date = formatter.parse(fechaInicioBuffer.toString());
            } catch (ParseException e) {
                date = new java.util.Date();
            }
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());
            fechaInicio = new Date(sqlDate);
            return fechaInicio;
        }
        return (Date) getAttributeInternal(FECHAINICIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FechaInicial.
     * @param value value to set the  FechaInicial
     */
    public void setFechaInicial(Date value) {
        setAttributeInternal(FECHAINICIAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FechaFinal.
     * @return the FechaFinal
     */
    public Date getFechaFinal() {
        if (getAttributeInternal(FECHAFINAL) == null) {
            Date fechaFinal = null;
            java.util.Date date = null;
            Calendar systemDate = Calendar.getInstance();
            StringBuffer fechaFinalBuffer = new StringBuffer();
            DateFormat formatter = new SimpleDateFormat(DATE_FORMAT);

            systemDate.add(Calendar.MONTH, 1);
            fechaFinalBuffer.append(String.valueOf(systemDate.get(Calendar.YEAR)));
            fechaFinalBuffer.append(DATE_SEPARATOR);
            fechaFinalBuffer.append(String.valueOf(systemDate.get(Calendar.MONTH) + 1));
            fechaFinalBuffer.append(DATE_SEPARATOR);
            fechaFinalBuffer.append(String.valueOf(systemDate.getActualMaximum(Calendar.DAY_OF_MONTH)));
            
            try {
                date = formatter.parse(fechaFinalBuffer.toString());
            } catch (ParseException e) {
                date = new java.util.Date();
            }
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());
            fechaFinal = new Date(sqlDate);
            return fechaFinal;
        }
        return (Date) getAttributeInternal(FECHAFINAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FechaFinal.
     * @param value value to set the  FechaFinal
     */
    public void setFechaFinal(Date value) {
        setAttributeInternal(FECHAFINAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SegregarOperacion.
     * @return the SegregarOperacion
     */
    public Boolean getSegregarOperacion() {
        Boolean segregarOperacion = (Boolean) getAttributeInternal(SEGREGAROPERACION);
        return segregarOperacion;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SegregarOperacion.
     * @param value value to set the  SegregarOperacion
     */
    public void setSegregarOperacion(Boolean value) {
        setAttributeInternal(SEGREGAROPERACION, value);
    }


    /**
     * Gets the attribute value for the calculated attribute NivelDetalle.
     * @return the NivelDetalle
     */
    public String getNivelDetalle() {
        return (String) getAttributeInternal(NIVELDETALLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NivelDetalle.
     * @param value value to set the  NivelDetalle
     */
    public void setNivelDetalle(String value) {
        setAttributeInternal(NIVELDETALLE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PeriodicidadLOV1.
     */
    public RowSet getPeriodicidadLOV1() {
        return (RowSet) getAttributeInternal(PERIODICIDADLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TipoGeneracionLOV1.
     */
    public RowSet getTipoGeneracionLOV1() {
        return (RowSet) getAttributeInternal(TIPOGENERACIONLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TipoSaldosLOV1.
     */
    public RowSet getTipoSaldosLOV1() {
        return (RowSet) getAttributeInternal(TIPOSALDOSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> NivelDetalleLOV1.
     */
    public RowSet getNivelDetalleLOV1() {
        return (RowSet) getAttributeInternal(NIVELDETALLELOV1);
    }


}

