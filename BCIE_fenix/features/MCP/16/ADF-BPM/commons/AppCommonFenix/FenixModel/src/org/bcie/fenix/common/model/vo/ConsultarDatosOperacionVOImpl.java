package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 28 17:52:01 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultarDatosOperacionVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public static ADFLogger logger = null;
    
    public ConsultarDatosOperacionVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }


    /**
     * Returns the bind variable value for pIdOperacion.
     * @return bind variable value for pIdOperacion
     */
    public BigDecimal recuperarTasaInteres(Long idOperacion){
        logger.warning("*Inf, Inicia metodo recuperarTasaInteres");
        double TInicio, TFin, tiempo; //Variables para determinar el tiempo de ejecución
        TInicio = System.currentTimeMillis(); //Tomamos la hora en que inicio el algoritmo y la almacenamos en la variable inicio
        
          BigDecimal valorTasaInteres = BigDecimal.ZERO;
          Row fila = null;
          
             setpIdOperacion(idOperacion);
             executeQuery();             
            
             if(getEstimatedRowCount() > 0){
                fila = first();
                fila.getAttribute("ValorTasa");
                logger.warning("*Inf, ValorTasa recuparado: "+fila.getAttribute("ValorTasa"));
                
                valorTasaInteres = (null == fila.getAttribute("ValorTasa"))? BigDecimal.ZERO
                                 : (BigDecimal)fila.getAttribute("ValorTasa");
               
             }else{
                 logger.warning("*Inf, no se encontro el registro de la operacion : "+idOperacion);
             }
            
        
        TFin = System.currentTimeMillis(); //Tomamos la hora en que finalizó el algoritmo y la almacenamos en la variable T
        tiempo = (TFin - TInicio)/1000; //Calculamos los milisegundos de diferencia            
        logger.warning("*Inf, Termina metodo recuperarTasaInteres con una duracion de: "+tiempo+" segundos");
        return valorTasaInteres;
    }


    public Long getpIdOperacion() {
        return (Long) getNamedWhereClauseParam("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        setNamedWhereClauseParam("pIdOperacion", value);
    }
}

