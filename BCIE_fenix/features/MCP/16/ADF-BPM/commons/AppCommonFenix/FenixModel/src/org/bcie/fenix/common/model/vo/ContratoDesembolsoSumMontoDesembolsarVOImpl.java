package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import org.bcie.fenix.common.model.FenixModelConstants;

import org.bcie.fenix.common.model.vo.common.ContratoDesembolsoSumMontoDesembolsarVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 08 11:52:27 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContratoDesembolsoSumMontoDesembolsarVOImpl extends ViewObjectImpl implements ContratoDesembolsoSumMontoDesembolsarVO {
    
    private static ADFLogger logger = ADFLogger.createADFLogger(ContratoDesembolsoSumMontoDesembolsarVOImpl.class);
    
    /**
     * This is the default constructor (do not remove).
     */
    public ContratoDesembolsoSumMontoDesembolsarVOImpl() {
    }
    
    
    public BigDecimal calcularMontoDesembolsado(Long idSolicitud){
        logger.warning("Inf, inicia metodo calcularMontoDesembolsado");
        FenixModelConstants fenixConstants = new FenixModelConstants();
         
         BigDecimal montoDesembolsado = BigDecimal.ZERO;
         Integer constantTcaTipoEstado = fenixConstants.ESTADO_SOLICITUD_DESEMBOLSADO;
            
            setpTcaEstado(constantTcaTipoEstado);
            setpIdSolicitud(idSolicitud);        
             executeQuery();
             
             if(getEstimatedRowCount() > 0){
                 setCurrentRow(first());
                 
                   BigDecimal montoCalculado = (BigDecimal)getCurrentRow().getAttribute("MontoDesembolsado");
                 
                   if(montoCalculado != null ){
                        montoDesembolsado.add(montoCalculado);
                   }else{
                        logger.warning("Inf, El  Monto Desembolsado de la operacion es null");
                       }                 
             }else{                 
                 logger.warning("Inf, el query de suma montos de contratos desembolsados no devolvio ninguna row");
                 }
            logger.warning("Inf, termina metodo calcularMontoDesembolsado");
        return montoDesembolsado;
        }
    


    /**
     * Returns the bind variable value for pTcaEstado.
     * @return bind variable value for pTcaEstado
     */
    public Integer getpTcaEstado() {
        return (Integer) getNamedWhereClauseParam("pTcaEstado");
    }

    /**
     * Sets <code>value</code> for bind variable pTcaEstado.
     * @param value value to bind as pTcaEstado
     */
    public void setpTcaEstado(Integer value) {
        setNamedWhereClauseParam("pTcaEstado", value);
    }
    
    /**
     * Returns the variable value for pIdSolicitud.
     * @return variable value for pIdSolicitud
     */
    public Long getpIdSolicitud() {
        return (Long) ensureVariableManager().getVariableValue("pIdSolicitud");
    }

    /**
     * Sets <code>value</code> for variable pIdSolicitud.
     * @param value value to bind as pIdSolicitud
     */
    public void setpIdSolicitud(Long value) {
        ensureVariableManager().setVariableValue("pIdSolicitud", value);
    }

    /**
     * Returns the variable value for tcaTipoEstado.
     * @return variable value for tcaTipoEstado
     */
    public Integer gettcaTipoEstado() {
        return (Integer) ensureVariableManager().getVariableValue("tcaTipoEstado");
    }

    /**
     * Sets <code>value</code> for variable tcaTipoEstado.
     * @param value value to bind as tcaTipoEstado
     */
    public void settcaTipoEstado(Integer value) {
        ensureVariableManager().setVariableValue("tcaTipoEstado", value);
    }
}

