package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.FenixModelConstants;
import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.vo.common.MonedaContratoVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 04 12:17:51 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MonedaContratoVOImpl extends ViewObjectImpl implements MonedaContratoVO {
    private static ADFLogger logger = null;
    /**
     * This is the default constructor (do not remove).
     */
    public MonedaContratoVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for varSolicitud.
     * @return bind variable value for varSolicitud
     */
    public Long getvarSolicitud() {
        return (Long) getNamedWhereClauseParam("varSolicitud");
    }

    /**
     * Sets <code>value</code> for bind variable varSolicitud.
     * @param value value to bind as varSolicitud
     */
    public void setvarSolicitud(Long value) {
        setNamedWhereClauseParam("varSolicitud", value);
    }
    
    public String cargaMoneda(Long idSolicitud, Long idOperacion){
        logger.warning("Inicia metodo cargaMoneda");
        logger.warning("idSolicitud: "+ idSolicitud);
        logger.warning("idOperacion: "+ idOperacion);
        String resultado=null;
        Integer  claveTipo=null;
        Integer estadoDesestimado=FenixModelConstants.ESTADO_CONTRATO_DESEMBOLSO_DESESTIMADO;
        Row row=null;
        if(null!=idSolicitud && null!=idOperacion){
            setvarSolicitud(idSolicitud);
            setvarOperacion(idOperacion);
            setvarEstado(estadoDesestimado);
            this.executeQuery();
            this.setRangeSize(-1);
            logger.warning("Registros encontrados : "+ this.getEstimatedRowCount());
            if(this.getEstimatedRowCount()>0){
                    row=this.getRowAtRangeIndex(0);
                    if(null!=row){
                        if(null!=row.getAttribute("DescripcionCorta")){
                                resultado=(String)row.getAttribute("DescripcionCorta");
                            }
                        }
                    }
                }
            
        if(null==resultado){
                FenixAMImpl fenixAMImpl = null;
                fenixAMImpl = (FenixAMImpl) this.getRootApplicationModule();

                try{
                    claveTipo=fenixAMImpl.getTccTerminoVO().obtenerTipoMonedaMontoFormalizado(idOperacion);
                }catch(Exception ex){
                    logger.warning("Error al obtener el dato moneda: " , ex);
                    }
                if (claveTipo != null) {
                        try{
                        resultado =fenixAMImpl.getTcaTipoMonedaVO().obtenerDescripcionMoneda(claveTipo);
                        }catch(Exception ex){
                            logger.warning("Error al obtener la descripcion moneda: " , ex);
                            }
                    }
                else{
                        resultado=FenixModelConstants.MONEDA_DESCRIPCION_USD;
                    }
            
            }
        logger.warning("Termina metodo cargaMoneda");
        logger.warning("resultado moneda: "+ resultado);
        return resultado;
        }
    
    public Integer monedaId(Long idSolicitud, Long idOperacion){
        logger.warning("Inicia metodo cargaMoneda");
        logger.warning("idSolicitud: "+ idSolicitud);
        logger.warning("idOperacion: "+ idOperacion);
        Integer resultado=null;
        Integer  claveTipo=null;
        Integer estadoDesestimado=FenixModelConstants.ESTADO_CONTRATO_DESEMBOLSO_DESESTIMADO;
        Row row=null;
        if(null!=idSolicitud && null!=idOperacion){
            setvarSolicitud(idSolicitud);
            setvarOperacion(idOperacion);
            setvarEstado(estadoDesestimado);
            this.executeQuery();
            this.setRangeSize(-1);
            logger.warning("Registros encontrados : "+ this.getEstimatedRowCount());
            if(this.getEstimatedRowCount()>0){
                    row=this.getRowAtRangeIndex(0);
                    if(null!=row){
                        if(null!=row.getAttribute("IdTcaTipoMoneda")){
                                resultado=(Integer)row.getAttribute("IdTcaTipoMoneda");
                            }
                        }
                    }
                }
            
        if(null==resultado){
                FenixAMImpl fenixAMImpl = null;
                fenixAMImpl = (FenixAMImpl) this.getRootApplicationModule();

                try{
                    claveTipo=fenixAMImpl.getTccTerminoVO().obtenerTipoMonedaMontoFormalizado(idOperacion);
                }catch(Exception ex){
                    logger.warning("Error al obtener el dato moneda: " , ex);
                    }
                if (claveTipo != null) {

                        resultado =claveTipo;
                    }
                else{
                        resultado=FenixModelConstants.MONEDA_USD;
                    }
            
            }
        logger.warning("Termina metodo cargaMoneda");
        logger.warning("resultado moneda: "+ resultado);
        return resultado;
        }

    /**
     * Returns the bind variable value for varOperacion.
     * @return bind variable value for varOperacion
     */
    public Long getvarOperacion() {
        return (Long) getNamedWhereClauseParam("varOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable varOperacion.
     * @param value value to bind as varOperacion
     */
    public void setvarOperacion(Long value) {
        setNamedWhereClauseParam("varOperacion", value);
    }

    /**
     * Returns the bind variable value for varEstado.
     * @return bind variable value for varEstado
     */
    public Integer getvarEstado() {
        return (Integer) getNamedWhereClauseParam("varEstado");
    }

    /**
     * Sets <code>value</code> for bind variable varEstado.
     * @param value value to bind as varEstado
     */
    public void setvarEstado(Integer value) {
        setNamedWhereClauseParam("varEstado", value);
    }
}

