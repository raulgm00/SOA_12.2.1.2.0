package org.bcie.fenix.common.model.vo;

import java.util.ArrayList;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;

import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;

import org.apache.poi.ss.formula.functions.Rows;

import org.bcie.fenix.common.model.vo.common.ConsultarDocumentoClienteNumeroSerieVO;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 14 16:19:22 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultarDocumentoClienteNumeroSerieVOImpl extends ViewObjectImpl implements ConsultarDocumentoClienteNumeroSerieVO {
    /**
     * This is the default constructor (do not remove).
     */
    private static ADFLogger logger = null;
    public ConsultarDocumentoClienteNumeroSerieVOImpl() {
        if(null == logger){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public List<Row> obtenerDocumentosAEliminarPorNumeroSerie(Long idCliente, Long numeroSerie){
        logger.warning("Entra en obtenerDocumentosAEliminarPorNumeroSerie.");
        logger.warning("idCliente : " + idCliente);
        logger.warning("numeroSerie : " + numeroSerie);
        List<Row> rows = new ArrayList<>();
        try{
            this.setpIdCliente(idCliente);
            this.setpNumeroSerieDocumento(numeroSerie);
            this.executeQuery();
            logger.warning("Numero de registros encontrados : " + this.getEstimatedRowCount());
            if(this.getEstimatedRowCount() > 0){
                RowSetIterator iterator = this.createRowSetIterator(null);
                iterator.reset();
                while(iterator.hasNext()){
                    ConsultarDocumentoClienteNumeroSerieVORowImpl row = (ConsultarDocumentoClienteNumeroSerieVORowImpl)iterator.next();
                    rows.add(row);
                }
                iterator.closeRowSetIterator();
            }else{
                logger.warning("No se recuperaron documentos para eliminar.");
            }
        }catch(Exception e){
            logger.warning("Error en obtenerDocumentosAEliminarPorNumeroSerie.", e);
        }
        return rows;
    }
    /**
     * Returns the bind variable value for pIdCliente.
     * @return bind variable value for pIdCliente
     */
    public Long getpIdCliente() {
        return (Long) getNamedWhereClauseParam("pIdCliente");
    }

    /**
     * Sets <code>value</code> for bind variable pIdCliente.
     * @param value value to bind as pIdCliente
     */
    public void setpIdCliente(Long value) {
        setNamedWhereClauseParam("pIdCliente", value);
    }

    /**
     * Returns the bind variable value for pNumeroSerieDocumento.
     * @return bind variable value for pNumeroSerieDocumento
     */
    public Long getpNumeroSerieDocumento() {
        return (Long) getNamedWhereClauseParam("pNumeroSerieDocumento");
    }

    /**
     * Sets <code>value</code> for bind variable pNumeroSerieDocumento.
     * @param value value to bind as pNumeroSerieDocumento
     */
    public void setpNumeroSerieDocumento(Long value) {
        setNamedWhereClauseParam("pNumeroSerieDocumento", value);
    }
}

