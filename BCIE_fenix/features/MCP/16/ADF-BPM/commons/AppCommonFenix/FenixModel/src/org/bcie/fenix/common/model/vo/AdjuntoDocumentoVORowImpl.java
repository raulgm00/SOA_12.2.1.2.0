package org.bcie.fenix.common.model.vo;import java.sql.Timestamp;import oracle.jbo.domain.BlobDomain;import oracle.jbo.server.ViewRowImpl;import org.bcie.fenix.common.model.eo.AdjuntoDocumentoEOImpl;// ---------------------------------------------------------------------// ---    File generated by Oracle ADF Business Components Design Time.// ---    Mon Oct 24 16:40:10 CDT 2016// ---    Custom code may be added to this class.// ---    Warning: Do not modify method signatures of generated methods.// ---------------------------------------------------------------------public class AdjuntoDocumentoVORowImpl extends ViewRowImpl {    public static final int ENTITY_ADJUNTODOCUMENTOEO = 0;    /**     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.     */    public enum AttributesEnum {        Content,        FechaRegistro,        Filename,        Id,        IdDocumentoCalendario,        MimeType;        private static AttributesEnum[] vals = null;        private static final int firstIndex = 0;        public int index() {            return AttributesEnum.firstIndex() + ordinal();        }        public static final int firstIndex() {            return firstIndex;        }        public static int count() {            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;        }        public static final AttributesEnum[] staticValues() {            if (vals == null) {                vals = AttributesEnum.values();            }            return vals;        }    }    public static final int CONTENT = AttributesEnum.Content.index();    public static final int FECHAREGISTRO = AttributesEnum.FechaRegistro.index();    public static final int FILENAME = AttributesEnum.Filename.index();    public static final int ID = AttributesEnum.Id.index();    public static final int IDDOCUMENTOCALENDARIO = AttributesEnum.IdDocumentoCalendario.index();    public static final int MIMETYPE = AttributesEnum.MimeType.index();    /**     * This is the default constructor (do not remove).     */    public AdjuntoDocumentoVORowImpl() {    }    /**     * Gets AdjuntoDocumentoEO entity object.     * @return the AdjuntoDocumentoEO     */    public AdjuntoDocumentoEOImpl getAdjuntoDocumentoEO() {        return (AdjuntoDocumentoEOImpl) getEntity(ENTITY_ADJUNTODOCUMENTOEO);    }    /**     * Gets the attribute value for CONTENT using the alias name Content.     * @return the CONTENT     */    public BlobDomain getContent() {        return (BlobDomain) getAttributeInternal(CONTENT);    }    /**     * Sets <code>value</code> as attribute value for CONTENT using the alias name Content.     * @param value value to set the CONTENT     */    public void setContent(BlobDomain value) {        setAttributeInternal(CONTENT, value);    }    /**     * Gets the attribute value for FECHA_REGISTRO using the alias name FechaRegistro.     * @return the FECHA_REGISTRO     */    public Timestamp getFechaRegistro() {        return (Timestamp) getAttributeInternal(FECHAREGISTRO);    }    /**     * Sets <code>value</code> as attribute value for FECHA_REGISTRO using the alias name FechaRegistro.     * @param value value to set the FECHA_REGISTRO     */    public void setFechaRegistro(Timestamp value) {        setAttributeInternal(FECHAREGISTRO, value);    }    /**     * Gets the attribute value for FILENAME using the alias name Filename.     * @return the FILENAME     */    public String getFilename() {        return (String) getAttributeInternal(FILENAME);    }    /**     * Sets <code>value</code> as attribute value for FILENAME using the alias name Filename.     * @param value value to set the FILENAME     */    public void setFilename(String value) {        setAttributeInternal(FILENAME, value);    }    /**     * Gets the attribute value for ID using the alias name Id.     * @return the ID     */    public Long getId() {        return (Long) getAttributeInternal(ID);    }    /**     * Sets <code>value</code> as attribute value for ID using the alias name Id.     * @param value value to set the ID     */    public void setId(Long value) {        setAttributeInternal(ID, value);    }    /**     * Gets the attribute value for ID_DOCUMENTO_CALENDARIO using the alias name IdDocumentoCalendario.     * @return the ID_DOCUMENTO_CALENDARIO     */    public Long getIdDocumentoCalendario() {        return (Long) getAttributeInternal(IDDOCUMENTOCALENDARIO);    }    /**     * Sets <code>value</code> as attribute value for ID_DOCUMENTO_CALENDARIO using the alias name IdDocumentoCalendario.     * @param value value to set the ID_DOCUMENTO_CALENDARIO     */    public void setIdDocumentoCalendario(Long value) {        setAttributeInternal(IDDOCUMENTOCALENDARIO, value);    }    /**     * Gets the attribute value for MIME_TYPE using the alias name MimeType.     * @return the MIME_TYPE     */    public String getMimeType() {        return (String) getAttributeInternal(MIMETYPE);    }    /**     * Sets <code>value</code> as attribute value for MIME_TYPE using the alias name MimeType.     * @param value value to set the MIME_TYPE     */    public void setMimeType(String value) {        setAttributeInternal(MIMETYPE, value);    }}