package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ImplementacionAdjudicatarioVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 29 19:26:04 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ImplementacionAdjudicatarioVOImpl extends ViewObjectImpl implements ImplementacionAdjudicatarioVO {
    /**
     * This is the default constructor (do not remove).
     */
    
    private static ADFLogger logger = null;
    public ImplementacionAdjudicatarioVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void crearRowAdjudicatario(Long id, String nombreParticipante, Integer idTcaPaisConcursante, Integer IdTcaTipoMoneda){
        logger.log(ADFLogger.WARNING, "INTO crearRowAdjudicatario.");
        Row rowAdjudicatario = this.createRow();
        try{
        rowAdjudicatario.setAttribute("Id", id);
        rowAdjudicatario.setAttribute("NombreParticipante", nombreParticipante);
        rowAdjudicatario.setAttribute("IdCatPais", idTcaPaisConcursante);
        rowAdjudicatario.setAttribute("IdTcaTipoMoneda", IdTcaTipoMoneda);
        rowAdjudicatario.setAttribute("HabilitarEdicionMonto", Boolean.TRUE);
        //this.insertRow(rowAdjudicatario);
        this.insertRowAtRangeIndex(0, rowAdjudicatario);
        this.setCurrentRow(rowAdjudicatario);
        }catch(Exception e){
            logger.warning("Error al crear el row de adjudicatario." + e.getClass() + "." + e);
        }
    }
    
    public Boolean validarImplementacionAdjudicatario(){
        logger.log(ADFLogger.TRACE, "INTO validarImplementacionAdjudicatario.");
        
        String nombreParticipante = null;
        Integer idCatPais = null;
        BigDecimal montoAdjudicado = null;
        Integer idTcaTipoMoneda = null;
        
        Boolean validarFormulario = Boolean.FALSE;
        
        ImplementacionAdjudicatarioVORowImpl formularioImplementacionAdjudicatatrioVORowImpl = (ImplementacionAdjudicatarioVORowImpl)this.getCurrentRow();
        
        try{
            nombreParticipante = formularioImplementacionAdjudicatatrioVORowImpl.getNombreParticipante();
            idCatPais = formularioImplementacionAdjudicatatrioVORowImpl.getIdCatPais();
            montoAdjudicado = formularioImplementacionAdjudicatatrioVORowImpl.getMontoAdjudicado();
            idTcaTipoMoneda = formularioImplementacionAdjudicatatrioVORowImpl.getIdTcaTipoMoneda();
            
            logger.warning("valor nombreParticipante obtenido del formulario: " + nombreParticipante);
            logger.warning("valor idCatPais obtenido del formulario: " + idCatPais);
            logger.warning("valor montoAdjudicado obtenido del formulario: " + montoAdjudicado);
            logger.warning("valor idTcaTipoMoneda obtenido del formulario: " + idTcaTipoMoneda);
            
            if(null != nombreParticipante && null != idCatPais && null != montoAdjudicado && null != idTcaTipoMoneda){
                validarFormulario = Boolean.TRUE;
            }
            else{
                validarFormulario = Boolean.FALSE;
            }
        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Excepcion en validarImplementacionAdjudicatario." + e.getClass() + e.getMessage()); 
        }
        
        return (validarFormulario);
    }
    
    public void eliminarRowImplementacionAdjudicatario(){
        logger.log(ADFLogger.TRACE, "INTO eliminarRowImplementacionAdjudicatario.");
        Row row = this.getCurrentRow();
        try{
            row.remove();
        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Error en eliminarRowImplementacionAdjudicatario." + e.getClass() + e.getMessage());
        }
    }
    
    public void crearRowImplementacionAdjudicatario(Long id, String nombreAdjudicatario, Integer idCatPais,
                                                    BigDecimal montoAdjudicado, Integer idTcaTipoMoneda){
        logger.log(ADFLogger.TRACE, "INTO crearRowImplementacionAdjudicatario.");
        //this.clearCache();
        Row row = this.createRow();
        try{
            row.setAttribute(ImplementacionAdjudicatarioVORowImpl.ID, id);
            row.setAttribute(ImplementacionAdjudicatarioVORowImpl.NOMBREPARTICIPANTE, nombreAdjudicatario);
            row.setAttribute(ImplementacionAdjudicatarioVORowImpl.IDCATPAIS, idCatPais);
            row.setAttribute(ImplementacionAdjudicatarioVORowImpl.MONTOADJUDICADO, montoAdjudicado);
            row.setAttribute(ImplementacionAdjudicatarioVORowImpl.IDTCATIPOMONEDA, idTcaTipoMoneda);
            
            this.insertRow(row);
            //this.insertRowAtRangeIndex(0, row);
            //this.setCurrentRow(row); // Se asigna row como current (Fila actual)
        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Error en crearRowImplementacionParticipante." + e.getClass() + e.getMessage());
        }
    }
}

