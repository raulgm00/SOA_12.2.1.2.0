package org.bcie.fenix.common.model.vo;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ConsultaSolicitudDesembolsoTreeTableVO;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 02 13:23:21 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultaSolicitudDesembolsoTreeTableVOImpl extends ViewObjectImpl implements ConsultaSolicitudDesembolsoTreeTableVO {
    /**
     * This is the default constructor (do not remove).
     */
    
    private static ADFLogger logger = null;
    
    public static final String BUSCAR_VIEW_CRITERIA = "ConsultaSolicitudDesembolsoTreeTableVOCriteria";
    
    public ConsultaSolicitudDesembolsoTreeTableVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    @Override
    protected void create() {
        // TODO Implement this method
        super.create();
        setNestedSelectForFullSql(true);
    }

    public void executeViewCriteriaConsultaSolicitud(Map params) {
        /*
        this.applyViewCriteria(this.getViewCriteria("ConsultaSolicitudDesembolsoTreeTableVOCriteria"));
        
        if (params != null && !params.isEmpty()) {
            Iterator iterator = params.entrySet().iterator();
            while(iterator.hasNext()) {
                @SuppressWarnings("unchecked")
                Map.Entry<String, Object> param = (Map.Entry<String, Object>) iterator.next();
                setNamedWhereClauseParam(param.getKey(), param.getValue());
            }
        }
        this.executeQuery();
        */
        
        logger.warning("***Inicia metodo executeViewCriteriaConsultaSolicitud En ConsultaSolicitudDesembolsoTreeTableVO***");
        create();
        ViewCriteria criteria = null;
        
        try{
            if(params.get("pCliente") != null){
                this.setpCliente(String.valueOf(params.get("pCliente")));
                logger.warning("**pCliente->"+getpCliente());
            }
            
            if(params.get("pBhqCliente") != null){
                this.setpBhqCliente(String.valueOf(params.get("pBhqCliente")));
                logger.warning("**pBhqCliente->"+getpBhqCliente());
            }
            
            if(params.get("pNombreOperacion") != null){
                this.setpNombreOperacion(String.valueOf(params.get("pNombreOperacion")));
                logger.warning("**pNombreOperacion->"+getpNombreOperacion());
            }
            
            if(params.get("pStrIdOperacion") != null){
                this.setpStrIdOperacion(String.valueOf(params.get("pStrIdOperacion")));
                logger.warning("**pStrIdOperacion->"+getpStrIdOperacion());
            }
            
            if(params.get("pIdSolicitud") != null){
                this.setpIdSolicitud(String.valueOf(params.get("pIdSolicitud")));
                logger.warning("**pIdSolicitud->"+getpIdSolicitud());
            }
            
            if(params.get("pNumeroLineaCredito") != null){
                this.setpNumeroLineaCredito(String.valueOf(params.get("pNumeroLineaCredito")));
                logger.warning("**pNumeroLineaCredito->"+getpNumeroLineaCredito());
            }
            
            if(params.get("pIdDesembolso") != null){
                this.setpIdDesembolso(String.valueOf(params.get("pIdDesembolso")));
                logger.warning("**pIdDesembolso->"+getpIdDesembolso());
            }
            
            if(params.get("pPais") != null){
                this.setpPais(String.valueOf(params.get("pPais")));
                logger.warning("**pPais->"+getpPais());
            }
            
            if(params.get("pResponsableOperacion") != null){
                this.setpResponsableOperacion(String.valueOf(params.get("pResponsableOperacion")));
                logger.warning("**pResponsableOperacion->"+getpResponsableOperacion());
            }
            
            if(params.get("pSectorInstitucional") != null){
                this.setpSectorInstitucional(String.valueOf(params.get("pSectorInstitucional")));
                logger.warning("**pSectorInstitucional->"+getpSectorInstitucional());
            }
            
            if(params.get("pTipoProducto") != null){
                this.setpTipoProducto(String.valueOf(params.get("pTipoProducto")));
                logger.warning("**pTipoProducto->"+getpTipoProducto());
            }
            
            if(params.get("pEstado") != null){
                this.setpEstado(String.valueOf(params.get("pEstado")));
                logger.warning("**pEstado->"+getpEstado());
            }
            
            logger.warning("******* APLICANDO CRITERIA PARA BUSQUEDA DE DOCUMENTOS***********");
            criteria = getViewCriteria(BUSCAR_VIEW_CRITERIA);                       
            applyViewCriteria(criteria);
            logger.warning("Ejecutando query con criteria: " + this.getQuery().toString());
            executeQuery();                    
                
            logger.warning("***Filas obtenidas: " + getEstimatedRowCount());  
           
        }catch(Exception e){
            logger.warning("***Error al ejecutar el criterias x( ", e);
        }finally{
            logger.warning("*** -Removiendo criterias aplicadas anteriormente- ***");
            getViewCriteriaManager().removeApplyViewCriteriaName(BUSCAR_VIEW_CRITERIA);
            this.setpCliente(null);
            //logger.warning("**pCliente->"+getpCliente());
            this.setpBhqCliente(null);
            //logger.warning("**pBhqCliente->"+getpBhqCliente());
            this.setpNombreOperacion(null);
            //logger.warning("**pNombreOperacion->"+getpNombreOperacion());
            this.setpStrIdOperacion(null);
            //logger.warning("**pStrIdOperacion->"+getpStrIdOperacion());
            this.setpIdSolicitud(null);
            //logger.warning("**pIdSolicitud->"+getpIdSolicitud());
            this.setpNumeroLineaCredito(null);
            //logger.warning("**pNumeroLineaCredito->"+getpNumeroLineaCredito());
            this.setpIdDesembolso(null);
            //logger.warning("**pIdDesembolso->"+getpIdDesembolso());
            this.setpPais(null);
            //logger.warning("**pPais->"+getpPais());
            this.setpResponsableOperacion(null);
            //logger.warning("**pResponsableOperacion->"+getpResponsableOperacion());
            this.setpSectorInstitucional(null);
            //logger.warning("**pSectorInstitucional->"+getpSectorInstitucional());
            this.setpTipoProducto(null);
            //logger.warning("**pTipoProducto->"+getpTipoProducto());
            this.setpEstado(null);
            //logger.warning("**pEstado->"+getpEstado());
        }
        logger.warning("***Finaliza metodo executeViewCriteriaConsultaSolicitud En ConsultaSolicitudDesembolsoTreeTableVO***");
        
    }
    
    public void prueba() {
        Map<String, Object> paramsQuery = new HashMap<String, Object>();
        paramsQuery.put("pCliente", null);
        paramsQuery.put("pBhqCliente", null);
        paramsQuery.put("pNombreOperacion", null);
        paramsQuery.put("pIdOperacion", null);
        paramsQuery.put("pIdSolicitud", null);
        paramsQuery.put("pNumeroLineaCredito", null);
        paramsQuery.put("pIdDesembolso", null);
        paramsQuery.put("pPais", null);
        paramsQuery.put("pResponsableOperacion", null);
        paramsQuery.put("pSectorInstitucional", null);
        paramsQuery.put("pTipoProducto", null);
        paramsQuery.put("pEstado", null);
        paramsQuery.put("pFechaEfectivaDel", null);
        paramsQuery.put("pFechaEfectivaAl", null);
        
        java.util.Calendar calendar1 = new java.util.GregorianCalendar();
        calendar1.set(java.util.Calendar.YEAR, 2016);
        calendar1.set(java.util.Calendar.MONTH, 7-1);
        calendar1.set(java.util.Calendar.DAY_OF_MONTH, 26);
        paramsQuery.put("pFechaSolicitudDel", new oracle.jbo.domain.Date(new java.sql.Date(calendar1.getTime().getTime())));
        
        java.util.Calendar calendar2 = new java.util.GregorianCalendar();
        calendar2.set(java.util.Calendar.YEAR, 2016);
        calendar2.set(java.util.Calendar.MONTH, 9-1);
        calendar2.set(java.util.Calendar.DAY_OF_MONTH, 19);
        paramsQuery.put("pFechaSolicitudAl", new oracle.jbo.domain.Date(new java.sql.Date(calendar2.getTime().getTime())));

        this.executeViewCriteriaConsultaSolicitud(paramsQuery);
        
        oracle.jbo.RowSetIterator rsi = this.createRowSetIterator(null);
        rsi.reset();
        
        while (rsi.hasNext()) {
            oracle.jbo.Row row = rsi.next();
            System.out.println("*************************");
            System.out.print("| " + row.getAttribute("Id"));
            System.out.print(" | " + row.getAttribute("BhqCliente"));
            System.out.print(" | " + row.getAttribute("Cliente"));
            System.out.print(" | " + row.getAttribute("Operacion"));
            System.out.print(" | " + row.getAttribute("Pais"));
            System.out.print(" | " + row.getAttribute("ResponsableOperacion"));
            System.out.print(" | " + row.getAttribute("Monto"));
            System.out.print(" | " + row.getAttribute("Estado"));
            System.out.print(" | " + row.getAttribute("Tipo"));
            System.out.print(" | " + row.getAttribute("IdOperacion"));
            System.out.print(" | " + row.getAttribute("SectorInstitucional"));
            System.out.println(" |");
        }
        rsi.closeRowSetIterator();
    }

    /**
     * Returns the variable value for pCliente.
     * @return variable value for pCliente
     */
    public String getpCliente() {
        return (String) ensureVariableManager().getVariableValue("pCliente");
    }

    /**
     * Sets <code>value</code> for variable pCliente.
     * @param value value to bind as pCliente
     */
    public void setpCliente(String value) {
        ensureVariableManager().setVariableValue("pCliente", value);
    }

    /**
     * Returns the variable value for pBhqCliente.
     * @return variable value for pBhqCliente
     */
    public String getpBhqCliente() {
        return (String) ensureVariableManager().getVariableValue("pBhqCliente");
    }

    /**
     * Sets <code>value</code> for variable pBhqCliente.
     * @param value value to bind as pBhqCliente
     */
    public void setpBhqCliente(String value) {
        ensureVariableManager().setVariableValue("pBhqCliente", value);
    }

    /**
     * Returns the variable value for pNombreOperacion.
     * @return variable value for pNombreOperacion
     */
    public String getpNombreOperacion() {
        return (String) ensureVariableManager().getVariableValue("pNombreOperacion");
    }

    /**
     * Sets <code>value</code> for variable pNombreOperacion.
     * @param value value to bind as pNombreOperacion
     */
    public void setpNombreOperacion(String value) {
        ensureVariableManager().setVariableValue("pNombreOperacion", value);
    }

    /**
     * Returns the variable value for pIdOperacion.
     * @return variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) ensureVariableManager().getVariableValue("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        ensureVariableManager().setVariableValue("pIdOperacion", value);
    }

    /**
     * Returns the variable value for pNumeroLineaCredito.
     * @return variable value for pNumeroLineaCredito
     */
    public String getpNumeroLineaCredito() {
        return (String) ensureVariableManager().getVariableValue("pNumeroLineaCredito");
    }

    /**
     * Sets <code>value</code> for variable pNumeroLineaCredito.
     * @param value value to bind as pNumeroLineaCredito
     */
    public void setpNumeroLineaCredito(String value) {
        ensureVariableManager().setVariableValue("pNumeroLineaCredito", value);
    }

    /**
     * Returns the variable value for pIdDesembolso.
     * @return variable value for pIdDesembolso
     */
    public String getpIdDesembolso() {
        return (String) ensureVariableManager().getVariableValue("pIdDesembolso");
    }

    /**
     * Sets <code>value</code> for variable pIdDesembolso.
     * @param value value to bind as pIdDesembolso
     */
    public void setpIdDesembolso(String value) {
        ensureVariableManager().setVariableValue("pIdDesembolso", value);
    }

    /**
     * Returns the variable value for pPais.
     * @return variable value for pPais
     */
    public String getpPais() {
        return (String) ensureVariableManager().getVariableValue("pPais");
    }

    /**
     * Sets <code>value</code> for variable pPais.
     * @param value value to bind as pPais
     */
    public void setpPais(String value) {
        ensureVariableManager().setVariableValue("pPais", value);
    }

    /**
     * Returns the variable value for pResponsableOperacion.
     * @return variable value for pResponsableOperacion
     */
    public String getpResponsableOperacion() {
        return (String) ensureVariableManager().getVariableValue("pResponsableOperacion");
    }

    /**
     * Sets <code>value</code> for variable pResponsableOperacion.
     * @param value value to bind as pResponsableOperacion
     */
    public void setpResponsableOperacion(String value) {
        ensureVariableManager().setVariableValue("pResponsableOperacion", value);
    }

    /**
     * Returns the variable value for pSectorInstitucional.
     * @return variable value for pSectorInstitucional
     */
    public String getpSectorInstitucional() {
        return (String) ensureVariableManager().getVariableValue("pSectorInstitucional");
    }

    /**
     * Sets <code>value</code> for variable pSectorInstitucional.
     * @param value value to bind as pSectorInstitucional
     */
    public void setpSectorInstitucional(String value) {
        ensureVariableManager().setVariableValue("pSectorInstitucional", value);
    }

    /**
     * Returns the variable value for pTipoProducto.
     * @return variable value for pTipoProducto
     */
    public String getpTipoProducto() {
        return (String) ensureVariableManager().getVariableValue("pTipoProducto");
    }

    /**
     * Sets <code>value</code> for variable pTipoProducto.
     * @param value value to bind as pTipoProducto
     */
    public void setpTipoProducto(String value) {
        ensureVariableManager().setVariableValue("pTipoProducto", value);
    }

    /**
     * Returns the variable value for pEstado.
     * @return variable value for pEstado
     */
    public String getpEstado() {
        return (String) ensureVariableManager().getVariableValue("pEstado");
    }

    /**
     * Sets <code>value</code> for variable pEstado.
     * @param value value to bind as pEstado
     */
    public void setpEstado(String value) {
        ensureVariableManager().setVariableValue("pEstado", value);
    }

    /**
     * Returns the variable value for pIdSolicitud.
     * @return variable value for pIdSolicitud
     */
    public String getpIdSolicitud() {
        return (String) ensureVariableManager().getVariableValue("pIdSolicitud");
    }

    /**
     * Sets <code>value</code> for variable pIdSolicitud.
     * @param value value to bind as pIdSolicitud
     */
    public void setpIdSolicitud(String value) {
        ensureVariableManager().setVariableValue("pIdSolicitud", value);
    }

    /**
     * Returns the variable value for pFechaSolicitudDel.
     * @return variable value for pFechaSolicitudDel
     */
    public Date getpFechaSolicitudDel() {
        return (Date) ensureVariableManager().getVariableValue("pFechaSolicitudDel");
    }

    /**
     * Sets <code>value</code> for variable pFechaSolicitudDel.
     * @param value value to bind as pFechaSolicitudDel
     */
    public void setpFechaSolicitudDel(Date value) {
        ensureVariableManager().setVariableValue("pFechaSolicitudDel", value);
    }

    /**
     * Returns the variable value for pFechaSolicitudAl.
     * @return variable value for pFechaSolicitudAl
     */
    public Date getpFechaSolicitudAl() {
        return (Date) ensureVariableManager().getVariableValue("pFechaSolicitudAl");
    }

    /**
     * Sets <code>value</code> for variable pFechaSolicitudAl.
     * @param value value to bind as pFechaSolicitudAl
     */
    public void setpFechaSolicitudAl(Date value) {
        ensureVariableManager().setVariableValue("pFechaSolicitudAl", value);
    }

    /**
     * Returns the variable value for pFechaEfectivaDel.
     * @return variable value for pFechaEfectivaDel
     */
    public Date getpFechaEfectivaDel() {
        return (Date) ensureVariableManager().getVariableValue("pFechaEfectivaDel");
    }

    /**
     * Sets <code>value</code> for variable pFechaEfectivaDel.
     * @param value value to bind as pFechaEfectivaDel
     */
    public void setpFechaEfectivaDel(Date value) {
        ensureVariableManager().setVariableValue("pFechaEfectivaDel", value);
    }

    /**
     * Returns the variable value for pFechaEfectivaAl.
     * @return variable value for pFechaEfectivaAl
     */
    public Date getpFechaEfectivaAl() {
        return (Date) ensureVariableManager().getVariableValue("pFechaEfectivaAl");
    }

    /**
     * Sets <code>value</code> for variable pFechaEfectivaAl.
     * @param value value to bind as pFechaEfectivaAl
     */
    public void setpFechaEfectivaAl(Date value) {
        ensureVariableManager().setVariableValue("pFechaEfectivaAl", value);
    }

    /**
     * Returns the variable value for pStrIdOperacion.
     * @return variable value for pStrIdOperacion
     */
    public String getpStrIdOperacion() {
        return (String) ensureVariableManager().getVariableValue("pStrIdOperacion");
    }

    /**
     * Sets <code>value</code> for variable pStrIdOperacion.
     * @param value value to bind as pStrIdOperacion
     */
    public void setpStrIdOperacion(String value) {
        ensureVariableManager().setVariableValue("pStrIdOperacion", value);
    }
    
    public void limpiarTabla(){
        //  this.clearCache();
        logger.warning("Limpiar tabla");
        this.executeEmptyRowSet();
        }
}

