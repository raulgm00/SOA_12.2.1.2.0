<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Dec 01 16:27:00 CST 2016
  Author:  perla-osorio
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="EnvioGasto"
               targetNamespace="http://xmlns.oracle.com/DominioDesembolso/EnvioGasto/EnvioGasto"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/DominioDesembolso/EnvioGasto/EnvioGasto"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="http://www.bcie.org/EnvioGastoSOR"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:ns2="http://www.bcie.org/ConsultarDesembolsosByIdSAD"
         xmlns:ns3="http://www.bcie.org/ConsultarConfiguracion" xmlns:ns4="http://www.bcie.org/ConsultarSaldoSAD"
         xmlns:ns5="http://www.bcie.org/CrearTransferenciaFLEXCUBESAD"
         xmlns:ns6="http/www.bcie.org/CrearActualizarTransferenciaFT05SAD" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns7="http://www.bcie.org/DesembolsoMO"
         xmlns:ns8="http://www.bcie.org/ConsultarInformacionReglaById" xmlns:ns18="http://www.bcie.org/ResultBO"
         xmlns:ns12="http://www.bcie.org/CommonBO" xmlns:ns15="http://www.bcie.org/MatrizTCCBO"
         xmlns:ns14="http://www.bcie.org/LineaCreditoBO" xmlns:ns10="http://www.bcie.org/ProductoBO"
         xmlns:ns13="http://www.bcie.org/HerramientaCEBO" xmlns:ns16="http://www.bcie.org/ComisionBO"
         xmlns:ns11="http://www.bcie.org/CatalogoBO" xmlns:ns9="http://www.bcie.org/DesembolsoBO"
         xmlns:ns17="http://www.bcie.org/AtributoBO" xmlns:ns19="http://www.bcie.org/ErrorBO"
         xmlns:ns25="http://www.bcie.org/TerminoBO" xmlns:ns24="http://www.bcie.org/ReglaBO"
         xmlns:ns23="http://www.bcie.org/OperacionBO" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns21="http://www.bcie.org/CondicionBO" xmlns:ns26="http://www.bcie.org/DeclaracionJuradaBO"
         xmlns:ns22="http://www.bcie.org/DocumentoBO" xmlns:ns27="http://www.bcie.org/ContratoBO"
         xmlns:ns20="http://www.bcie.org/ClienteBO">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://www.bcie.org/EnvioGastoSOR" location="../WSDLs/EnvioGastoSORWrapper.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="enviogasto_client" partnerLinkType="ns1:EnvioGasto" myRole="EnvioGasto_PT"/>
    <partnerLink name="ConsultarDesembolsoById_SB" partnerLinkType="ns2:ConsultarDesembolsoById_SB"
                 partnerRole="ConsultarDesembolsosById_PT"/>
    <partnerLink name="ConsultarConfiguracion_SB" partnerLinkType="ns3:ConsultarConfiguracion_SB"
                 partnerRole="ConsultarConfiguracionPT"/>
    <partnerLink name="ConsultarSaldo_SB" partnerLinkType="ns4:ConsultarSaldo_SB" partnerRole="ConsultarSaldo_PT"/>
    <partnerLink name="CrearTransferenciaFLEXCUBE_SB" partnerLinkType="ns5:CrearTransferenciaFLEXCUBE_SB"
                 partnerRole="CrearTransferenciaFLEXCUBE_PT"/>
    <partnerLink name="CrearActualizarTransferenciaFT05_SB" partnerLinkType="ns6:CrearActualizarTransferenciaFT05_SB"
                 partnerRole="CrearActualizarTransferenciaFT05_PT"/>
    <partnerLink name="ConsultarInformacionDesembolso_SB" partnerLinkType="ns8:ConsultarInformacionDesembolso_SB"
                 partnerRole="ConsultarInformacionReglaById_PT"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:requestEnvioGastoMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:responseEnvioGastoMessage"/>
    <variable name="setTitleVariable" type="xsd:string"/>
    <variable name="outConsultarDesembolsoById" messageType="ns2:responseConsultarDesembolsosByIdMessage"/>
    <variable name="outConsultarInformacionDesembolso" messageType="ns8:responseConsultarInformacionReglaByIdMessage"/>
    <variable name="outConsultarConfiguracion" messageType="ns3:ConsultarConfiguracionResponseMessage"/>
    <variable name="outConsultarSaldo" messageType="ns4:responseConsultarSaldoMessage"/>
    <variable name="outCrearActualizarTransferenciaFT05"
              messageType="ns6:responseCrearActualizarTransferenciaFT05Message"/>
    <variable name="outCrearTransferenciaFLEXCUBE" messageType="ns5:responseCrearTransferenciaFLEXCUBEMessage"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence15">
        <assign name="allFault">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
          </copy>
          <copy>
            <from>ora:getFaultAsString()</from>
            <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
          </copy>
        </assign>
        <reply name="ReplyAllFault" variable="outputVariable" partnerLink="enviogasto_client"
               portType="ns1:EnvioGasto_PT" operation="envioGasto"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in EnvioGasto.wsdl) -->
    <receive name="receiveInput" partnerLink="enviogasto_client" portType="ns1:EnvioGasto_PT" operation="envioGasto" variable="inputVariable" createInstance="yes"/>
    <validate name="Validate" variables="inputVariable"/>
    <assign name="setTitleInstance">
      <copy>
        <from>oraext:setFlowInstanceTitle(concat("IdDesembolso: ",$inputVariable.request/ns7:idDesembolso))</from>
        <to>$setTitleVariable</to>
      </copy>
    </assign>
    <scope name="ConsultarDesembolsoById_SB">
      <variables>
        <variable name="inConsultarDesembolsoById" messageType="ns2:requestConsultarDesembolsosByIdMessage"/>
      </variables>
      <sequence name="Sequence1">
        <assign name="requestConsultarDesembolsoById">
          <copy>
            <from>$inputVariable.request/ns7:idDesembolso</from>
            <to>$inConsultarDesembolsoById.request/ns7:idContratoDesembolso</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarDesembolsoById_SB"
                partnerLink="ConsultarDesembolsoById_SB" portType="ns2:ConsultarDesembolsosById_PT"
                operation="ConsultarDesembolsosById" inputVariable="inConsultarDesembolsoById"
                bpelx:invokeAsDetail="no" outputVariable="outConsultarDesembolsoById"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outConsultarDesembolsoById.response/ns7:Resultado/ns18:result = 'OK'</condition>
          <empty name="Empty"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="Sequence2">
              <assign name="errorConsultarDesembolso">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
                </copy>
                <copy>
                  <from>concat("Error en el servicio ConsultarDesembolsoById: ",$outConsultarDesembolsoById.response/ns7:Resultado/ns18:message)</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
                </copy>
              </assign>
              <reply name="ReplyConsultarDesembolsoById" variable="outputVariable" partnerLink="enviogasto_client"
                     portType="ns1:EnvioGasto_PT" operation="envioGasto"/>
              <exit name="ERROR"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ConsultarInformacionDesembolso">
      <variables>
        <variable name="inConsultarInformacionDesembolso"
                  messageType="ns8:requestConsultarInformacionReglaByIdMessage"/>
      </variables>
      <sequence name="Sequence3">
        <assign name="requestConsultarInformacionDesembolso">
          <copy>
            <from>$inputVariable.request/ns7:idDesembolso</from>
            <to>$inConsultarInformacionDesembolso.request/ns7:idDesembolso</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarInformacionDesembolso_SB" bpelx:invokeAsDetail="no"
                partnerLink="ConsultarInformacionDesembolso_SB" portType="ns8:ConsultarInformacionReglaById_PT"
                operation="consultarInformacionReglaById" inputVariable="inConsultarInformacionDesembolso"
                outputVariable="outConsultarInformacionDesembolso"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outConsultarInformacionDesembolso.response/ns7:Resultado/ns18:result = 'OK'</condition>
          <empty name="OK"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="Sequence4">
              <assign name="errorConsultarInformacionDesembolso">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
                </copy>
                <copy>
                  <from>concat("Error en el servicio ConsultarInformacionRegla: ",$outConsultarInformacionDesembolso.response/ns7:Resultado/ns18:message)</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
                </copy>
              </assign>
              <reply name="ReplyErrorConsultarInformacionDesembolso" variable="outputVariable"
                     partnerLink="enviogasto_client" portType="ns1:EnvioGasto_PT" operation="envioGasto"/>
              <exit name="ERROR"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ConsultarConfiguracion_SB">
      <variables>
        <variable name="inConsultarConfiguracion" messageType="ns3:ConsultarConfiguracionRequestMessage"/>
      </variables>
      <sequence name="Sequence5">
        <assign name="requestConsultarConfiguracion">
          <copy>
            <from>'CUENTA_PUENTE_DESEMBOLSO'</from>
            <to>$inConsultarConfiguracion.request/ns3:Parametro/ns12:name</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarConfiguracion_SB" bpelx:invokeAsDetail="no"
                partnerLink="ConsultarConfiguracion_SB" portType="ns3:ConsultarConfiguracionPT"
                operation="ConsultarConfiguracion" inputVariable="inConsultarConfiguracion"
                outputVariable="outConsultarConfiguracion"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outConsultarConfiguracion.response/ns3:Resultado/ns18:result = 'OK'</condition>
          <empty name="OK"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="Sequence6">
              <assign name="errorConsultarConfiguracion">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
                </copy>
                <copy>
                  <from>concat("Error en el servicio ConsultarConfiguracion: ",$outConsultarConfiguracion.response/ns3:Resultado/ns18:message)</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
                </copy>
              </assign>
              <reply name="ReplyError" variable="outputVariable" partnerLink="enviogasto_client"
                     portType="ns1:EnvioGasto_PT" operation="envioGasto"/>
              <exit name="ERROR"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ConsultarSaldo_SB">
      <variables>
        <variable name="inConsultarSaldo" messageType="ns4:requestConsultarSaldoMessage"/>
      </variables>
      <sequence name="Sequence7">
        <assign name="requestConsultarSaldo">
          <copy>
            <from>$inputVariable.request/ns7:idDesembolso</from>
            <to>$inConsultarSaldo.request/ns7:idDesembolso</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarSaldo_SB" bpelx:invokeAsDetail="no" partnerLink="ConsultarSaldo_SB"
                portType="ns4:ConsultarSaldo_PT" operation="consultarSaldo" inputVariable="inConsultarSaldo"
                outputVariable="outConsultarSaldo"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outConsultarSaldo.response/ns7:Resultado/ns18:result = 'OK'</condition>
          <empty name="OK"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="Sequence8">
              <assign name="errorConsultarSaldo">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
                </copy>
                <copy>
                  <from>concat("Error en el servicio ConsultarSaldo: ",$outConsultarSaldo.response/ns7:Resultado/ns18:message)</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
                </copy>
              </assign>
              <reply name="ReplyConsultarSaldo" variable="outputVariable" partnerLink="enviogasto_client"
                     portType="ns1:EnvioGasto_PT" operation="envioGasto"/>
              <exit name="ERROR"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="CrearActualizarTransferenciasFT05">
      <variables>
        <variable name="inCrearActualizarTransferenciaFT05"
                  messageType="ns6:requestCrearActualizarTransferenciaFT05Message"/>
      </variables>
      <sequence name="Sequence9">
        <assign name="requestCrearActualizarTransferenciaFT05">
          <copy ignoreMissingFromData="yes">
            <from>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:TransferenciaFT05/ns9:idTransferenciaFT05</from>
            <to>$inCrearActualizarTransferenciaFT05.request/ns7:TransferenciaFT05/ns9:idTransferenciaFT05</to>
          </copy>
          <copy ignoreMissingFromData="yes">
            <from>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:idDesembolso</from>
            <to>$inCrearActualizarTransferenciaFT05.request/ns7:TransferenciaFT05/ns9:idDesembolso</to>
          </copy>
        </assign>
        <invoke name="InvokeCrearActualizarTransferenciaFT05" bpelx:invokeAsDetail="no"
                partnerLink="CrearActualizarTransferenciaFT05_SB" portType="ns6:CrearActualizarTransferenciaFT05_PT"
                operation="crearActualizarTransferenciaFT05" inputVariable="inCrearActualizarTransferenciaFT05"
                outputVariable="outCrearActualizarTransferenciaFT05"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outCrearActualizarTransferenciaFT05.response/ns7:Resultado/ns18:result = 'OK'</condition>
          <empty name="OK"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="Sequence10">
              <assign name="errorCrearActualizarTransferenciaFT05">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
                </copy>
                <copy>
                  <from>concat("Error al Registrar la Transferencia FT05: ",$outCrearActualizarTransferenciaFT05.response/ns7:Resultado/ns18:message)</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
                </copy>
              </assign>
              <reply name="ReplyErrorCrearActualizarTransferenciaFT05" variable="outputVariable"
                     partnerLink="enviogasto_client" portType="ns1:EnvioGasto_PT" operation="envioGasto"/>
              <exit name="ERROR"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="CrearTransferenciaFLEXCUBE">
      <variables>
        <variable name="inCrearTransferenciaFLEXCUBE" messageType="ns5:requestCrearTransferenciaFLEXCUBEMessage"/>
      </variables>
      <sequence name="SeqCrearFLEX">
        <assign name="asignaDatosTransferencia">
          <copy bpelx:insertMissingToData="yes">
            <from>$outCrearActualizarTransferenciaFT05.response/ns7:TransferenciaFT05/ns9:idTransferenciaFT05</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:idTransferencia</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>string(ids:getUserProperty($outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:usuario, 'employeenumber'))</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:usuario</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>'TRANSFERENCIA_BANCARIA'</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:Monto/ns12:tipo/ns11:DescripcionCorta</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:monto[ns12:tipo/ns11:DescripcionCorta='DESEMBOLSO']/ns12:moneda/ns11:codigoExterno</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:Monto/ns12:moneda/ns11:codigoExterno</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>$outConsultarSaldo.response/ns7:ContratoDesembolso/ns9:monto[ns12:tipo/ns11:DescripcionCorta='SALDO']/ns12:importe</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:Monto/ns12:importe</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>'FT05'</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:tipoMensaje</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>$outConsultarConfiguracion.response/ns3:Parametro/ns12:value</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:numeroCuenta</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>'ND'</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:Beneficiario/ns9:beneficiario</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>'ND'</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:Beneficiario/ns9:direccion</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>'TF'</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:estado</to>
          </copy>
        </assign>
        <assign name="fechaEfectiva">
          <bpelx:skipCondition>count($inputVariable.request/ns7:fechaEfectiva)&lt;=0</bpelx:skipCondition>
          <copy>
            <from>$inputVariable.request/ns7:fechaEfectiva</from>
            <to>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:fechaDisponibilidadFondos</to>
          </copy>
        </assign>
        <assign name="XQ_CrearTransferenciaFLEXCUBE">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:processXQuery10('../Transformations/XQ_CrearTransferenciaFLEXCUBE.xqy', 'outConsultarDesembolsoById.response', $outConsultarDesembolsoById.response, 'outConsultarInformacionDesembolso.response', $outConsultarInformacionDesembolso.response)</from>
            <to variable="inCrearTransferenciaFLEXCUBE" part="request"/>
          </copy>
        </assign>
        <invoke name="InvokeCrearTransferenciaFLEXCUBE_SB" bpelx:invokeAsDetail="no"
                partnerLink="CrearTransferenciaFLEXCUBE_SB" portType="ns5:CrearTransferenciaFLEXCUBE_PT"
                operation="crearTransferenciaFLEXCUBE" inputVariable="inCrearTransferenciaFLEXCUBE"
                outputVariable="outCrearTransferenciaFLEXCUBE"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outCrearTransferenciaFLEXCUBE.response/ns7:Resultado/ns18:result = 'OK'</condition>
          <empty name="OK"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="Sequence12">
              <assign name="errorCrearTransferenciaFLEXCUBE">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
                </copy>
                <copy>
                  <from>concat("Error al Crear la Transferencia en FLEXCUBE: ",$outCrearTransferenciaFLEXCUBE.response/ns7:Resultado/ns18:message)</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
                </copy>
              </assign>
              <reply name="ReplyErrorCrearTransferenciaFLEXCUBE" variable="outputVariable"
                     partnerLink="enviogasto_client" portType="ns1:EnvioGasto_PT" operation="envioGasto"/>
              <exit name="ERROR"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="CrearActualizarTransferenciaFT05_SB">
      <variables>
        <variable name="CrearActualizarTransferenciaFT05_in"
                  messageType="ns6:requestCrearActualizarTransferenciaFT05Message"/>
      </variables>
      <sequence name="Sequence13">
        <assign name="requestActualizarTransferenciaFT05">
          <copy>
            <from>$outCrearActualizarTransferenciaFT05.response/ns7:TransferenciaFT05/ns9:idTransferenciaFT05</from>
            <to>$CrearActualizarTransferenciaFT05_in.request/ns7:TransferenciaFT05/ns9:idTransferenciaFT05</to>
          </copy>
          <copy>
            <from>$outCrearTransferenciaFLEXCUBE.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:idFacturador</from>
            <to>$CrearActualizarTransferenciaFT05_in.request/ns7:TransferenciaFT05/ns9:idFacturador</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns7:idDesembolso</from>
            <to>$CrearActualizarTransferenciaFT05_in.request/ns7:TransferenciaFT05/ns9:idDesembolso</to>
          </copy>
        </assign>
        <invoke name="InvokeCrearActualizarTransferenciaFT05_SB" bpelx:invokeAsDetail="no"
                partnerLink="CrearActualizarTransferenciaFT05_SB" portType="ns6:CrearActualizarTransferenciaFT05_PT"
                operation="crearActualizarTransferenciaFT05" inputVariable="CrearActualizarTransferenciaFT05_in"
                outputVariable="outCrearActualizarTransferenciaFT05"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outCrearActualizarTransferenciaFT05.response/ns7:Resultado/ns18:result = 'OK'</condition>
          <empty name="OK"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="Sequence14">
              <assign name="ErrorActualizarTransferenciaFT05">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
                </copy>
                <copy>
                  <from>concat("Error al Actualizar el BHQ de la TransferenciaFT05 ",$outCrearActualizarTransferenciaFT05.response/ns7:Resultado/ns18:message)</from>
                  <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
                </copy>
              </assign>
              <reply name="ReplyError" variable="outputVariable" partnerLink="enviogasto_client"
                     portType="ns1:EnvioGasto_PT" operation="envioGasto"/>
              <exit name="ERROR"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <assign name="responseEnvioGasto">
      <copy>
        <from>$outCrearActualizarTransferenciaFT05.response/ns7:TransferenciaFT05/ns9:idTransferenciaFT05</from>
        <to>$outputVariable.response/ns7:TransferenciaFT05/ns9:idTransferenciaFT05</to>
      </copy>
      <copy>
        <from>$inputVariable.request/ns7:idDesembolso</from>
        <to>$outputVariable.response/ns7:TransferenciaFT05/ns9:idDesembolso</to>
      </copy>
      <copy bpelx:insertMissingToData="yes">
        <from>$outCrearTransferenciaFLEXCUBE.response/ns7:ContratoDesembolso/ns9:Transferencia/ns9:idFacturador</from>
        <to>$outputVariable.response/ns7:TransferenciaFT05/ns9:idFacturador</to>
      </copy>
      <copy>
        <from>$outConsultarDesembolsoById.response/ns7:ContratoDesembolso/ns9:fechaDisponibilidadFondos</from>
        <to>$outputVariable.response/ns7:TransferenciaFT05/ns9:FechaEfectiva</to>
      </copy>
      <copy>
        <from>'OK'</from>
        <to>$outputVariable.response/ns7:Resultado/ns18:result</to>
      </copy>
      <copy>
        <from>'Registro exitoso'</from>
        <to>$outputVariable.response/ns7:Resultado/ns18:message</to>
      </copy>
    </assign>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="enviogasto_client" portType="ns1:EnvioGasto_PT" operation="envioGasto" variable="outputVariable"/>
  </sequence>
</process>