<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Oct 13 17:12:35 CDT 2016
  Author:  ismael-flores
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ConfiguracionDesembolso"
               targetNamespace="http://xmlns.oracle.com/ConfiguracionProcesos/ConfiguracionDesembolso/ConfiguracionDesembolso"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/ConfiguracionProcesos/ConfiguracionDesembolso/ConfiguracionDesembolso"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="http://xmlns.bcie.com/ConfiguracionProcesosService"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:ns2="http://www.bcie.org/ConsultarInformacionReglaById"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns3="http://www.bcie.org/ConfiguracionProcesosMO"
         xmlns:ns4="http://www.bcie.org/ConfiguracionProcesosBO" xmlns:ns12="http://www.bcie.org/ResultBO"
         xmlns:ns10="http://xmlns.bcie.org/ObjetoProceso/Comun/Parameter/V1"
         xmlns:ns6="http://xmlns.bcie.org/ObjetoProceso/Comun/Operacion/V1"
         xmlns:ns9="http://xmlns.bcie.org/ObjetoProceso/Comun/Proceso/V1"
         xmlns:ns5="http://xmlns.bcie.org/ObjetoProceso/Comun/Header/V1" xmlns:ns11="http://www.bcie.org/CatalogoBO"
         xmlns:ns7="http://xmlns.bcie.org/ObjetoProceso/Comun/Cliente/V1"
         xmlns:ns8="http://xmlns.bcie.org/ObjetoProceso/Comun/Tarea/V1" xmlns:ns13="http://www.bcie.org/ErrorBO"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns14="http://www.bcie.org/DesembolsoMO"
         xmlns:ns21="http://www.bcie.org/TerminoBO" xmlns:ns27="http://www.bcie.org/OperacionBO"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns17="http://www.bcie.org/CommonBO"
         xmlns:ns26="http://www.bcie.org/MatrizTCCBO" xmlns:ns16="http://www.bcie.org/LineaCreditoBO"
         xmlns:ns24="http://www.bcie.org/ProductoBO" xmlns:ns18="http://www.bcie.org/CondicionBO"
         xmlns:ns28="http://www.bcie.org/DeclaracionJuradaBO" xmlns:ns20="http://www.bcie.org/DocumentoBO"
         xmlns:ns25="http://www.bcie.org/HerramientaCEBO" xmlns:ns22="http://www.bcie.org/ComisionBO"
         xmlns:ns23="http://www.bcie.org/DesembolsoBO" xmlns:ns29="http://www.bcie.org/ContratoBO"
         xmlns:ns15="http://www.bcie.org/ClienteBO" xmlns:ns19="http://www.bcie.org/AtributoBO"
         xmlns:ns30="http://www.bcie.com/ConsultarRolesPorProceso"
         xmlns:ns31="http://www.bcie.org/ConsultarRolesPorProcesoMO"
         xmlns:ns32="http://www.bcie.org/ConsultarRolesPorProcesoBO"
         xmlns:ns33="http://xmlns.oracle.com/ClienteEsIFI/ClienteEsIFI_DecisionService"
         xmlns:ns35="http://www.bcie.org" xmlns:ns34="http://xmlns.oracle.com/bpel"
         xmlns:ns36="http://www.bcie.org/ConsultarDesembolsosByIdSAD"
         xmlns:ns37="http://xmlns.bcie.org/ProductoService" xmlns:ns38="http://www.bcie.org/ReglaBO"
         xmlns:ns39="http://www.bcie.org/ProductoMO" xmlns:ns40="http://www.bice.org/ActualizarLineaCreditoService"
         xmlns:ns41="http://www.bcie.org/LineaCreditoMO" xmlns:ns42="http://www.bcie.org/AprobacionBO"
         xmlns:ns43="http://www.bcie.org/TerminoService" xmlns:ns44="http://www.bcie.org/TerminoMO"
         xmlns:ns45="http://xmlns.oracle.com/ObtenerDisponibilidadRecursos/ObtenerDisponibilidadRecursos_DecisionService_1"
         xmlns:ns46="http://www.bcie.org/CrearActualizarDesembolsoSAD"
         xmlns:ns47="http://www.bcie.org/ConsultarDesembolsosConfiguracionByIdSAD"
         xmlns:ns48="http://xmlns.bcie.com/OperacionService" xmlns:ns49="http://www.bcie.org/OperacionMO">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://www.bcie.org/ConsultarDesembolsosByIdSAD"
          location="oramds:/apps/Resources/ComponentesComunes/DominioDesembolso/Desembolso/V1/Wsdl/ADAPTER/ConsultarDesembolsosByIdSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.oracle.com/ClienteEsIFI/ClienteEsIFI_DecisionService"
          location="oramds:/apps/Resources/ComponentesComunes/BusinessRules/ValidarClienteEsIFI/V1/Wsdl/ClienteEsIFI_DecisionService.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://www.bcie.com/ConsultarRolesPorProceso"
          location="oramds:/apps/Resources/ComponentesComunes/Utilidades/ConsultarRolesPorProceso/V1/Wsdl/ConsultarRolesPorProceso.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://www.bcie.org/ConsultarInformacionReglaById"
          location="oramds:/apps/Resources/ComponentesComunes/DominioDesembolso/Desembolso/V1/Wsdl/ADAPTER/ConsultarInformacionReglaByIdSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/ConfiguracionProcesosService"
          location="../WSDLs/ConfiguracionDesembolsoSORWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"
          ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="configuraciondesembolso_client" partnerLinkType="ns1:ConfiguracionDesembolso" myRole="ConfiguracionDesembolsoPT"/>
    <partnerLink name="ConsultarInformacionReglaById" partnerLinkType="ns2:ConsultarInformacionReglaById"
                 partnerRole="ConsultarInformacionReglaById_PT"/>
    <partnerLink name="ConsultarRolesPorProceso" partnerLinkType="ns30:ConsultarRolesPorProceso"
                 partnerRole="ConsultarRolesPorProceso_ptt"/>
    <partnerLink name="ConsultarProductoByIdOperacion" partnerLinkType="ns37:ConsultarProductoByIdOperacion"
                 partnerRole="ConsultarProductoByIdOperacionPT"/>
    <partnerLink name="ConsultarTermino_SB" partnerLinkType="ns43:ConsultarTermino_SB"
                 partnerRole="ConsultarTerminoPT"/>
    <partnerLink name="ObtenerDisponibilidadRecursos_SB" partnerLinkType="ns45:ObtenerDisponibilidadRecursos_SB"
                 partnerRole="IDecisionService"/>
    <partnerLink name="CrearActualizarDesembolsos_SB" partnerLinkType="ns46:CrearActualizarDesembolsos_SB"
                 partnerRole="CrearActualizarDesembolso_PT"/>
    <partnerLink name="ConsultarDesembolsoConfiguracionById" partnerLinkType="ns47:ConsultarDesembolsoConfiguracionById"
                 partnerRole="ConsultarDesembolsosConfiguracionById_PT"/>
    <partnerLink name="ConsultarLineaCreditoByIdLineaCredito"
                 partnerLinkType="ns40:ConsultarLineaCreditoByIdLineaCredito"
                 partnerRole="ConsultarLineaCreditoByIdLineaCreditoPT"/>
    <partnerLink name="ConsultarOperacionByIdOperacion" partnerLinkType="ns48:ConsultarOperacionByIdOperacion"
                 partnerRole="ConsultarOperacionById12Port"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:requestConfiguracionDesembolsoMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:responseConfiguracionDesembolsoMessage"/>
    <variable name="setTittleVar" type="xsd:string"/>
    <variable name="outInvokeConsultarInformacionReglaById"
              messageType="ns2:responseConsultarInformacionReglaByIdMessage"/>
    <variable name="outInvokeConsultarRolesPorProceso" messageType="ns30:replyMessage"/>
    <variable name="outInvokeValidarClienteIFI" messageType="ns33:callFunctionStatelessDecisionMessage"/>
    <variable name="inConsultarTermino" messageType="ns43:ConsultarTerminoRequestMessage"/>
    <variable name="outConsultarTermino" messageType="ns43:ConsultarTerminoResponseMessage"/>
    <variable name="inObtenerDisponibilidadRecursos" messageType="ns45:callFunctionStatelessMessage"/>
    <variable name="outObtenerDisponibilidadRecursos" messageType="ns45:callFunctionStatelessDecisionMessage"/>
    <variable name="inCrearActualizarDesembolso" messageType="ns46:requestCrearActualizarDesembolsoMessage"/>
    <variable name="outCrearActualizarDesembolso" messageType="ns46:responseCrearActualizarDesembolsoMessage"/>
    <variable name="inAsignarFechaInicioDesembolso" messageType="ns46:requestCrearActualizarDesembolsoMessage"/>
    <variable name="outAsignarFechaInicioDesembolso" messageType="ns46:responseCrearActualizarDesembolsoMessage"/>
    <variable name="InvokeCrearActualizarDesembolso_Instancia_InputVariable"
              messageType="ns46:requestCrearActualizarDesembolsoMessage"/>
    <variable name="InvokeCrearActualizarDesembolso_Instancia_OutputVariable"
              messageType="ns46:responseCrearActualizarDesembolsoMessage"/>
    <variable name="inInvokeConsultarDesembolsoById"
              messageType="ns47:ConsultarDesembolsosConfiguracionByIdRequestMessage"/>
    <variable name="outInvokeConsultarDesembolsoById"
              messageType="ns47:ConsultarDesembolsosConfiguracionByIdResponseMessage"/>
    <variable name="inConsultarLineaCreditoById"
              messageType="ns40:ConsultarLineaCreditoByIdLineaCreditoRequestMessage"/>
    <variable name="outConsultarLineaCreditoById"
              messageType="ns40:ConsultarLineaCreditoByIdLineaCreditoResponseMessage"/>
    <variable name="inConsultarOperacionById" messageType="ns48:requestConsultarOperacionMessage"/>
    <variable name="outConsultarOperacionById" messageType="ns48:responseConsultarOperacionMessage"/>
  </variables>
  <faultHandlers>
    <catchAll bpelx:name="CatchAll">
      <sequence name="SequenceCatchAll">
        <assign name="assignError">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:result</to>
          </copy>
          <copy>
            <from>concat("Error en ConfiguracionDesembolso: ",ora:getFaultAsString())</from>
            <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:message</to>
          </copy>
        </assign>
        <reply name="ReplyCatchAll" variable="outputVariable" partnerLink="configuraciondesembolso_client"
               portType="ns1:ConfiguracionDesembolsoPT" operation="configuracionDesembolso"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ConfiguracionDesembolso.wsdl) -->
    <receive name="receiveInput" partnerLink="configuraciondesembolso_client" portType="ns1:ConfiguracionDesembolsoPT" operation="configuracionDesembolso" variable="inputVariable" createInstance="yes"/>
    <validate name="ValidateInput" variables="inputVariable"/>
    <assign name="setTittle">
      <copy>
        <from>oraext:setFlowInstanceTitle(concat("idDesembolso = ",$inputVariable.requestConfiguracionDesembolso/ns3:idDesembolso))</from>
        <to>$setTittleVar</to>
      </copy>
    </assign>
    <assign name="AssignCrearActualizarDesembolso_Instancia">
      <copy>
        <from>$inputVariable.requestConfiguracionDesembolso/ns3:idDesembolso</from>
        <to>$InvokeCrearActualizarDesembolso_Instancia_InputVariable.request/ns14:ContratoDesembolso/ns23:idDesembolso</to>
      </copy>
      <copy>
        <from>$inputVariable.requestConfiguracionDesembolso/ns3:instanciaProceso</from>
        <to>$InvokeCrearActualizarDesembolso_Instancia_InputVariable.request/ns14:ContratoDesembolso/ns23:instanciaProceso</to>
      </copy>
    </assign>
    <invoke name="InvokeCrearActualizarDesembolso_Instancia" bpelx:invokeAsDetail="no"
            partnerLink="CrearActualizarDesembolsos_SB" portType="ns46:CrearActualizarDesembolso_PT"
            operation="crearActualizarDesembolso"
            inputVariable="InvokeCrearActualizarDesembolso_Instancia_InputVariable"
            outputVariable="InvokeCrearActualizarDesembolso_Instancia_OutputVariable"/>
    <scope name="ScopeActualizarFechaInicioDesembolso">
      <sequence name="SequenceAsignarFechaInicioDesembolso">
        <assign name="AssignFechaInicioDesembolso">
          <copy>
            <from>$inputVariable.requestConfiguracionDesembolso/ns3:idDesembolso</from>
            <to>$inAsignarFechaInicioDesembolso.request/ns14:ContratoDesembolso/ns23:idDesembolso</to>
          </copy>
          <copy>
            <from>xp20:current-dateTime()</from>
            <to>$inAsignarFechaInicioDesembolso.request/ns14:ContratoDesembolso/ns23:fechaInicioProceso</to>
          </copy>
        </assign>
        <invoke name="InvokeAsignarFechaInicioDesembolso" partnerLink="CrearActualizarDesembolsos_SB"
                portType="ns46:CrearActualizarDesembolso_PT" operation="crearActualizarDesembolso"
                inputVariable="inAsignarFechaInicioDesembolso" bpelx:invokeAsDetail="no"
                outputVariable="outAsignarFechaInicioDesembolso"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outAsignarFechaInicioDesembolso.response/ns14:Resultado/ns12:result = 'OK'</condition>
          <empty name="Empty"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="SequenceFechaInicioDesembolsoError">
              <assign name="AssignFechaInicioDesembolsoError">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:result</to>
                </copy>
                <copy>
                  <from>concat('Error en el servicio CrearActualizarDesembolso: ',$outCrearActualizarDesembolso.response/ns14:Resultado/ns12:message)</from>
                  <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:message</to>
                </copy>
              </assign>
              <reply name="ReplyFechaInicioDesembolsoError" variable="outputVariable"
                     partnerLink="configuraciondesembolso_client" portType="ns1:ConfiguracionDesembolsoPT"
                     operation="configuracionDesembolso"/>
              <exit name="Exit"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ScopeConsultarDesembolsoById">
      <sequence name="SequenceConsultarDesembolsoById">
        <assign name="assignIdDesmbolso">
          <copy>
            <from>$inputVariable.requestConfiguracionDesembolso/ns3:idDesembolso</from>
            <to>$inInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdRequest/ns14:idContratoDesembolso</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarDesembolsoById" bpelx:invokeAsDetail="no"
                partnerLink="ConsultarDesembolsoConfiguracionById"
                portType="ns47:ConsultarDesembolsosConfiguracionById_PT"
                operation="ConsultarDesembolsosConfiguracionById" inputVariable="inInvokeConsultarDesembolsoById"
                outputVariable="outInvokeConsultarDesembolsoById"/>
        <if name="IfOKConsultarDesembolsoById">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse/ns14:Resultado/ns12:message = 'Operación realizada correctamente'</condition>
          <empty name="ConsultaCorrecta"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="SequenceConsultarDesembolsoByIdError">
              <assign name="assignError">
                <copy>
                  <from>$outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse/ns14:Resultado</from>
                  <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado</to>
                </copy>
              </assign>
              <reply name="ReplyConsultarDesembolsoByIdError" variable="outputVariable"
                     partnerLink="configuraciondesembolso_client" portType="ns1:ConfiguracionDesembolsoPT"
                     operation="configuracionDesembolso"/>
              <exit name="Exit"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ScopeObtenerDisponibilidad">
      <sequence name="SequenceObtenerDisponibilidadRecursos">
        <assign name="AssignObtenerDisponibilidadRecursos">
          <copy ignoreMissingFromData="yes">
            <from>$outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse/ns14:ContratoDesembolso/ns23:monto[ns17:tipo/ns11:DescripcionCorta = 'DESEMBOLSO']/ns17:importe</from>
            <to>$inObtenerDisponibilidadRecursos.payload/ns45:parameterList/ns35:ObtenerDisponibilidadRecursosRequest/ns35:monto</to>
          </copy>
          <copy ignoreMissingFromData="yes">
            <from>$outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse/ns14:ContratoDesembolso/ns23:monto[ns17:tipo/ns11:DescripcionCorta = 'DESEMBOLSO']/ns17:moneda/ns11:codigoExterno</from>
            <to>$inObtenerDisponibilidadRecursos.payload/ns45:parameterList/ns35:ObtenerDisponibilidadRecursosRequest/ns35:moneda</to>
          </copy>
          <copy>
            <from>'ObtenerDisponibilidadRecursos_DecisionService_1'</from>
            <to>$inObtenerDisponibilidadRecursos.payload/@name</to>
          </copy>
        </assign>
        <invoke name="InvokeObtenerDisponibilidadRecursos" partnerLink="ObtenerDisponibilidadRecursos_SB"
                portType="ns45:IDecisionService" operation="callFunctionStateless"
                inputVariable="inObtenerDisponibilidadRecursos" bpelx:invokeAsDetail="no"
                outputVariable="outObtenerDisponibilidadRecursos"/>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>string-length($outObtenerDisponibilidadRecursos.payload/ns45:resultList/ns35:ObtenerDisponibilidadRecursosResponse/ns35:dias) &gt; 0</condition>
          <sequence name="SequenceObtenerDisponibilidadRecursosOK">
            <assign name="XQCrearActualizarDesembolsoRequest">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:processXQuery10('../Transformations/XQCrearActualizarDesembolsoRequest.xqy', 'outInvokeConsultarDesembolsoById.response', $outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse, 'outObtenerDisponibilidadRecursos.payload', $outObtenerDisponibilidadRecursos.payload)</from>
                <to variable="inCrearActualizarDesembolso" part="request"/>
              </copy>
            </assign>
            <invoke name="InvokeCrearActualizarDesembolso"
                    partnerLink="CrearActualizarDesembolsos_SB" portType="ns46:CrearActualizarDesembolso_PT"
                    operation="crearActualizarDesembolso" inputVariable="inCrearActualizarDesembolso"
                    bpelx:invokeAsDetail="no" outputVariable="outCrearActualizarDesembolso"/>
            <if name="IfValidaOK">
              <documentation>
                <![CDATA[OK]]>
              </documentation>
              <condition>$outCrearActualizarDesembolso.response/ns14:Resultado/ns12:result = 'OK'</condition>
              <empty name="Empty"/>
              <else>
                <documentation>
                  <![CDATA[ERROR]]>
                </documentation>
                <sequence name="SequenceCrearActualizarDesembolsoError">
                  <assign name="AssignCrearActualizarDesembolsoError">
                    <copy>
                      <from>'ERROR'</from>
                      <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:result</to>
                    </copy>
                    <copy>
                      <from>concat('Error en el servicio CrearActualizarDesembolso: ',$outCrearActualizarDesembolso.response/ns14:Resultado/ns12:message)</from>
                      <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:message</to>
                    </copy>
                  </assign>
                  <reply name="ReplyCrearActualizarDesembolsoError" variable="outputVariable"
                         partnerLink="configuraciondesembolso_client" portType="ns1:ConfiguracionDesembolsoPT"
                         operation="configuracionDesembolso"/>
                  <exit name="Exit"/>
                </sequence>
              </else>
            </if>
          </sequence>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <assign name="AssignError">
              <copy>
                <from>'ERROR'</from>
                <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:result</to>
              </copy>
              <copy>
                <from>'No se puedo obetner la disponibilidad de recursos'</from>
                <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:message</to>
              </copy>
            </assign>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ScopeInformacionReglaById">
      <variables>
        <variable name="inInvokeConsultarInformacionReglaById"
                  messageType="ns2:requestConsultarInformacionReglaByIdMessage"/>
      </variables>
      <sequence name="SequenceConsultarInformacionReglaById">
      <assign name="AssignIdLineaCredito">
          <copy>
            <from>$outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse/ns14:ContratoDesembolso/ns23:idLinea</from>
            <to>$inConsultarLineaCreditoById.request/ns41:idLineaCredito</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarLineaCreditoById" bpelx:invokeAsDetail="no"
                partnerLink="ConsultarLineaCreditoByIdLineaCredito"
                portType="ns40:ConsultarLineaCreditoByIdLineaCreditoPT"
                operation="consultarLineaCreditoByIdLineaCredito" inputVariable="inConsultarLineaCreditoById"
                outputVariable="outConsultarLineaCreditoById"/>
        <assign name="AssignIdOperacion">
          <copy>
            <from>$outConsultarLineaCreditoById.response/ns41:Operacion/ns27:idOperacion</from>
            <to>$inConsultarOperacionById.request/ns49:idOperacion</to>
          </copy>
          <copy>
            <from>'OPERACION'</from>
            <to>$inConsultarOperacionById.request/ns49:nivelDetalle</to>
          </copy>
          <copy>
            <from>false()</from>
            <to>$inConsultarOperacionById.request/ns49:infoDetalleCliente</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarOperacionById" bpelx:invokeAsDetail="no"
                partnerLink="ConsultarOperacionByIdOperacion" portType="ns48:ConsultarOperacionById12Port"
                operation="ConsultarOperacionById" inputVariable="inConsultarOperacionById"
                outputVariable="outConsultarOperacionById"/>
        <assign name="XQTransformConsultarInformacionRegla">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:processXQuery10('../Transformations/ConsultarInformacionReglaResponse.xqy', 'outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse', $outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse, 'outConsultarLineaCreditoById.response', $outConsultarLineaCreditoById.response, 'outConsultarOperacionById.response', $outConsultarOperacionById.response)</from>
            <to variable="outInvokeConsultarInformacionReglaById" part="response"/>
          </copy>
        </assign>
        <assign name="assignIDesembolso">
          <copy>
            <from>$inputVariable.requestConfiguracionDesembolso/ns3:idDesembolso</from>
            <to>$inInvokeConsultarInformacionReglaById.request/ns14:idDesembolso</to>
          </copy>
        </assign>
        <if name="IfOKConsultarInformacionRegla">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outInvokeConsultarInformacionReglaById.response/ns14:Resultado/ns12:message = 'Consulta Exitosa'</condition>
          <sequence name="SequenceConsultarInformacionReglaOK">
            <assign name="AssignConsultarTermino">
              <copy>
                <from>$outInvokeConsultarInformacionReglaById.response/ns14:Operacion/ns27:idOperacion</from>
                <to>$inConsultarTermino.request/ns44:idOperacion</to>
              </copy>
              <copy>
                <from>'36'</from>
                <to>$inConsultarTermino.request/ns44:tipoTermino/ns21:idCatTermino</to>
              </copy>
            </assign>
            <invoke name="InvokeConsultarTermino" partnerLink="ConsultarTermino_SB"
                    portType="ns43:ConsultarTerminoPT" operation="consultarTermino" inputVariable="inConsultarTermino"
                    bpelx:invokeAsDetail="no" outputVariable="outConsultarTermino"/>
            <if name="IfValidaOK">
              <documentation>
                <![CDATA[OK]]>
              </documentation>
              <condition>$outConsultarTermino.response/ns44:Resultado/ns12:result = 'OK'</condition>
              <empty name="Empty"/>
              <else>
                <documentation>
                  <![CDATA[ERROR]]>
                </documentation>
                <sequence name="SequenceConsultarTerminoError">
                  <assign name="AssignConsultarTerminoError">
                    <copy>
                      <from>'ERROR'</from>
                      <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:result</to>
                    </copy>
                    <copy>
                      <from>concat('Error en el servicio ConsultarTermino: ',$outConsultarTermino.response/ns44:Resultado/ns12:message)</from>
                      <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:message</to>
                    </copy>
                  </assign>
                  <reply name="ReplyConsultarTerminoError" variable="outputVariable"
                         partnerLink="configuraciondesembolso_client" portType="ns1:ConfiguracionDesembolsoPT"
                         operation="configuracionDesembolso"/>
                  <exit name="Exit"/>
                </sequence>
              </else>
            </if>
            <scope name="ScopeValidarProducto_IFI">
              <variables>
                <variable name="inInvokeValidarClienteIFI" messageType="ns33:callFunctionStatelessMessage"/>
                <variable name="inConsultarProducto" messageType="ns37:requestConsultarByIdOperacionMessage"/>
                <variable name="outConsultarProducto" messageType="ns37:responseConsultarByIdOperacionMessage"/>
              </variables>
              <sequence name="SequenceValidarProducto_IFI">
                <assign name="AssignConsultarProducto">
                  <copy>
                    <from>$outInvokeConsultarInformacionReglaById.response/ns14:Operacion/ns27:idOperacion</from>
                    <to>$inConsultarProducto.request/ns39:idOperacion</to>
                  </copy>
                </assign>
                <invoke name="InvokeConsultarProducto" bpelx:invokeAsDetail="no"
                        partnerLink="ConsultarProductoByIdOperacion" portType="ns37:ConsultarProductoByIdOperacionPT"
                        operation="consultarByIdOperacion" inputVariable="inConsultarProducto"
                        outputVariable="outConsultarProducto"/>
                <if name="IfOKConsultarProducto">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outConsultarProducto.response/ns39:Resultado/ns12:result = 'OK'</condition>
                  <scope name="ScopeConsultarRolesPorProceso">
                    <variables>
                      <variable name="inInvokeConsultarRolesPorProceso" messageType="ns30:requestMessage"/>
                    </variables>
                    <sequence name="SequenceConsultarRolesPorProceso">
                      <assign name="assignIdProceso">
                        <copy>
                          <from>17</from>
                          <to>$inInvokeConsultarRolesPorProceso.request/ns31:Proceso/ns32:idProceso</to>
                        </copy>
                      </assign>
                      <invoke name="InvokeConsultarRolesPorProceso" bpelx:invokeAsDetail="no"
                              partnerLink="ConsultarRolesPorProceso" portType="ns30:ConsultarRolesPorProceso_ptt"
                              operation="ConsultarRolesPorProceso" inputVariable="inInvokeConsultarRolesPorProceso"
                              outputVariable="outInvokeConsultarRolesPorProceso"/>
                      <if name="IfOKConsultarRolesPorProceso">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outInvokeConsultarRolesPorProceso.response/ns31:Result/ns12:message = 'Operacion Exitosa'</condition>
                        <sequence name="SequenceConfiguracionDesembolsoResponse">
                          <assign name="ConfiguracionDesembolso_Response">
                            <bpelx:annotation>
                              <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                            </bpelx:annotation>
                            <copy>
                              <from>ora:processXQuery10('../Transformations/ConfiguracionDesembolso_Response.xqy', 'outInvokeConsultarInformacionReglaById.response', $outInvokeConsultarInformacionReglaById.response, 'outInvokeConsultarRolesPorProceso.response', $outInvokeConsultarRolesPorProceso.response, 'outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse', $outInvokeConsultarDesembolsoById.ConsultarDesembolsosConfiguracionByIdResponse, 'outConsultarProducto.response', $outConsultarProducto.response, 'outConsultarTermino.response', $outConsultarTermino.response)</from>
                              <to variable="outputVariable" part="responseConfiguracionDesembolso"/>
                            </copy>
                          </assign>
                          <assign name="assignIdFlujo">
                            <copy bpelx:insertMissingToData="yes">
                              <from>$inputVariable.requestConfiguracionDesembolso/ns3:instanciaProceso</from>
                              <to>$outputVariable.responseConfiguracionDesembolso/ns3:configuracionDesembolso/ns4:Header/ns5:Proceso/ns9:IdFlujo</to>
                            </copy>
                          </assign>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <assign name="assignError">
                            <copy>
                              <from>$outInvokeConsultarRolesPorProceso.response/ns31:Result</from>
                              <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado</to>
                            </copy>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </scope>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="assignError">
                      <copy>
                        <from>'ERROR'</from>
                        <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:result</to>
                      </copy>
                      <copy>
                        <from>'Error al validar cliente IFI'</from>
                        <to>$outputVariable.responseConfiguracionDesembolso/ns3:Resultado/ns12:message</to>
                      </copy>
                    </assign>
                  </else>
                </if>
              </sequence>
            </scope>
          </sequence>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <empty name="Error"/>
          </else>
        </if>
      </sequence>
    </scope>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="configuraciondesembolso_client" portType="ns1:ConfiguracionDesembolsoPT" operation="configuracionDesembolso" variable="outputVariable"/>
  </sequence>
</process>