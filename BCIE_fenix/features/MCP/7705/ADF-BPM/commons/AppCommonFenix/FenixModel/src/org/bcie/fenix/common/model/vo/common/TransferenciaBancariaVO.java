package org.bcie.fenix.common.model.vo.common;

import java.math.BigDecimal;

import java.util.ArrayList;
import java.util.Date;

import java.util.Map;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 19 22:28:27 CDT 2016
// ---------------------------------------------------------------------
public interface TransferenciaBancariaVO extends ViewObject {
    Row establecerFilaComoActual(Long idTransaccion);


    Boolean comitTransferencia();


    Boolean revertirConsolidaciones(Long transferenciaConsolidado);


    Boolean actualizarTransferencias(Long idConsolidado, Long transferencia);

    Boolean existenTransferenciasRegistradasByIdContrato(Long idContrato);


    Boolean buscarTransferenciaParaReservarFondos(Long idTransferencia, String descripcionMoneda);

    String servicioReservarFondos(Long idDesembolso, String usuarioAutoriza, Date fechaRequerido);

    Boolean verificarReservaContrato(Long idContrato);


    Map reservarFondosService(String usuarioAutoriza, ArrayList<Long> idTransferencia);


    Boolean agregarDatosCuantaAllTransferencias(Long idContrato, String codigoBanco, String nombreBanco,
                                                String nombreCuenta, String numCuenta, String usuarioAutoriza);

    Boolean guardarDatosCuentaTransferenciaCurrent(String usuarioAutoriza);

    Boolean eliminarNumReservaATransacciones(Long idContrato);

    Row obtenerTransferenciaActual();


    void refreshCampos(Long idTransferencia, String descripcionMoneda);

    Boolean actualizarConsolidado(String cuenta, String nombreCuenta, Long transferencia);

    Boolean commitConsolidarTransferencia();


    String aplicarTransferencia(Long idTransferencia, String usuario, String instanciaProceso);


    Long consolidarTransferencias(String cadenaId, Long primerTransferencia, Long contrato, BigDecimal montoTotal);

    Boolean estadoInstruccion(Long idTransferecnias, String estado);

    Boolean aplicarConsolidacion(Long consolidado, String usuario, String instanciaProceso);

    Row getTransferenciaCurrent();

    void setValueClaveNombreBanco();
}

