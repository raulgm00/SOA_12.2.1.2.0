package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ValidarCondicionProcesoActivoVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 27 14:09:09 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ValidarCondicionProcesoActivoVOImpl extends ViewObjectImpl implements ValidarCondicionProcesoActivoVO {
    
    public static final ADFLogger logger = ADFLogger.createADFLogger(TreLineaCreditoAprobacionVOImpl.class);
    
    /**
      * Define nombre del criterio de busqueda
      */
    public static final String VIEW_CRITERIA_CONDICION_ACTIVA = "ValidarCondicionProcesoActivoVOCriteria";
    
    /**
     * This is the default constructor (do not remove).
     */
    public ValidarCondicionProcesoActivoVOImpl() {
    }

    public Boolean validarCondicionEnProcesoActivo(Long idCondicion,Long idOperacion,Integer enProceso) {
        logger.warning("Dentro validarCondicionEnProcesoActivo idCondicion : " +idCondicion +
                    " idOperacion: " + idOperacion + " enProceso :"+enProceso);
        Boolean result = null;
        ViewCriteria criteria = null;
        try {
            //asignan valores de filtro para el viewCriteria
            this.setvarIdCondicion(idCondicion);
            this.setvarIdOperacion(idOperacion);
            this.setvarEnProceso(enProceso);
            criteria = getViewCriteria(VIEW_CRITERIA_CONDICION_ACTIVA);
            applyViewCriteria(criteria);
            executeQuery();
            if (this.getEstimatedRowCount() > 0) {
                logger.warning("Se encontro row con el parametro idCondicion : " + idCondicion +
                            " idOperacion : "+idOperacion + " enProceso : "+enProceso);
                result = Boolean.TRUE;
            } else {
                logger.warning("No se encontro row con el parametro idCondicion : " + idCondicion +
                            " idOperacion : "+idOperacion + " enProceso : "+enProceso);
                result = Boolean.FALSE;
            }
        } catch (Exception e) {
            logger.warning("Error en el metodo validarCondicionEnProcesoActivo : ", e);
        } finally {
            logger.warning("Into finally remove criteria : ", VIEW_CRITERIA_CONDICION_ACTIVA);
            getViewCriteriaManager().removeApplyViewCriteriaName(VIEW_CRITERIA_CONDICION_ACTIVA);
        }
        logger.warning("Saliendo validarCondicionEnProcesoActivo result :"+result);
        return result;
    }
    
    

    /**
     * Returns the variable value for varIdCondicion.
     * @return variable value for varIdCondicion
     */
    public Long getvarIdCondicion() {
        return (Long) ensureVariableManager().getVariableValue("varIdCondicion");
    }

    /**
     * Sets <code>value</code> for variable varIdCondicion.
     * @param value value to bind as varIdCondicion
     */
    public void setvarIdCondicion(Long value) {
        ensureVariableManager().setVariableValue("varIdCondicion", value);
    }

    /**
     * Returns the variable value for varIdOperacion.
     * @return variable value for varIdOperacion
     */
    public Long getvarIdOperacion() {
        return (Long) ensureVariableManager().getVariableValue("varIdOperacion");
    }

    /**
     * Sets <code>value</code> for variable varIdOperacion.
     * @param value value to bind as varIdOperacion
     */
    public void setvarIdOperacion(Long value) {
        ensureVariableManager().setVariableValue("varIdOperacion", value);
    }

    /**
     * Returns the variable value for varEnProceso.
     * @return variable value for varEnProceso
     */
    public Integer getvarEnProceso() {
        return (Integer) ensureVariableManager().getVariableValue("varEnProceso");
    }

    /**
     * Sets <code>value</code> for variable varEnProceso.
     * @param value value to bind as varEnProceso
     */
    public void setvarEnProceso(Integer value) {
        ensureVariableManager().setVariableValue("varEnProceso", value);
    }
}

