package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import java.util.Date;

import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.commonbo.MontoType;
import org.bcie.desembolsomo.ConsultarSaldoRequestType;
import org.bcie.desembolsomo.ConsultarSaldoResponseType;
import org.bcie.fenix.common.model.FenixModelConstants;
import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.utils.IWsdlLocation;
import org.bcie.fenix.common.model.utils.ModelUtils;
import org.bcie.fenix.common.model.vo.common.DesembolsoServiceVO;
import org.bcie.lineacreditomo.ConsultarLineaCreditoBPELResponseType;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 10 17:49:05 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DesembolsoServiceVOImpl extends ViewObjectImpl implements DesembolsoServiceVO {
    
    private static ADFLogger logger = null;
    
    private static final String SALDO = "SALDO";
    /**
     * This is the default constructor (do not remove).
     */
    public DesembolsoServiceVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public BigDecimal consultarSaldo(Long idDesembolso) {
        logger.log(ADFLogger.NOTIFICATION, "INTO DesembolsoServiceVOImpl.consultarSaldo: "+idDesembolso);
        FenixAMImpl fenixAMImpl = (FenixAMImpl) this.getRootApplicationModule();
        String wsdl = fenixAMImpl.getWsdl(IWsdlLocation.DESEMBOLSO);
        BigDecimal montoSaldo = null;
        
        org.bcie.desembolsobo.ContratoDesembolso contratoDesembolso = 
        IWsdlLocation.Service.getInstance(org.bcie.desembolsobo.ContratoDesembolso.class, wsdl);
        
        org.bcie.desembolso.DesembolsoPTSOAP12BindingQSService desembolsoPTSOAP12BindingQSService = 
        IWsdlLocation.Service.getInstance(org.bcie.desembolso.DesembolsoPTSOAP12BindingQSService.class, wsdl);
        
        org.bcie.desembolso.DesembolsoPT desembolsoPT = 
            desembolsoPTSOAP12BindingQSService.getDesembolsoPTSOAP12BindingQSPort();
        
        org.bcie.desembolsomo.ConsultarSaldoRequestType request = 
            new org.bcie.desembolsomo.ConsultarSaldoRequestType();

        //se agrega los parametros al request idOperacion e instanciaProceso
        request.setIdDesembolso(idDesembolso);
                    
        Date horaInicio = ModelUtils.logStartWS(logger, request, FenixModelConstants.WSC_CONSULTAR_SALDO_CONTRATO_DESEMBOLSO);

        ConsultarSaldoResponseType response = desembolsoPT.consultarSaldo(request);
        
        ModelUtils.logEndWS(logger, response, FenixModelConstants.WSC_CONSULTAR_SALDO_CONTRATO_DESEMBOLSO, horaInicio);
        
        if (null != response.getContratoDesembolso()) {
            response.getContratoDesembolso().getMonto();
            
            //Vamos por los montos que estan en List<MontoType>
            List<MontoType> lista = response.getContratoDesembolso().getMonto();
            for(MontoType monto: lista) {
                if(monto.getTipo().getDescripcionCorta().equals(SALDO)) {
                    montoSaldo = monto.getImporte();
                    logger.warning("monto.getImporte():"+monto.getImporte());
                }
            }
        } else {
            JboException ex = new JboException("Error al consultar el Saldo, favor de intentar m\u00E1s tarde.");
            throw ex;
        }
        
        return montoSaldo;
    }
}

