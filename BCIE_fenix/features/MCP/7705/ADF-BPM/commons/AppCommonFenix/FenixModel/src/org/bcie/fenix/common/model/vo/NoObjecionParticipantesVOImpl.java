package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.FenixModelConstants;
import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.am.FenixAdquisicionAMImpl;
import org.bcie.fenix.common.model.vo.common.NoObjecionParticipantesVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 17 11:56:26 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NoObjecionParticipantesVOImpl extends ViewObjectImpl implements NoObjecionParticipantesVO {
    private static ADFLogger logger = null;

    /**
     * This is the default constructor (do not remove).
     */
    public NoObjecionParticipantesVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    public void cargarDatos(Long idNoObjecion, Integer tipo) {
        FenixAMImpl fenixAMImpl = null;
        fenixAMImpl = (FenixAMImpl) this.getRootApplicationModule();
        FenixAdquisicionAMImpl fenixAdquisicionesAMImpl = (FenixAdquisicionAMImpl) fenixAMImpl.getFenixAdquisicionAM();
        Boolean aplicaParticipantes = Boolean.FALSE;
        Integer tipoRol = null;
        Boolean aplicaRol = Boolean.FALSE;
        Row adquisicionRow = null;
        aplicaParticipantes = fenixAdquisicionesAMImpl.getParticipantesNoObjecionVO().existenCampos(idNoObjecion);
        if (aplicaParticipantes) {
            tipoRol =
                fenixAdquisicionesAMImpl.getParticipantesNoObjecionVO().campo(idNoObjecion,
                                                                              FenixModelConstants.ROL_OFICIAL_ADQUISICIONES);
            if (null != tipoRol) {
                adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_OFICIAL_ADQUISICIONES }));
                if (null != adquisicionRow) {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                    if (tipoRol.compareTo(1) == 0) {
                        logger.warning("Participa oficial adquisciones");
                        adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                        //    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                    }
                    if (tipoRol.compareTo(2) == 0) {
                        logger.warning("Obligatorio oficial adquisciones");
                        adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                        adquisicionRow.setAttribute("Obligatorio", Boolean.TRUE);
                    }
                }
            } else {
                adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_OFICIAL_ADQUISICIONES }));
                if (null != adquisicionRow) {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                }
            }
            tipoRol =
                fenixAdquisicionesAMImpl.getParticipantesNoObjecionVO().campo(idNoObjecion,
                                                                              FenixModelConstants.ROL_ABOGADO);
            if (null != tipoRol) {
                adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_ABOGADO }));
                if (null != adquisicionRow) {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                    if (tipoRol.compareTo(1) == 0) {
                        adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                        logger.warning("participa abogado");
                        //    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                    }
                    if (tipoRol.compareTo(2) == 0) {
                        logger.warning("Obligatorio abogado");
                        adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                        adquisicionRow.setAttribute("Obligatorio", Boolean.TRUE);
                    }
                }
            } else {
                adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_ABOGADO }));
                if (null != adquisicionRow) {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                }
            }

            tipoRol =
                fenixAdquisicionesAMImpl.getParticipantesNoObjecionVO().campo(idNoObjecion,
                                                                              FenixModelConstants.ROL_ANALISTA_SUPERVISION);
            if (null != tipoRol) {
                adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_ANALISTA_SUPERVISION }));
                if (null != adquisicionRow) {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                    if (tipoRol.compareTo(1) == 0) {
                        adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                        logger.warning("participa analista");
                        //    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                    }
                    if (tipoRol.compareTo(2) == 0) {
                        adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                        adquisicionRow.setAttribute("Obligatorio", Boolean.TRUE);
                        logger.warning("Obligatorio  analista");
                    }
                }
            } else {
                adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_ANALISTA_SUPERVISION }));
                if (null != adquisicionRow) {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                }
            }
        } else {
            aplicaRol =
                fenixAdquisicionesAMImpl.getTreeParticipantesObjecionVO().existenCampo(FenixModelConstants.ROL_OFICIAL_ADQUISICIONES,
                                                                                       tipo);

            adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_OFICIAL_ADQUISICIONES }));
            if (null != adquisicionRow) {
                if (aplicaRol) {
                    logger.warning("Obligatorio ofical adquisciones");
                    adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.TRUE);
                } else {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                }
            }
            aplicaRol =
                fenixAdquisicionesAMImpl.getTreeParticipantesObjecionVO().existenCampo(FenixModelConstants.ROL_ABOGADO,
                                                                                       tipo);
            adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_ABOGADO }));
            if (null != adquisicionRow) {
                if (aplicaRol) {
                    adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.TRUE);
                    logger.warning("Obligatorio abogado");
                } else {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                }
            }
            aplicaRol =
                fenixAdquisicionesAMImpl.getTreeParticipantesObjecionVO().existenCampo(FenixModelConstants.ROL_ANALISTA_SUPERVISION,
                                                                                       tipo);

            adquisicionRow = getRow(new Key(new Object[] { FenixModelConstants.ROL_ANALISTA_SUPERVISION }));
            if (null != adquisicionRow) {
                if (aplicaRol) {
                    logger.warning("Obligatorio analista");
                    adquisicionRow.setAttribute("Participa", Boolean.TRUE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.TRUE);
                } else {
                    adquisicionRow.setAttribute("Participa", Boolean.FALSE);
                    adquisicionRow.setAttribute("Obligatorio", Boolean.FALSE);
                }
            }
        }

        logger.log(ADFLogger.WARNING, "idNoObjecion: " + idNoObjecion);
        logger.log(ADFLogger.WARNING, "tipo: " + tipo);
        if (null != adquisicionRow) {
            logger.log(ADFLogger.WARNING, "Participa: " + adquisicionRow.getAttribute("Participa"));
            logger.log(ADFLogger.WARNING, "Obligatorio: " + adquisicionRow.getAttribute("Obligatorio"));
        } else {
            logger.log(ADFLogger.WARNING, "adquisicionRow es nulo.");
        }
    }

    public void limpiarParticiapantes() {
        long rowCount = this.getEstimatedRowCount();
        for (int index = 0; index < rowCount; index++) {
            Row rowParticipante = this.getRowAtRangeIndex(index);

            if (null != rowParticipante) {
                rowParticipante.setAttribute("Participa", Boolean.FALSE);
                rowParticipante.setAttribute("Obligatorio", Boolean.FALSE);
            }
        }
    }

    public void cambiarEstadoParticipantes(int idRol, boolean participa, boolean obligatorio) {
        logger.log(ADFLogger.WARNING, "INTO cambiarEstadoParticipantes.");
        logger.log(ADFLogger.WARNING, "idRol:" + idRol);
        logger.log(ADFLogger.WARNING, "participa:" + participa);
        logger.log(ADFLogger.WARNING, "obligatorio:" + obligatorio);

        Row adquisicionRow = getRow(new Key(new Object[] { idRol }));

        adquisicionRow.setAttribute("Participa", participa);
        adquisicionRow.setAttribute("Obligatorio", obligatorio);
    }

    public Boolean guardarParticipantes(Long idNoObjecion) {
        logger.warning("Dentro de guardarParticipantes");
        logger.warning("idNoObjecion :" + idNoObjecion);

        Boolean resultado = Boolean.TRUE;
        Row[] participantes = null;
        Integer idTcaRolBpm = null;
        Boolean participa = null;
        Boolean obligatorio = null;
        Integer valorObligatorio = 0;
        FenixAMImpl fenixAMImpl = null;
        FenixAdquisicionAMImpl fenixAdquisicionesAMImpl = null;
        Boolean esInsercionValida = Boolean.FALSE;
        
        try {
            
            this.setRangeSize(-1);
            participantes = this.getAllRowsInRange();
            
            logger.warning("cantidad de participantes :"+participantes.length);
            
            fenixAMImpl = (FenixAMImpl) this.getRootApplicationModule();
            fenixAdquisicionesAMImpl = (FenixAdquisicionAMImpl) fenixAMImpl.getFenixAdquisicionAM();

            for (Row row : participantes) {

                idTcaRolBpm = null;
                participa = null;
                obligatorio = null;
                valorObligatorio = 0;

                idTcaRolBpm = (Integer) row.getAttribute("Id");
                participa = (Boolean) row.getAttribute("Participa");
                obligatorio = (Boolean) row.getAttribute("Obligatorio");

                logger.warning("idTcaRolBpm :" + idTcaRolBpm);
                logger.warning("participa :" + participa);
                logger.warning("obligatorio :" + obligatorio);
                
                logger.warning("Se aplican cambios para la incidencia FNXII-7399 el dia 08-03-2019");
                
                logger.warning("Se valida que participa y obligatorio no sean null," +
                    "se modificando atributos Participa y Obligatorio en VO con propiedad pasivate");

                if (obligatorio != null && obligatorio) {
                    
                    valorObligatorio = 1;
                    logger.warning("valorObligatorio :" + valorObligatorio);
                    
                } else {
                    
                    valorObligatorio = 0;
                    logger.warning("valorObligatorio :" + valorObligatorio);
                    
                }

                if (participa != null && participa) {
                    logger.warning("Se agrega participante,participa es true");
                    esInsercionValida = fenixAdquisicionesAMImpl.getParticipantesNoObjecionVO().agregarParticipante(idNoObjecion,
                                                                                                valorObligatorio,
                                                                                                idTcaRolBpm);
                    if(esInsercionValida){
                        logger.warning("participante se agrego correctamente en NO_OBJECION_PARTICIPANTE");
                    }else{
                        logger.severe("no se agrego el participante en NO_OBJECION_PARTICIPANTE"); 
                    }
                
                } else {
                    logger.warning("No se agrega participante,participa es false");
                }

            }

        } catch (Exception e) {
            logger.severe("Error en guardarParticipantes :" + e);
            resultado = Boolean.FALSE;
        }

        logger.warning("Fuera de guardarParticipantes,return:" + resultado);
        return resultado;
    }
}

