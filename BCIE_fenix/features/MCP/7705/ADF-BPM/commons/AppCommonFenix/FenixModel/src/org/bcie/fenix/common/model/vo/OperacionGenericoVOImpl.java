package org.bcie.fenix.common.model.vo;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 20 11:50:40 CDT 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OperacionGenericoVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public OperacionGenericoVOImpl() {
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }

    /**
     * Returns the variable value for operacion.
     * @return variable value for operacion
     */
    public Long getoperacion() {
        return (Long) ensureVariableManager().getVariableValue("operacion");
    }

    /**
     * Sets <code>value</code> for variable operacion.
     * @param value value to bind as operacion
     */
    public void setoperacion(Long value) {
        ensureVariableManager().setVariableValue("operacion", value);
    }

    /**
     * Returns the variable value for tipoOperacion.
     * @return variable value for tipoOperacion
     */
    public Integer gettipoMonto() {
        return (Integer) ensureVariableManager().getVariableValue("tipoMonto");
    }

    /**
     * Sets <code>value</code> for variable tipoOperacion.
     * @param value value to bind as tipoOperacion
     */
    public void settipoMonto(Integer value) {
        ensureVariableManager().setVariableValue("tipoMonto", value);
    }
}

