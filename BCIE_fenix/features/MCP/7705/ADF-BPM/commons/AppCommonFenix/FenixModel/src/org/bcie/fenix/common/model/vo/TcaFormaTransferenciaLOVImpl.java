package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TcaFormaTransferenciaLOV;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 31 12:16:22 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TcaFormaTransferenciaLOVImpl extends ViewObjectImpl implements TcaFormaTransferenciaLOV {
    private static ADFLogger logger = null;
    /**
     * This is the default constructor (do not remove).
     */
    public TcaFormaTransferenciaLOVImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(CondicionesFinancierasVOImpl.class);
        }
    }

    /**
     * Returns the variable value for pId.
     * @return variable value for pId
     */
    public Integer getpId() {
        return (Integer) ensureVariableManager().getVariableValue("pId");
    }

    /**
     * Sets <code>value</code> for variable pId.
     * @param value value to bind as pId
     */
    public void setpId(Integer value) {
        ensureVariableManager().setVariableValue("pId", value);
    }
    
    public String getNombreFormaTransferencia(Integer id) {
        logger.warning("*** Inicia metodo getNombreFormaTransferencia");
        
        String nombre = null;
        Row filaRecuperada = null;
        ViewCriteria criteria = null;
        
        if (id == null) {
            logger.warning("*** El parametro id es requerido para la busqueda");
            return null;
        } else {
            try {
                criteria = getViewCriteriaManager().getViewCriteria("TcaFormaTransferenciaLOVCriteria");
                criteria.ensureVariableManager().setVariableValue("pId", id);
                applyViewCriteria(criteria);
                executeQuery();
                
                if (getEstimatedRowCount() > 0) {
                    setCurrentRow(first());
                    filaRecuperada = getCurrentRow();
                    nombre = filaRecuperada.getAttribute("Descripcion").toString();
                    logger.warning("Nombre FormaTransferencia recuperado ->" + nombre);
                } else {
                    logger.warning("El row recuperado es Null no hay coincidencias en la busqueda");
                    getViewCriteriaManager().removeApplyViewCriteriaName("TcaFormaTransferenciaLOVCriteria");
                    executeQuery();
                }
            } catch (Exception e) {
                logger.log(ADFLogger.WARNING,
                           "*** Error al getNombreFormaTransferencia??->" + e.getClass() + ":" + e.getMessage());
            } finally {
                getViewCriteriaManager().removeApplyViewCriteriaName("TcaFormaTransferenciaLOVCriteria");
            }
        }
        logger.warning("*** Termina metodo getNombreFormaTransferencia");
        return nombre;
    }
    
    public String getCodigoExternoFormaTransferencia(Integer id) {
        logger.warning("Inicia metodo getCodigoExternoFormaTransferencia");
        
        String nombre = null;
        Row filaRecuperada = null;
        ViewCriteria criteria = null;
        
        if (id == null) {
            logger.warning("El parametro id es requerido para la busqueda");
            return null;
        } else {
            try {
                criteria = getViewCriteriaManager().getViewCriteria("TcaFormaTransferenciaLOVCriteria");
                criteria.ensureVariableManager().setVariableValue("pId", id);
                applyViewCriteria(criteria);
                executeQuery();
                
                if (getEstimatedRowCount() > 0) {
                    setCurrentRow(first());
                    filaRecuperada = getCurrentRow();
                    nombre = filaRecuperada.getAttribute("CodExterno").toString();
                    logger.warning("Codigo externo FormaTransferencia recuperado ->" + nombre);
                } else {
                    logger.warning("El row recuperado es Null no hay coincidencias en la busqueda");
                    getViewCriteriaManager().removeApplyViewCriteriaName("TcaFormaTransferenciaLOVCriteria");
                    executeQuery();
                }
            } catch (Exception e) {
                logger.log(ADFLogger.WARNING,
                           "Error al getNombreFormaTransferencia: ", e);
            } finally {
                getViewCriteriaManager().removeApplyViewCriteriaName("TcaFormaTransferenciaLOVCriteria");
            }
        }
        logger.warning("Termina metodo getNombreFormaTransferencia");
        return nombre;
    }
}

