package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ConsultarSolicitudDesembolsoVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 07 10:50:00 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultarSolicitudDesembolsoVOImpl extends ViewObjectImpl implements ConsultarSolicitudDesembolsoVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public ConsultarSolicitudDesembolsoVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public Integer obtenerEstadoSolicitudPorId(Long idSolicitud){
        logger.warning("Inicia metodo obtenerRegistroSolicitudPorId");
        Integer idEstadoSolicitud = null;
        Row row = null;
        ViewCriteria criteria = null;
        
        if(null == idSolicitud){
            logger.warning("Parametro IdSolicitud requerido es NULL.");
            return idEstadoSolicitud;
        }
        
        try{  
            logger.warning("Ejecutando criteria de busqueda de contrato.");
            criteria = this.getViewCriteriaManager().getViewCriteria("ConsultarSolicitudPorIdSolicitudVC");
            criteria.ensureVariableManager().setVariableValue("pIdSolicitud", idSolicitud);
            this.applyViewCriteria(criteria);
            this.executeQuery();
        
            logger.warning("Registros de contratos encontrados: " + getEstimatedRowCount());
            if(getEstimatedRowCount() > 0){
                row = first();
            }
        }catch(Exception e){
            logger.warning("ERROR al ejecutar el crietria ContratoDesembolsoVOCriteria.", e);
        }finally{
            //Eliminamos el ViewCriteria
            this.getViewCriteriaManager().removeApplyViewCriteriaName("ConsultarSolicitudPorIdSolicitudVC");
        }
        
        if(null != row){
            logger.warning("Recuperando estado de la solicitud.");
            if(null != row.getAttribute("IdTcaEstado")){
                try{
                    idEstadoSolicitud = (Integer) row.getAttribute("IdTcaEstado");
                }catch(Exception e){
                    logger.warning("ERROR a recuperar IdTcaEstado.", e);
                }
            }else{
                logger.warning("Atributo IdTcaEstado es NULL.");
            }
        }else{
            logger.warning("El row es NULL. No se pudo recuperar el estado de la solicitud.");
        }
        
        logger.warning("IdEstadoSOlciitud recuperado: " + idEstadoSolicitud);
        logger.warning("Termina metodo obtenerRegistroSolicitudPorId");
        return idEstadoSolicitud;
    }
    
    /**
     * Returns the variable value for pIdSolicitud.
     * @return variable value for pIdSolicitud
     */
    public Long getpIdSolicitud() {
        return (Long) ensureVariableManager().getVariableValue("pIdSolicitud");
    }

    /**
     * Sets <code>value</code> for variable pIdSolicitud.
     * @param value value to bind as pIdSolicitud
     */
    public void setpIdSolicitud(Long value) {
        ensureVariableManager().setVariableValue("pIdSolicitud", value);
    }
}
