package org.bcie.fenix.common.model.vo;

import java.util.HashMap;
import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ConsultarProductoOperacion;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 30 17:43:07 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultarProductoOperacionImpl extends ViewObjectImpl implements ConsultarProductoOperacion {
    
    private static ADFLogger logger = null;
    /**
     * This is the default constructor (do not remove).
     */
    public ConsultarProductoOperacionImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for valIdOperacion.
     * @return bind variable value for valIdOperacion
     */
    public Long getvalIdOperacion() {
        return (Long) getNamedWhereClauseParam("valIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable valIdOperacion.
     * @param value value to bind as valIdOperacion
     */
    public void setvalIdOperacion(Long value) {
        logger.warning("Entra idOperacion: " + value);
        if (value != null) {
            setNamedWhereClauseParam("valIdOperacion", value);
            this.executeQuery();
        }
    }
    
    public Integer obtenerProductoOperacion(Long idOperacion) {
        logger.warning("inside obtenerProductoOperacion.");
        double TInicio, TFin, tiempo; //Variables para determinar el tiempo de ejecución
        TInicio = System.currentTimeMillis(); //Tomamos la hora en que inicio el algoritmo y la almacenamos en la variable inicio
        Integer idProducto = null;
        
        setvalIdOperacion(idOperacion);
        
        if(this.getEstimatedRowCount() > 0){
            
            Row rowConsultarProductoOperacion = getRowAtRangeIndex(0);
            
            idProducto = (Integer) rowConsultarProductoOperacion.getAttribute("IdProducto");
            
            logger.warning("idProducto: " + idProducto);
        } else{
            logger.warning("El row es NULL");
        }
        
        TFin = System.currentTimeMillis(); //Tomamos la hora en que finalizó el algoritmo y la almacenamos en la variable T
        tiempo = (TFin - TInicio)/1000; //Calculamos los milisegundos de diferencia            
        logger.warning("*Inf, Termina metodo obtenerProductoOperacion con una duracion de: "+tiempo+" segundos");
        return idProducto;
    }
}

