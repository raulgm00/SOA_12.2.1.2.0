package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TcaComisionLOV;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 30 19:34:56 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TcaComisionLOVImpl extends ViewObjectImpl implements TcaComisionLOV {
    
    /**
     * Log de la aplicacion
     */
    private static ADFLogger logger = ADFLogger.createADFLogger(TcaComisionLOVImpl.class);
    
    /**
     * Define nombre de view criteria para buscar registro de TCA Comision por Id
     */
    public static final String BUSCAR_POR_ID_VC = "BuscarTcaComisionById";
    
    /**
     * This is the default constructor (do not remove).
     */
    public TcaComisionLOVImpl() {
    }
    
    /**
     * Ejecuta la búsqueda de TcaComision por Id aplicando View Criteria
     * @param id contiene clave primaria del registro
     */
    public void buscarTcaComisionPorId(Integer id){
        
        logger.entering(TcaComisionLOVImpl.class.getName(),
                        "buscarTcaComisionPorId",
                        id);
        logger.log(ADFLogger.WARNING, "Valor idtcaComision..." + id);
        
        if(id == null){
            return;
        }
        
        //Asigna valor del parametro
        setpId(id);
        
        ViewCriteria vc = null;
        try{
            vc = getViewCriteria(BUSCAR_POR_ID_VC);
            applyViewCriteria(vc);
            executeQuery();
            setCurrentRow(first());
        }catch(Exception e){
            logger.severe("Error en la ejecucion del view criteria: " + BUSCAR_POR_ID_VC, e);
        }
    }

    /**
     * Returns the variable value for pId.
     * @return variable value for pId
     */
    public Integer getpId() {
        return (Integer) ensureVariableManager().getVariableValue("pId");
    }

    /**
     * Sets <code>value</code> for variable pId.
     * @param value value to bind as pId
     */
    public void setpId(Integer value) {
        ensureVariableManager().setVariableValue("pId", value);
    }
}

