package org.bcie.fenix.common.model.vo;import oracle.adf.share.logging.ADFLogger;import oracle.jbo.Key;import oracle.jbo.Row;import oracle.jbo.ViewCriteria;import oracle.jbo.server.ViewObjectImpl;import org.bcie.fenix.common.model.vo.common.AdjuntoDocumentoVO;// ---------------------------------------------------------------------// ---    File generated by Oracle ADF Business Components Design Time.// ---    Mon Oct 24 16:40:10 CDT 2016// ---    Custom code may be added to this class.// ---    Warning: Do not modify method signatures of generated methods.// ---------------------------------------------------------------------public class AdjuntoDocumentoVOImpl extends ViewObjectImpl implements AdjuntoDocumentoVO {    private static ADFLogger logger = null;    /**     * This is the default constructor (do not remove).     */    public AdjuntoDocumentoVOImpl() {        if (logger == null) {            logger = ADFLogger.createADFLogger(this.getClass());        }    }        public Boolean getAdjuntoDocumento(Long idDocumento){        Boolean error = Boolean.TRUE;        logger.warning("INSIDE _ getAdjuntoDocumento _");        Row[] row = null;        ViewCriteria criteria = null;        if(null == idDocumento){            logger.warning("Parametro idDocumento requerido es NULL");            return error;        }        try{            criteria = this.getViewCriteriaManager().getViewCriteria("AdjuntoDocumentoCriteria");            criteria.ensureVariableManager().setVariableValue("pIdDocumento", idDocumento);            this.applyViewCriteria(criteria);            this.executeQuery();            row = this.getAllRowsInRange();            if(row != null){                if(row.length > 0){                    error = Boolean.FALSE;                  }else{                    error = Boolean.TRUE;                    logger.log(ADFLogger.WARNING, "NULL ADJUNTO DOCUMENTO");                                    }            }else{                logger.log(ADFLogger.WARNING, "NULL getAdjuntoDocumento");            }        }catch(Exception e){            logger.log(ADFLogger.WARNING, "Error en getAdjuntoDocumento" + e.getClass() +                        ":" + e.getMessage());        }        this.getViewCriteriaManager().removeApplyViewCriteriaName("AdjuntoDocumentoCriteria");        return error;    }    /**     * Returns the variable value for pIdDocumento.     * @return variable value for pIdDocumento     */    public Long getpIdDocumento() {        return (Long) ensureVariableManager().getVariableValue("pIdDocumento");    }    /**     * Sets <code>value</code> for variable pIdDocumento.     * @param value value to bind as pIdDocumento     */    public void setpIdDocumento(Long value) {        ensureVariableManager().setVariableValue("pIdDocumento", value);    }}