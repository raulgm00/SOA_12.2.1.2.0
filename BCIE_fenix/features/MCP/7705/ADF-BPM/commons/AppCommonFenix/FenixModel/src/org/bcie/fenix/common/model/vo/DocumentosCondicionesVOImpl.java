package org.bcie.fenix.common.model.vo;

import com.tangosol.util.Base;

import java.sql.Timestamp;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.vo.common.DocumentosCondicionesVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 19 17:53:29 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocumentosCondicionesVOImpl extends ViewObjectImpl implements DocumentosCondicionesVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public DocumentosCondicionesVOImpl() {
        
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for varIdOperacion.
     * @return bind variable value for varIdOperacion
     */
    public Number getvarIdOperacion() {
        return (Number) getNamedWhereClauseParam("varIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable varIdOperacion.
     * @param value value to bind as varIdOperacion
     */
    public void setvarIdOperacion(Number value) {
        setNamedWhereClauseParam("varIdOperacion", value);
    }
    
    /**
     * Returns the bind variable value for varIdCondicion.
     * @return bind variable value for varIdCondicion
     */
    public Long getvarIdCondicion() {
        return (Long) getNamedWhereClauseParam("varIdCondicion");
    }

    /**
     * Sets <code>value</code> for bind variable varIdCondicion.
     * @param value value to bind as varIdCondicion
     */
    public void setvarIdCondicion(Long value) {
        setNamedWhereClauseParam("varIdCondicion", value);
    }
    
    public void setvarIdOperacionIdCondicion(Number idOperacion, Long idCondicion, Long idAgrupador) {
        logger.warning("Inside setvarIdOperacionIdCondicion.");
        logger.warning("idOperacion : " + idOperacion);
        logger.warning("idCondicion : " + idCondicion);
        logger.warning("idAgrupador : " + idAgrupador);
        setvarIdOperacion(idOperacion);
        setvarIdCondicion(idCondicion);
        setpIdAgrupador(idAgrupador);
    }
    
    public void agregarEvidencias(Long idCondicion, Long idAgrupador) {
        logger.log(ADFLogger.TRACE, "Inside agregarEvidencias.");
        FenixAMImpl fenixAM = null;
        // Crea una instancia del AM
        fenixAM = (FenixAMImpl)this.getRootApplicationModule();
        // Obtenemos las evidencias seleccionadas 
        Row[] rowsEvidenciasAgregadas = this.getFilteredRows("Seleccionar",Boolean.TRUE);
        for (Row rowEvidenciaAgregada : rowsEvidenciasAgregadas) {
            // validar "idDocumento" y "idCondicion" no sean null
            if(rowEvidenciaAgregada.getAttribute("IdDocumento") != null && idCondicion != null) 
            {
                Long idDocumento = (Long)rowEvidenciaAgregada.getAttribute("IdDocumento");
                // Invocar el metodo "agregarTreEvidenciaCondicion" del TreEvidenciaCondicionVOImpl
                // Agregar los rows a "agregarTreEvidenciaCondicion"
                fenixAM.getTreEvidenciaCondicionVO().agregarTreEvidenciaCondicion(idCondicion, idDocumento,idAgrupador);
            }
        }
    }


    /**
     * Returns the bind variable value for pIdAgrupador.
     * @return bind variable value for pIdAgrupador
     */
    public Long getpIdAgrupador() {
        return (Long) getNamedWhereClauseParam("pIdAgrupador");
    }

    /**
     * Sets <code>value</code> for bind variable pIdAgrupador.
     * @param value value to bind as pIdAgrupador
     */
    public void setpIdAgrupador(Long value) {
        setNamedWhereClauseParam("pIdAgrupador", value);
    }
}

