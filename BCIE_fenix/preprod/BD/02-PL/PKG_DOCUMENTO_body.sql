create or replace PACKAGE BODY PKG_DOCUMENTO
IS
PROCEDURE SP_UPSERT_TBI_DOCUMENTO(
   T_TBI_DOCUMENTO                 IN T_BITACORA_DOCUMENTO,
   ID_BITACORA                  OUT NUMBER,
   P_CODIGO_RES                 OUT NUMBER,
   P_TIPO_RES                   OUT NUMBER,
   P_MENSAJE                    OUT VARCHAR2)
  AS
  V_ACTIVO   NUMBER; 
BEGIN


IF T_TBI_DOCUMENTO.ID IS NULL THEN

SELECT COUNT(*) INTO V_ACTIVO  FROM TBI_DOCUMENTO WHERE ID_DOCUMENTO = T_TBI_DOCUMENTO.ID_DOCUMENTO;

IF V_ACTIVO >0 THEN
     UPDATE TBI_DOCUMENTO SET ES_REG_ACTIVO = 0  WHERE (ID_DOCUMENTO = T_TBI_DOCUMENTO.ID_DOCUMENTO);
END IF;

  INSERT INTO TBI_DOCUMENTO(ID,ID_DOCUMENTO,
  ESTADO,
  NUM_INSTANCIA,
  SE_HA_NOTIFICADO,
  LOGIN_USUARIO,
  NOMBRE_USUARIO,
  ID_TCA_TAREA_BPM,
  BAN_ESTATUS,
  FECHA_REGISTRO,
  DESCRIPCION,
  ES_REG_ACTIVO) 
  VALUES
  (TBI_DOCUMENTO_SEQ.NEXTVAL,
  T_TBI_DOCUMENTO.ID_DOCUMENTO,
  T_TBI_DOCUMENTO.ESTADO,
  T_TBI_DOCUMENTO.NUM_INSTANCIA,
  T_TBI_DOCUMENTO.SE_HA_NOTIFICADO,
  T_TBI_DOCUMENTO.LOGIN_USUARIO,
  T_TBI_DOCUMENTO.NOMBRE_USUARIO,
  T_TBI_DOCUMENTO.ID_TCA_TAREA_BPM,
  T_TBI_DOCUMENTO.BAN_ESTATUS,
  T_TBI_DOCUMENTO.FECHA_REGISTRO,
  T_TBI_DOCUMENTO.DESCRIPCION,
  T_TBI_DOCUMENTO.ES_REG_ACTIVO)RETURNING ID INTO ID_BITACORA;
  
ELSE 
  UPDATE TBI_DOCUMENTO SET ESTADO = T_TBI_DOCUMENTO.ESTADO,
         DESCRIPCION = T_TBI_DOCUMENTO.DESCRIPCION, 
         SE_HA_NOTIFICADO = T_TBI_DOCUMENTO.SE_HA_NOTIFICADO
  WHERE (ID = T_TBI_DOCUMENTO.ID);
END IF;

P_CODIGO_RES := 0;
P_TIPO_RES := 0;
P_MENSAJE  := 'Procedimiento  ejecutado  correctamente !';
  
EXCEPTION WHEN OTHERS THEN
  
P_CODIGO_RES := SQLCODE;
P_TIPO_RES := 1;
P_MENSAJE := SQLERRM;
  
END SP_UPSERT_TBI_DOCUMENTO;
  
END PKG_DOCUMENTO;