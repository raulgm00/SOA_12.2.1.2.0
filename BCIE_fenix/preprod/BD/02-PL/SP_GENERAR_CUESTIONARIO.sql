create or replace 
PROCEDURE SP_GENERA_CUESTIONARIO (
   NUM_OPERACION   IN     INTEGER,
   NUM_PRODUCTO    IN     INTEGER, 
REGENERAR IN NUMBER ,
   RECORDSET          OUT SYS_REFCURSOR)
AS
   CURSOR CUR_PREGUNTAS
   IS
          SELECT a.ID_PREGUNTA
            FROM PREGUNTA a INNER JOIN CUESTIONARIO b ON(b.ID_CUESTIONARIO=a.ID_CUESTIONARIO)
           WHERE b.ID_OPERACION = NUM_OPERACION
      FOR UPDATE OF A.ID_PREGUNTA;

   ID_VERSION_VARIABLE   INT;
   SECTOR                INT;
   TIPO_GARANTIA         INT;
   TIPO_INSTITUCION      INT;
   ID_ROL_OMITIR         INT;
   NUMERO_REGISTROS      INT;
   NUMERO_PREGUNTAS      INT;
   num_cliente           INT;
   res_delete            NUMBER;
   actualizarOperacion   INT;
   v_Regenerar number;

   cnumber               NUMBER;
   V_ID_CUESTIONARIO     NUMBER;
   cant number;
BEGIN
 IF REGENERAR=1 THEN
--TOMA EL ID DEL CUESTIONARIO ACTIVO
SELECT ID_CUESTIONARIO INTO v_Regenerar  FROM CUESTIONARIO WHERE BAN_ESTATUS=1 AND ID_OPERACION=NUM_OPERACION;



      END IF;

  -- INACTIVAR EL CUESTIONARIO ACTUAL
      UPDATE CUESTIONARIO SET BAN_ESTATUS=0 WHERE ID_OPERACION=NUM_OPERACION;
      
   --OBTENER LA VERSION ACTUAL DEL CUESTIONARIO
   SELECT ID INTO ID_VERSION_VARIABLE FROM TCA_VERSION_CUESTIONARIO WHERE BAN_ESTATUS=1;
   
   --ASIGNANDO TIPO DE INSTITUCION
   SELECT B.TIPO_INSTITUCION, B.SECTOR, B.ID_CLIENTE, NVL(A.TIPO_GARANTIA,0)
     INTO TIPO_INSTITUCION, SECTOR, num_cliente, TIPO_GARANTIA
     FROM    OPERACION A
          INNER JOIN
             CLIENTES B
          ON A.ID_CLIENTE = B.ID_CLIENTE AND A.ID_OPERACION = NUM_OPERACION;
          
    --ASIGNANDO ROL PARA INSTITUCION 4 Y SECTOR 1
    SELECT COUNT(ID_ROL_BPM) INTO NUMERO_REGISTROS  FROM TCO_PREGUNTA_OMITIR_ROL 
          WHERE ID_SECTOR_INSTITUCIONAL=SECTOR AND ID_TIPO_INSTITUCION=TIPO_INSTITUCION AND BAN_ESTATUS=1 AND ROWNUM = 1
          ORDER BY ID ASC;
          
    IF (NUMERO_REGISTROS>0)
    THEN
      SELECT ID_ROL_BPM INTO ID_ROL_OMITIR  FROM TCO_PREGUNTA_OMITIR_ROL 
          WHERE ID_SECTOR_INSTITUCIONAL=SECTOR AND ID_TIPO_INSTITUCION=TIPO_INSTITUCION AND BAN_ESTATUS=1 AND ROWNUM = 1
          ORDER BY ID ASC;
      ELSE
        ID_ROL_OMITIR := 0;
    END IF;

    --INSERTANDO EN CUESTIONARIO
  SELECT CUESTIONARIO_SEQ.NEXTVAL INTO V_ID_CUESTIONARIO FROM DUAL;
    --
   INSERT INTO CUESTIONARIO (ID_CUESTIONARIO, ID_OPERACION, FECHA_REGISTRO, BAN_ESTATUS, ID_VERSION_CUESTIONARIO)
  VALUES(V_ID_CUESTIONARIO, NUM_OPERACION, CURRENT_DATE, 1, ID_VERSION_VARIABLE);

   -- INSERTAR PREGUNTAS
   INSERT INTO PREGUNTA (PREGUNTA,
                            RESPUESTA,
                            JUSTIFICACION,
                            EVIDENCIA,
                            USUARIO,
                            FECHA_REGISTRO,
                            ID_CAT_PREGUNTA,
                            ID_CUESTIONARIO) 
           SELECT A.PREGUNTA,
                  '' RESPUESTA,
                  '' JUSTIFICACION,
                  num_cliente AS EVIDENCIA,
                  E.DESCRIPCION USUARIO,
                  SYSDATE FECHA_REGISTRO,
                  A.ID,
                  V_ID_CUESTIONARIO
            FROM CAT_PREGUNTAS A
            INNER JOIN TRE_PREGUNTA_VERSION PV ON PV.ID_PREGUNTA=A.ID
            INNER JOIN PREGUNTA_SECTOR_GARANTIA PG ON PG.ID_PREGUNTA=A.ID
            INNER JOIN TRE_PREGUNTA_TIPO_INSTITUCION PI ON PI.ID_PREGUNTA=A.ID
            INNER JOIN PREGUNTA_PRODUCTO B ON A.ID = B.ID_PREGUNTA
            INNER JOIN TCA_ROL_BPM E ON A.ID_RESPONSABLE=E.ID
            WHERE PV.ID_VERSION=ID_VERSION_VARIABLE
                  AND B.ID_PRODUCTO = NUM_PRODUCTO
                  AND PI.ID_TIPO_INSTITUCION=TIPO_INSTITUCION
                  AND PG.ID_SECTOR=SECTOR
                  AND NVL(PG.ID_GARANTIA,0) = TIPO_GARANTIA
                  AND NVL (E.ID, 0) <> COALESCE (ID_ROL_OMITIR,NVL (E.ID, 0))
                  AND A.STATUS = '1'
        ORDER BY ID_PRINCIPIO, ID_CRITERIO, NUM_ORDEN;
        COMMIT;
        
IF REGENERAR=1 THEN 
DBMS_OUTPUT.PUT_LINE('DENTRO DE UPDATE PREGUNTA');
UPDATE PREGUNTA  PA
SET (RESPUESTA, JUSTIFICACION) =( SELECT  RESPUESTA, JUSTIFICACION FROM PREGUNTA PR  
                                                            WHERE PR.ID_CUESTIONARIO = v_Regenerar
                                                            AND PR.PREGUNTA =PA.PREGUNTA)
WHERE ID_CUESTIONARIO = V_ID_CUESTIONARIO;


COMMIT;


END IF;

   --RETORNAR PREGUNTAS

   OPEN RECORDSET FOR
      SELECT A.ID_PREGUNTA ID, A.PREGUNTA PREGUNTA, A.USUARIO RESPONSABLE --, A.PRINCIPIO PRINCIPIO, A.CRITERIO CRITERIO
        FROM    PREGUNTA A
             INNER JOIN
                CUESTIONARIO B
             ON (    A.ID_CUESTIONARIO = B.ID_CUESTIONARIO
                 AND B.ID_OPERACION = NUM_OPERACION);
END SP_GENERA_CUESTIONARIO;
/