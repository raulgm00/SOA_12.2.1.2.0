package org.bcie.fenix.common.model.vo;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 09 11:58:19 COT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CFandCC1VOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public CFandCC1VOImpl() {
    }

    /**
     * Returns the bind variable value for ID_CONTRATO_DESEMBOLSO.
     * @return bind variable value for ID_CONTRATO_DESEMBOLSO
     */
    public String getID_CONTRATO_DESEMBOLSO() {
        return (String) getNamedWhereClauseParam("ID_CONTRATO_DESEMBOLSO");
    }

    /**
     * Sets <code>value</code> for bind variable ID_CONTRATO_DESEMBOLSO.
     * @param value value to bind as ID_CONTRATO_DESEMBOLSO
     */
    public void setID_CONTRATO_DESEMBOLSO(String value) {
        setNamedWhereClauseParam("ID_CONTRATO_DESEMBOLSO", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }
    
    public Row llenarCFandCC1(String idContratoDesembolso) {
        //--- llenar nuevo VOs
        Row row = null;
        System.out.println("***obteniendo llenar CFandCC1VO *****");
        setNamedWhereClauseParam("ID_CONTRATO_DESEMBOLSO", idContratoDesembolso);
        executeQuery();
        System.out.println("voCFandCC1.getEstimatedRowCount(): " + getEstimatedRowCount());
        if (getEstimatedRowCount() > 0) {
            setCurrentRow(first());
        }
        RowSetIterator rowiter = this.createRowSetIterator(null);
        rowiter.reset();
        while (rowiter.hasNext()) {
            CFandCC1VORowImpl rowCFandCC1VO = (CFandCC1VORowImpl) rowiter.next();
            row = rowCFandCC1VO;
        }
        rowiter.closeRowSetIterator();
        if (row != null) {
            String idCalendario = null;
            try {
                idCalendario = String.valueOf(row.getAttribute("Id"));
            } catch (Exception e) {
                System.out.println("rowCFandCC1VO sin registros" + e);
            }

            System.out.println("Se encontro Registro de rowCFandCC1VOImpl. idCalendario: " + idCalendario);
        }
        //---------------------
        return row;
    }
}

