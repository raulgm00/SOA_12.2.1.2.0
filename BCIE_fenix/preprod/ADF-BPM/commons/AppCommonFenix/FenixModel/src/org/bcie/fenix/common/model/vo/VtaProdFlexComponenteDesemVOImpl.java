package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.VtaProdFlexComponenteDesemVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 01 18:31:17 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VtaProdFlexComponenteDesemVOImpl extends ViewObjectImpl implements VtaProdFlexComponenteDesemVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public VtaProdFlexComponenteDesemVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public Boolean consultarSpreadVariableById(String id){
        
        logger.log(ADFLogger.WARNING, "INTO  consultarSpreadVariableById : ");
        Integer contador = 0;
        Boolean seCuentaConSpreadVariable = Boolean.FALSE;
        String spreadVariable = "SPREAD_VARIABLE";
        
        try {
            if(id == null)
            {
                seCuentaConSpreadVariable = Boolean.FALSE;
            }
            else{
                ViewCriteria criteria =this.getViewCriteriaManager().getViewCriteria("VtaProdFlexComponenteDesemByIdVOCriteria");
                criteria.ensureVariableManager().setVariableValue("varId", id);
                this.applyViewCriteria(criteria);
                this.executeQuery();
                
                RowSetIterator rowsVtaProdFlexComponenteDesemVo = createRowSetIterator(null);
                String codigoComponente = null;
                rowsVtaProdFlexComponenteDesemVo.reset();
                    while (rowsVtaProdFlexComponenteDesemVo.hasNext()) {
                        VtaProdFlexComponenteDesemVORowImpl rowL = (VtaProdFlexComponenteDesemVORowImpl) rowsVtaProdFlexComponenteDesemVo.next();
                        try{
                            codigoComponente = (String) rowL.getAttribute("CodigoComponente");
                        }catch(Exception e){
                            logger.warning("ERROR al recuperar atributo CodigoComponente: ", e);
                        }
                        
                        if(spreadVariable.equals(codigoComponente)){
                            seCuentaConSpreadVariable = Boolean.TRUE;
                        }
                        contador++;
                    }
                logger.warning("Numero de rows: " + contador);
                if(seCuentaConSpreadVariable){
                    logger.warning("Se encuentra Spread Variable se retorna " + seCuentaConSpreadVariable);
                }
                else{
                    logger.warning("No se encuentra Spread Variable se retorna " + seCuentaConSpreadVariable);
                }
                /*
                try{
                    if(contador>0)
                        seCuentaConSpreadVariable = Boolean.TRUE;
                    else
                        seCuentaConSpreadVariable = Boolean.FALSE;
                }catch(Exception e){
                    logger.warning("Numero de rows: vacío");
                }
                */
                rowsVtaProdFlexComponenteDesemVo.closeRowSetIterator();
                } 
            }
        catch (Exception ex) {
            logger.log(ADFLogger.ERROR, "Error en consultarSpreadVariableById ", ex);
        } finally {
            //This takes care of removing the applied VC.
            this.getViewCriteriaManager().removeApplyViewCriteriaName("VtaProdFlexComponenteDesemByIdVOCriteria");
        }
        
        return seCuentaConSpreadVariable;
    }

    /**
     * Returns the variable value for varId.
     * @return variable value for varId
     */
    public String getvarId() {
        return (String) ensureVariableManager().getVariableValue("varId");
    }

    /**
     * Sets <code>value</code> for variable varId.
     * @param value value to bind as varId
     */
    public void setvarId(String value) {
        ensureVariableManager().setVariableValue("varId", value);
    }
}

