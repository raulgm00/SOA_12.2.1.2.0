package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ResponsableVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 27 17:26:44 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ResponsableVOImpl extends ViewObjectImpl implements ResponsableVO {
    
    private static ADFLogger logger = null;
    /**
     * This is the default constructor (do not remove).
     */
    public ResponsableVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }


    /**
     * Returns the bind variable value for pIdOperacion.
     * @return bind variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) getNamedWhereClauseParam("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        setNamedWhereClauseParam("pIdOperacion", value);
    }
    
    public Boolean seObtieneResponsable(Long operacion, String usuario){
        Boolean resultado=Boolean.FALSE;
        String usuarioActual=null;
        logger.warning("Entra validar responsable");
        logger.warning("operacion "+ operacion);
        logger.warning("Responsable "+ usuario);
        if(null!=usuario && null!=operacion){
                setpIdOperacion(operacion);
                executeQuery();
                logger.warning("Registros obtenidos "+ getEstimatedRowCount());
                if(getEstimatedRowCount()>0){
                    Row row=getRowAtRangeIndex(0);
                    if(null!= row){
                            logger.warning("usuario obtenido "+ (String)row.getAttribute("Usuario"));
                        if(null!=(String)row.getAttribute("Usuario")){
                                usuarioActual=(String)row.getAttribute("Usuario");
                            if(usuarioActual.equalsIgnoreCase(usuario)){
                                resultado=Boolean.TRUE;
                                }
                            }
                        }
                    }
            }
            logger.warning("resultado "+ resultado);
        return resultado;
        }

}

