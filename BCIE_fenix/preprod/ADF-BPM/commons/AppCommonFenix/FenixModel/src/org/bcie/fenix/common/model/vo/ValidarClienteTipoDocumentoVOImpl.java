package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ValidarClienteTipoDocumentoVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 21 17:26:37 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ValidarClienteTipoDocumentoVOImpl extends ViewObjectImpl implements ValidarClienteTipoDocumentoVO {
    /**
     * This is the default constructor (do not remove).
     */
    
    private static ADFLogger logger = null;
    
    public ValidarClienteTipoDocumentoVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    /**
     * Validar si existen documentos en base al idCliente y idTipoDocumento
     * @param Long idCliente, Integer idTipoDocumento 
     * @since 21/07/2016
     * @by Gabriel Niño Rosales
     */
    
    public Boolean validarDocumentoCliente(Long idCliente, Integer idTipoDocumento){
        Boolean resultado = null;
        try{
            ViewCriteria viewCriteria =this.getViewCriteriaManager().getViewCriteria("ValidarClienteTipoDocumentoVOCriteria");
            viewCriteria.ensureVariableManager().setVariableValue("IdClienteDocumento", idCliente);
            viewCriteria.ensureVariableManager().setVariableValue("IdTipoDocumentoCliente", idTipoDocumento);
            this.applyViewCriteria(viewCriteria);
            this.executeQuery();
            resultado = (this.getEstimatedRowCount() > 0) ? Boolean.TRUE : Boolean.FALSE;
        }catch(Exception ex){
            logger.log(ADFLogger.ERROR, "Error en validarDocumentoCliente " + ex.getClass() + ":" + ex.getMessage());
            return Boolean.FALSE;
        }finally{
            //This takes care of removing the applied VC.
            this.getViewCriteriaManager().removeApplyViewCriteriaName("ValidarClienteTipoDocumentoVOCriteria");
        }
        return resultado;
    }
    
    /**
     * Validar si existen documentos en base al idCliente,idTipoDocumento y numeroSerieDocumento
     * @param Long idCliente,Integer idTipoDocumento, oracle.jbo.domain.Number numeroSerieDocumento
     * @since 21/07/2016
     * @by Gabriel Niño Rosales
     */
    
    public Boolean validarDocumentoClientePorNumeroSerieDocumento(Long idCliente, Integer idTipoDocumento,
                                                    oracle.jbo.domain.Number numeroSerieDocumento){
        Boolean resultado = null;
        try{
            ViewCriteria viewCriteria =this.getViewCriteriaManager().getViewCriteria("ValidarClienteTipoDocumentoNumSerieVOCriteria");
            viewCriteria.ensureVariableManager().setVariableValue("IdClienteDocumento", idCliente);
            viewCriteria.ensureVariableManager().setVariableValue("IdTipoDocumentoCliente", idTipoDocumento);
            viewCriteria.ensureVariableManager().setVariableValue("numeroSerieDocumento", numeroSerieDocumento);
            this.applyViewCriteria(viewCriteria);
            this.executeQuery();
            resultado = (this.getEstimatedRowCount() > 0) ? Boolean.TRUE : Boolean.FALSE;
        }catch(Exception ex){
            logger.log(ADFLogger.ERROR, "Error en validarDocumentoClientePorNumeroSerieDocumento " + ex.getClass() + ":" + ex.getMessage());
            return Boolean.FALSE;
        }finally{
            //This takes care of removing the applied VC.
            this.getViewCriteriaManager().removeApplyViewCriteriaName("ValidarClienteTipoDocumentoNumSerieVOCriteria");
        }
        return resultado;
    }
    
    public Boolean validarDocumentoClientePorNumeroSerieTarea(Long idCliente, Integer idTipoDocumento,
                                                    oracle.jbo.domain.Number numeroSerieDocumento, Integer idTareaBPM){
        logger.warning("IDBPMTAREA: " + idTareaBPM);
        Boolean resultado = null;
        try{
            ViewCriteria viewCriteria =this.getViewCriteriaManager().getViewCriteria("ValidarClienteTipoDocumentoNumSerieIdTareaVC");
            viewCriteria.ensureVariableManager().setVariableValue("IdClienteDocumento", idCliente);
            viewCriteria.ensureVariableManager().setVariableValue("IdTipoDocumentoCliente", idTipoDocumento);
            viewCriteria.ensureVariableManager().setVariableValue("numeroSerieDocumento", numeroSerieDocumento);
            viewCriteria.ensureVariableManager().setVariableValue("idTareaBPMCliente", idTareaBPM);
            this.applyViewCriteria(viewCriteria);
            this.executeQuery();
            resultado = (this.getEstimatedRowCount() > 0) ? Boolean.TRUE : Boolean.FALSE;
        }catch(Exception ex){
            logger.log(ADFLogger.ERROR, "Error en validarDocumentoClientePorNumeroSerieTarea ", ex);
            return Boolean.FALSE;
        }finally{
            //This takes care of removing the applied VC.
            this.getViewCriteriaManager().removeApplyViewCriteriaName("ValidarClienteTipoDocumentoNumSerieIdTareaVC");
        }
        return resultado;
    }

    /**
     * Returns the variable value for IdClienteDocumento.
     * @return variable value for IdClienteDocumento
     */
    public Long getIdClienteDocumento() {
        return (Long) ensureVariableManager().getVariableValue("IdClienteDocumento");
    }

    /**
     * Sets <code>value</code> for variable IdClienteDocumento.
     * @param value value to bind as IdClienteDocumento
     */
    public void setIdClienteDocumento(Long value) {
        ensureVariableManager().setVariableValue("IdClienteDocumento", value);
    }

    /**
     * Returns the variable value for IdTipoDocumentoCliente.
     * @return variable value for IdTipoDocumentoCliente
     */
    public Integer getIdTipoDocumentoCliente() {
        return (Integer) ensureVariableManager().getVariableValue("IdTipoDocumentoCliente");
    }

    /**
     * Sets <code>value</code> for variable IdTipoDocumentoCliente.
     * @param value value to bind as IdTipoDocumentoCliente
     */
    public void setIdTipoDocumentoCliente(Integer value) {
        ensureVariableManager().setVariableValue("IdTipoDocumentoCliente", value);
    }

    /**
     * Returns the variable value for numeroSerieDocumento.
     * @return variable value for numeroSerieDocumento
     */
    public Number getnumeroSerieDocumento() {
        return (Number) ensureVariableManager().getVariableValue("numeroSerieDocumento");
    }

    /**
     * Sets <code>value</code> for variable numeroSerieDocumento.
     * @param value value to bind as numeroSerieDocumento
     */
    public void setnumeroSerieDocumento(Number value) {
        ensureVariableManager().setVariableValue("numeroSerieDocumento", value);
    }

    /**
     * Returns the variable value for idTareaBPMCliente.
     * @return variable value for idTareaBPMCliente
     */
    public Integer getidTareaBPMCliente() {
        return (Integer) ensureVariableManager().getVariableValue("idTareaBPMCliente");
    }

    /**
     * Sets <code>value</code> for variable idTareaBPMCliente.
     * @param value value to bind as idTareaBPMCliente
     */
    public void setidTareaBPMCliente(Integer value) {
        ensureVariableManager().setVariableValue("idTareaBPMCliente", value);
    }
}

