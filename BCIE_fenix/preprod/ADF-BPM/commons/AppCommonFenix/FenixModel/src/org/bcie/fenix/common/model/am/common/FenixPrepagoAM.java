package org.bcie.fenix.common.model.am.common;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.List;
import java.util.Map;

import oracle.jbo.ApplicationModule;

import org.bcie.documentobo.Documento;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 05 12:24:48 CDT 2016
// ---------------------------------------------------------------------
public interface FenixPrepagoAM extends ApplicationModule {

    void consultarPrepagoById(Long idPrepago);


    Long insertarFormulariosPrepago();

    void actualizarFormularioCargoPrepago();

    Integer llenarFormularioCargoPrepago();


    Map obtenerAtributosPrepago(Long idPrepago);

    void consultarObservacionByIdPrepago(Long idPrepago);


    Map cargarDatosConsolidadoPagoPrepago(Long idPrepago);
    void insertarFormulariosCalculoInteres();

    void actualizarFechaFormularioPrepago();

    void insertarFormulariosDetallePenalidad();


    Boolean obtenerLineaGlobalCredito(Integer idProducto);

    Boolean consultarGestionarCoberturaById(Long idPrepago);

    void crearInicializarGestionarCobertura(Long idPrepago);

    Long insertarFormularioGestionarCobertura();


    Boolean validarCambiosContratoDesembolsoPrepago(Long idPrepago);

    Boolean validarCambiosPrepago(Long idPrepago);

    Boolean eliminarCalculoInteresesByIdPrepago(Long idPrepago);

    Boolean eliminarDetallePenalidadByIdPrepago(Long idPrepago);

    Boolean eliminarTrePrepagoContratoByIdPrepago(Long idPrepago);


    void insertarContratoDesembolso(Long idPrepago);


    boolean insertarFormularioCargoPrepago();


    Map cargarDatosConsolidadoPenalidad(Long idPrepago, Integer idTcaTipoResolucion);

    void llenarCalculoIntereses(Long idPrepago, Integer idTcaTipoResolucion, Timestamp fechaPrepago);

    void llenarDetallePenalidad(Long idPrepago, Integer idProducto, Integer idOperacion,
                                Timestamp fechaCalculoDefinitivo);

    Timestamp cargarDatosDetalleCargoPenalidadPrepago(Long idPrepago, BigDecimal montoDolarConFuentes,
                                                      String monedaFuentes);


    List<Map<String, Object>> ObtenerInteresesPrepago(BigDecimal idPrepago);

    Map<String, Object> llenarDetallePenalidadPrepago(Long idPrepago, Integer idOperacion);
}

