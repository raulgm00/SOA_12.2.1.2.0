package org.bcie.fenix.common.model.vo;

import java.util.ArrayList;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TreeCategoriaEnmiendaVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 26 17:21:05 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TreeCategoriaEnmiendaVOImpl extends ViewObjectImpl implements TreeCategoriaEnmiendaVO {
    /**
     * Log de la aplicacion
     */
    private static ADFLogger logger = ADFLogger.createADFLogger(TreeCategoriaEnmiendaVOImpl.class);
    
    /**
     * Define nombre de View Criteria para buscar por Id de Condicion
     */
    public static final String BUSCAR_POR_ID_VC = "TreeCategoriaEnmiendaVOCriteria";
    /**
     * This is the default constructor (do not remove).
     */
    public TreeCategoriaEnmiendaVOImpl() {
    }

    /**
     * Returns the variable value for pIdCondicion.
     * @return variable value for pIdCondicion
     */
    public Long getpIdCondicion() {
        return (Long) ensureVariableManager().getVariableValue("pIdCondicion");
    }

    /**
     * Sets <code>value</code> for variable pIdCondicion.
     * @param value value to bind as pIdCondicion
     */
    public void setpIdCondicion(Long value) {
        ensureVariableManager().setVariableValue("pIdCondicion", value);
    }
    
    /**
        * Realiza los registros de las categorias por id de condicion
        * para poder crear las enmendadas
        */
       public Boolean crearEnmendadasCategoria(Long idCondicion, Long idEnmendada) {
           executeQuery();
           Boolean respuesta = Boolean.TRUE;
           List<Integer> lista = new ArrayList<Integer>();
           if (idCondicion == null && null != idEnmendada) {
               respuesta = Boolean.FALSE;
               return respuesta;
           }

           logger.warning("Asigna Id Condicion: " + idCondicion);
           logger.warning("Asigna idEnmendada: " + idEnmendada);
           setpIdCondicion(idCondicion);

           ViewCriteria vc = null;
           try {
               vc = getViewCriteria(BUSCAR_POR_ID_VC);
               applyViewCriteria(vc);
               executeQuery();
               logger.warning("Registro encontrados " + getEstimatedRowCount());
               this.setRangeSize(-1);
               if (getEstimatedRowCount() > 0) {
                   logger.warning("Se obtiene lista ");
                   Row rowRecorridos;
                   Integer idCategoria;

                   for (int i = 0; i < getEstimatedRowCount(); i++) {
                       rowRecorridos = null;
                       rowRecorridos = getRowAtRangeIndex(i);
                       idCategoria = null;
                       if(null!= rowRecorridos){
                       logger.warning("Categoria encontrada " + (Integer) rowRecorridos.getAttribute("IdTcaCategoria"));
                       idCategoria = (Integer) rowRecorridos.getAttribute("IdTcaCategoria");
                       lista.add(idCategoria);
                       }
                   }
               } else {
                   logger.warning("No se encontraron registros de Categoria Condicion");
               }
           } catch (Exception e) {
               logger.severe("Error al ejecutar View Criteria: " + BUSCAR_POR_ID_VC);
               logger.severe("Error View Criteria: " + e);
               respuesta = Boolean.FALSE;
           } finally {
               this.getViewCriteriaManager().removeApplyViewCriteriaName(BUSCAR_POR_ID_VC);
               executeQuery();
           }

           try {
               if (lista.size() > 0) {
                   for (Integer valor : lista) {
                       logger.warning("Crea el nuevo registro de Categoria Condicion");
                       logger.warning("Crea id cateegoria " +valor);
                       Row registro = null;
                       NameValuePairs nuevoRow = new NameValuePairs();
                       //TreeCategoriaEnmiendaVORowImpl nuevoRow = (TreeCategoriaEnmiendaVORowImpl) this.createRow();

                       SequenceImpl sqCategoria = new SequenceImpl("TRE_CATEGORIA_CONDICION_SEQ", getDBTransaction());
                       oracle.jbo.domain.Number idEventos = null;
                       idEventos = sqCategoria.getSequenceNumber();
                       Long idEventosLong = new Long(idEventos.longValue());

                       logger.warning("Crea id categoria enmendada " + idEventosLong);
                       nuevoRow.setAttribute("Id", idEventosLong);
                       nuevoRow.setAttribute("IdCondicion", idEnmendada);
                       nuevoRow.setAttribute("IdTcaCategoria", valor);
                       //nuevoRow.setNewRowState(Row.STATUS_NEW);
                       //insertRow(nuevoRow);
                       registro = this.createAndInitRow(nuevoRow);
                   }
               }
           } catch (Exception ex) {
               logger.severe("Error al ingresar categoria ");
               logger.severe("Error en categoria: " + ex);
               respuesta = Boolean.FALSE;
           }
           if(respuesta){
               //getDBTransaction().commit();  
               }
           logger.warning("Termina metodo de ingresar categorias");
           logger.warning("respuesta" + respuesta);
           return respuesta;
       }
}

