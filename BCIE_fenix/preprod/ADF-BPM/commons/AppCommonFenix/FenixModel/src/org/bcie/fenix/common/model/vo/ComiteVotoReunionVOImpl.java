package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ComiteVotoReunionVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Dec 13 22:18:18 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ComiteVotoReunionVOImpl extends ViewObjectImpl implements ComiteVotoReunionVO {
    
    /**
     * Define nombre de View Criteria para buscar por Nivel de Aprobacion
     */
    public static final String BUSCAR_MIEMBROS_VOTACION_POR_NIVEL_APROB_ROL_VC = "MiembrosVotacionPorNivelAprobRolVC";
    
    private static ADFLogger logger = null;
    
    public ComiteVotoReunionVOImpl() {
        
        if(null == logger){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
        
    }

    /**
     * Returns the variable value for pIdNivelAprobacion.
     * @return variable value for pIdNivelAprobacion
     */
    public Number getpIdNivelAprobacion() {
        return (Number) ensureVariableManager().getVariableValue("pIdNivelAprobacion");
    }

    /**
     * Sets <code>value</code> for variable pIdNivelAprobacion.
     * @param value value to bind as pIdNivelAprobacion
     */
    public void setpIdNivelAprobacion(Number value) {
        ensureVariableManager().setVariableValue("pIdNivelAprobacion", value);
    }
    
    public void buscarPorIdNivelAprobacion(Number idNivelAprob,
                                           Number idRolBpm){
        
        if(idNivelAprob == null){
           return; 
        }
        
        setpIdNivelAprobacion(idNivelAprob);
        setpIdRolBpm(idRolBpm);
        
        ViewCriteria vc = 
            getViewCriteria(BUSCAR_MIEMBROS_VOTACION_POR_NIVEL_APROB_ROL_VC);
        applyViewCriteria(vc);
        
        setNamedWhereClauseParam("pIdNivelAprobacion", idNivelAprob);
        executeQuery();
    }

    public String getNombreUsuarioByLogin(String loginUsuario){
        logger.warning("Inicia metodo getNombreUsuarioByLogin");
        
        String nombreUsuario = null;        
        ViewCriteria criteria = null;
        
        try {
            criteria = getViewCriteriaManager().getViewCriteria("buscarRegistroByLoginVC");  
            criteria.ensureVariableManager().setVariableValue("loginUsuario", loginUsuario);            
            applyViewCriteria(criteria);
            executeQuery();

            if (getEstimatedRowCount() > 0) {                
                Row fila = first();
                logger.warning("registro recuperado:" + fila.getAttribute("TmrLoginUsuario")
                               +" -> "+fila.getAttribute("TmrNombreUsuario"));
                
                nombreUsuario = (String)fila.getAttribute("TmrNombreUsuario");
                
            } else {
                logger.warning("No se encontro nombre de usuario para la clave: "+loginUsuario);               
            }

        } catch (Exception e) {
            logger.warning("Error al aplicar criteria buscarRegistroByLoginVC ->", e);
        } finally {
            getViewCriteriaManager().removeApplyViewCriteriaName("BuscarByIdTransferenciaBancariaVC");
        }         
        
      logger.warning("termina metodo getNombreUsuarioByLogin");
      return nombreUsuario;
    }


    /**
     * Returns the variable value for pIdRolBpm.
     * @return variable value for pIdRolBpm
     */
    public Number getpIdRolBpm() {
        return (Number) ensureVariableManager().getVariableValue("pIdRolBpm");
    }

    /**
     * Sets <code>value</code> for variable pIdRolBpm.
     * @param value value to bind as pIdRolBpm
     */
    public void setpIdRolBpm(Number value) {
        ensureVariableManager().setVariableValue("pIdRolBpm", value);
    }

    /**
     * Returns the variable value for loginUsuario.
     * @return variable value for loginUsuario
     */
    public String getloginUsuario() {
        return (String) ensureVariableManager().getVariableValue("loginUsuario");
    }

    /**
     * Sets <code>value</code> for variable loginUsuario.
     * @param value value to bind as loginUsuario
     */
    public void setloginUsuario(String value) {
        ensureVariableManager().setVariableValue("loginUsuario", value);
    }
}

