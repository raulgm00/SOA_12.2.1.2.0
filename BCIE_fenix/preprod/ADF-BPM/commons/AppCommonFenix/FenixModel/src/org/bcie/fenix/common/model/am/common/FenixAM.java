package org.bcie.fenix.common.model.am.common;

import com.bcie.xmlns.solicitudaprobacionservice.SolicitudAprobacionPT;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;

import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Timestamp;

import org.bcie.fenix.common.model.dto.CorreoElectronicoDTO;
import org.bcie.fenix.common.model.vo.UsuarioReunionAprobacionLOVRowImpl;

import org.bcie.operacionmo.ActualizarOperacionRequestType;

import org.bcie.solicitudaprobacionbo.UsuarioReunion;

import java.math.BigDecimal;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 18 14:15:19 CST 2016
// ---------------------------------------------------------------------
public interface FenixAM extends ApplicationModule {
    void IniciarClasificacionEstrategica();

    void IniciarClasificacionEstrategicaCuestionarios(Long idOperacion);

    void aceptarCondicionAprobacionAgregadaModificada(Integer piId,
        List pCategoriaCondList, List pEventosCondList);

    void activarComisionesValidadas(String idOperacion);

    Boolean activarOpinion(String idOperacion);

    boolean actualizarAccionesMatrizTCC(String sIdProceso, String sTipoTCC,
        String sAccion, Integer idModalidad);

    void actualizarDatosReunionPresencial();

    boolean actualizarDecisionAprobAccionNegativa(
        oracle.jbo.domain.Number idNivelAprobacion, Integer idTipoSolicitudAprob);

    Map actualizarDetalleOperacion();

    Map actualizarDocumentoTree(Long idAdjunto);

    void actualizarLineaCredito(String idOperacion);

    //[KB:14513]
    void actualizarLineaCredito(String idOperacion, boolean validarCambioMonto);

    Map actualizarOperacionReformular(String codExterno, long idOficina,
        Boolean esEjercicioPoa, Boolean esUnidadEjecutoraSecPublico,
        Boolean esTipoDeGarantiaSecPublico);

    Boolean actualizarTCCAdmon(Long idTCC, Long idEstadoTcc, Long subEstado,
        String tipoTCC);

    void agregarComentario(String comentario, String idTcaTareaBpm,
        String idOperacion, String loginUsuario, String nombreUsusario,
        String idInstanciaTarea);

    void agregarComentarioCliente(String comentario, String idTcaTareaBpm,
        String idCliente, String loginUsuario, String nombreUsusario,
        String idInstanciaTarea);

    void agregarLineaAprobacion(String psNumeroLinea, String psDecripcion,
        BigDecimal pdMonto);

    void agregarRespuestaComentario(String repuesta, int idComentarioOperacion,
        String idTcaTareaBpm, String loginUsuario, String nombreUsusario,
        String idInstanciaTarea);

    void agregarRespuestaComentarioCliente(String repuesta,
        int idComentarioCliente, String idTcaTareaBpm, String loginUsuario,
        String nombreUsusario, String idInstanciaTarea);

    Boolean agregarVotoFueraSistema(String idSolicitud, String idUsuarioReunion);

    void buscarTerminoPorId(oracle.jbo.domain.Number id, Integer idModalidad);

    void cancelarCondicionAprobacionCaptura(Integer piId);

    void cancelarCondicionAprobacionEdicion(Integer piId);

    void cancelarVotoFueraSistema();

    void configurarSolicitudAprobacion(Long idOperacion, Long nivelAprobacion);

    void consultarAprobacion(Long plIdOperacion, Long piIdSolicitudAprobacion,
        Integer piIdNivelAprobacion, Integer piTipoSolicitud);

    void consultarComentariosReunion(Long idSolicitud);

    void consultarComentariosVoto(Long idUsuario, Long idVoto);

    void consultarCondicionAprobacion(Long plIdOperacion);

    int consultarCuestionarios(String idSector, String idSubSector,
        int idOperacion);

    void consultarDetalleOperacion(Long idOperacion);

    Map consultarOperacionReformular(Long idOperacion, Integer idProducto);

    Integer contadorComisiones(String idOperacion);

    Integer contadorComisionesMomento(String idOperacion, Integer momentoCobro);

    void crearActualizarCondicionAprobacion(Long plIdOperacion);

    Boolean crearAnalisis(Long idOperacion, Boolean tipoOpinion,
        Boolean isValidadoJefatura, Boolean isValidadoASJUR,
        List<Integer> listaMotivos);

    void crearCalificacionInicialRiesgo(String idOperacion);

    void crearCondicionAprobacionCaptura();

    Map crearOperacion(String codExterno, long idOficina,
        Boolean esEjercicioPoa, Boolean esUnidadEjecutoraSecPublico,
        Boolean esTipoDeGarantiaSecPublico);

    String crearOpinion(String idOperacion);

    void crearSolicitudAprobacion();

    boolean crearSolicitudAprobacionWS(Map params);

    Boolean datosCargo(String idOperacion);

    void eliminarCondicionAprobacion(Integer piId);

    Map eliminarCuestionarioEvaluacion(Long idEvaluacion, String codigoExterno,
        String nombreUsuario);

    Boolean eliminarDocumento(Long idOperacion, Integer idTipoDocumento);

    Map eliminarDocumentoTree(Long idAdjunto);

    void eliminarLineaAprobacion(Integer piIdLinea);

    Boolean esPositivoUltimoVotoPresidente();

    void filtrarProducto(Integer idProducto, String isRevolvente);

    void generarAprobacion(Long plIdOperacion, Long piIdSolicitudAprobacion);

    Integer getCurrentAnalisisByOperation(String idOperacion);

    List<String> getGruposUsuario(String pUsuario);

    SolicitudAprobacionPT getInstanciaSolicitudAprobacionWS();

    List<Map> getPreguntasCuestionario();

    Boolean guardarCuestionario(Object plPreguntas);
    
    String getWsdl(String key);

    Boolean guardarComentarios(String comentario, String nombreUsuario,
        String idSolicitud, String idUsuarioReunion, Boolean esComentarioVoto,
        oracle.jbo.domain.Number idVotoAprobacion, String idRolBpm);

    boolean guardarConsolidarDecision(
        oracle.jbo.domain.Number idSolicitudAprob,
        oracle.jbo.domain.Number idTipoAccion, String numActa,
        String numAcuerdo, String acuerdo, String userName);

    Boolean guardarElegibilidad(Long idOperacion, Boolean esElegible,
        String strElegibilidad, String strDeterminar);

    boolean guardarFechaCierreSolicitudAprob();

    void guardarMatrizTCCAgregarComision();

    void guardarMatrizTCCAgregarCondicion();

    void guardarMatrizTCCEditarCondicion(Integer idModalidad);

    Boolean guardarNuevaFechaTerminoReunion(Long idSolicitud, Long idOperacion,
        String fechaTermino, String loginUsuario);

    boolean guardarObservacionPresidente(String observacion);

    void guardarObservacionesCancelarOperacion();

    Boolean guardarPreguntasCuestionario(List<Map> plPreguntas);
    
    boolean ingresarRAROC(Float RAROC, String idOperacion, String loginUsuario);

    void iniDarSeguimientoPresidencia(Long idSolicitud, Long idOperacion,
        Integer tipoSolicitud);

    void iniRevisarSolicitudPresidente(Long idSolicitud, Long idOperacion,
        Integer tipoSolicitud);

    boolean iniTareaCumplirCondiciones(String idOperacion, String codigoTarea);

    boolean iniTareaValidarCondiciones(String idOperacion, String codigoTarea);

    void iniciaConsolidarDecision(Long idOperacion, Long idSolicitudAprob,
        Integer idNivelAprob, Integer tipoSolicitud, Integer tipoReunion);

    void iniciaMatrizTccGrid(oracle.jbo.domain.Number idOperacion,
        oracle.jbo.domain.Number idEnmienda);

    void inicializarAgregarVotoFueraSistema(String usuarioLogin,
        String idSolicitud, String idRolBpm);

    void inicializarCrearOperacion();

    Map inicializarDarSeguimiento(Long idSolicitud, Long idOperacion);

    void inicializarDatosReunion(Long idSolicitud, Long idOperacion);

    void inicializarRegistrarDatosLineaCredito();

    void inicioAnalisis(Long idOperacion, Boolean retornoAprobacion,
        String loginUsuario);

    void inicioCancelarOperacion(Long idOperacion,
        String suspenderTemporalmente, String loginUsuario,
        String justificacion, String nombreOperacion);

    void inicioElegibilidad(Long idOperacion, Boolean esReactivacion,
        String loginUsuario);

    void inicioEnmiendas(Long idOperacion, String loginUsuario);

    Boolean inicioLAFT(String idOperacion, Boolean solicitaAnalista,
        String loginUsuario, String descripcionOperacion, String codigoCliente,
        String nombreCliente, Integer codigoProducto, String nombreProducto,
        BigDecimal montoSolicitado, String pais, Boolean cuentaDJ);

    void inicioPreparacion(Long idOperacion, Boolean retornoAnalisis,
        String loginUsuario);

    void initSeguimientoVotacionPresencial(Long idSolicitudAprobacion,
        Long idOperacion);

    void initSeguimientoVotacionVirtual(Long idSolicitudAprobacion,
        Long idOperacion);

    void llenarMotivos(String idOperacion);

    void modificarAprobacion(Long plIdOperacion, Long piIdSolicitudAprobacion);

    void modificarLineaAprobacion(Integer piId, String psNumeroLinea,
        String psDecripcion, BigDecimal pdMonto);

    Boolean obtenerCampo(Integer idProducto, Integer columna);

    void obtenerComision(String idOperacion, Long idComision);

    public boolean obtenerDetalleOperacion(String idOperacion);

    List<UsuarioReunionAprobacionLOVRowImpl> obtenerIdMiembrosVotantes();

    Boolean obtenerJefatura(String idOperacion);

    Integer obteneridAnalisis(String idOperacion);

    String propagarLineaCredito(String loginUsuario);

    void reactivarOperacion(Long idOperacion, String loginUsuario);

    Row recuperarConfiguracionVisibilidad(Integer idProducto);

    Boolean servicioInicioComisiones(String idOperacion, String loginUsuario,
        String descripcionOperacion, String codigoCliente,
        String nombreCliente, Integer codigoProducto, String nombreProducto,
        BigDecimal montoSolicitado, String pais, Long idComision);


    void setvarIdOperacionTcc(Long value);

    boolean suspenderCancelarOperacion(long idOperacion);

    void testCrearAnalisis();

    boolean testCrearEvaluacion();

    boolean valComentarioOperUsuFchActual(
        oracle.jbo.domain.Number idOperacion, Integer intTarea);

    String validaLineaCredito(Long idLinea);

    Boolean validaProcesos(String operacion, Integer proceso);

    Boolean validaRespuestaComentario(String IdInstanciaTarea,
        String idTcaTareaBpm);

    Boolean validaRespuestaComentarioCliente(String IdInstanciaTarea,
        String idTcaTareaBpm);

    Map validarBanderasReformular(String idOperacion, String idCliente,
        BigDecimal montoSolicitado, String unidadEjecutora, String idProducto);

    boolean validarComentario(String IdInstanciaTarea, String idTcaTareaBpm,
        Long idOperacion);

    boolean validarComentarioCliente(String IdInstanciaTarea,
        String idTcaTareaBpm, Long idCliente);

    boolean validarComisionesDispensadasPagadas(String idOperacion,
        Integer estadoPagado, Integer estadoDispensado, Integer momentoActual);

    Map validarCondicionesFormalizacion(Long idOperacion);

    Boolean validarCuestionarioCompleto();

    Long validarEstadoOperacion(String idOperacion);

    boolean validarEstadosTCCAnalisis(Long idOperacion);

    Boolean validarGerenteResponsable(String responsableOperacion,
        String loginUsuario);

    boolean actualizarEstadosTCCAnalisis(Long idOperacion);

    boolean actualizarEstadosTCCAprobacion(Long idOperacion);

    boolean validarEstadosTCCAprobacion(Long idOperacion);

    Timestamp obtenerFechaFlexcube();

    void actualizarFechaInicioTerminosTipoPlazo(Long idOperacion,
        java.sql.Timestamp fecha, Integer idTipoFechaInicio);

    void actualizarTiposDocumentoPorOpTareaTipo(Long idOperacion,
        Integer idTareaBpm, Integer idTipoDocAnterior, Integer idTipoDocNuevo);

    void obtenerConfiguracionEditarTerminos(Integer idModalidad);

    boolean precargarInformacionTCC(Long idTcc, Integer idTcaTcc,
        Integer idModalidad, String tipoTcc);

    Boolean mandaFlexcube(Integer idTipocomision);

    Boolean enmiendasAprobarYFlexcube(Long idEnmienda, String comision,
        String idOperacion, String loginUsuario, String descripcionOperacion,
        String codigoCliente, String nombreCliente, Integer codigoProducto,
        String nombreProducto, BigDecimal montoSolicitado, String pais);

    Boolean precargaOGC(oracle.jbo.domain.Number idOperacion);

    Boolean validarRowElegibilidad(Long idOperacion);

    void obtenerTipoFechaInicioTermino(Integer idFechaInicio,
        Integer idModalidad);

    byte[] crearReporteTcc(Long idOperacion);

    String getClaveTcaTermino(String idTcaTermino);

    java.sql.Timestamp obtenerTipoFechaInicio(Integer idFechaInicio,
        Long idOperacion);

    Map consultarAtributosUsuario(String login);

    Map solicitarIntervencionUCE(Long idCliente, String responsableCliente);

    Boolean nuevaAccion(Long idOperacion, Long idCliente, Integer categoria,
        Integer estadoAccion, Integer categoriaInicio);

    Boolean seleccionarAccion(Long idAccion, Integer categoriaInicio);

    Long consultarSCRClienteByIdCliente(long idCliente);

    boolean validarDocumento(Long idOperacion, Integer idTipoDocumento,
        Integer idTareaBPM);

    Boolean actualizarOperacionAnalisis(Long idOperacion, Integer src,
        String perspectiva, Float tir, String loginUsuario, Boolean aprobar);

    Boolean actualizarSCRTabla(Long idCliente, String login, Boolean aprobar);

    boolean validarDocumentoPorNumeroSerieDocumento(Long idOperacion,
        Integer idTipoDocumento, oracle.jbo.domain.Number numeroSerieDocumento);

    boolean validarDocumento(Long idOperacion, Integer idTipoDocumento);

    Boolean inicioSupervision(String idOperacion, String loginUsuario,
        String descripcionOperacion, Integer codigoProducto,
        String nombreProducto, BigDecimal montoSolicitado, String pais);

    Boolean validaProcesosCliente(Long cliente, Integer proceso);

    String asociarOperacionesDetalle(Long idOperacion, Long idOperacionAsociada);

    Boolean inicioPrepago(String idOperacion, String loginUsuario, String rol,
        String responsableOperacion, String descripcionOperacion,
        Integer codigoProducto, String nombreProducto,
        BigDecimal montoSolicitado, String pais);

    Boolean inicioCierre(String idOperacion, String loginUsuario,
        String descripcionOperacion, String codigoCliente,
        String nombreCliente, Integer codigoProducto, String nombreProducto,
        BigDecimal montoSolicitado, String pais);

    Boolean inicioCierreFideicomiso(String idOperacion, String loginUsuario,
        String descripcionOperacion, Integer codigoProducto,
        String nombreProducto, BigDecimal montoSolicitado, String pais);

    Boolean inicioAprobacionCliente(Integer idCliente, String loginUsuario);

    Boolean inicioFormalizacion(String idOperacion, String loginUsuario,
        String descripcionOperacion, String codigoCliente,
        String nombreCliente, Integer codigoProducto, String nombreProducto,
        String pais);

    boolean actualizarResponsableOperacion(Long idOperacion, String loginUsuario);

    Boolean inicioEvaluacion(String idOperacion, String loginUsuario,
        String descripcionOperacion, Integer codigoProducto,
        String nombreProducto, BigDecimal montoSolicitado, String pais,
        String idEvaluacion);

    BigDecimal duplicarCuestionario(Long idOperacion, Long tipoEvaluacion,
        String idFlujo, String loginUsuario);

    Boolean compensarEvaluacion(String instanciaProceso, String idOperacion,
        String tipoEvaluacion, String loginUsuario);

    Map consultarEvaluacion(Long idOperacion, Long idTarea,
        String tipoEvaluacion, String instanciaProceso, Long eventoEvaluacion);

    Map inicializarDarSeguimientoCliente(Long idSolicitud, Long idCliente);

    void inicializarDatosReunionCliente(Long idSolicitud, Long idCliente);

    Boolean crearComisionGestor(Long idComision, String descripcion,
        String loginUsuario);

    void iniciaConsolidarDecisionCliente(Long idCliente, Long idSolicitudAprob,
        Integer idNivelAprob, Integer tipoSolicitud, Integer tipoReunion);

    boolean validarDocumentoPorOperacionIdTareaNumeroSerieDocumento(
        Long idOperacion, Integer idTareaBpm, Integer idTipoDocumento,
        oracle.jbo.domain.Number numeroSerieDocumento);

    Boolean guardarNuevaFechaTerminoReunionCliente(Long idSolicitud,
        Long idCliente, String fechaTermino, String loginUsuario);

    Map consultarEvaluacionDuplicado(Long idOperacion, Long idTarea,
        String tipoEvaluacion, String instanciaProceso, Long eventoEvaluacion);

    Boolean inicioImplementacionPct(String idOperacion, String loginUsuario,
        String descripcionOperacion, Integer codigoProducto,
        String nombreProducto, BigDecimal montoSolicitado, String pais);

    void consultarLineaCredito(String idOperacion, String instanciaProceso,
        Integer idProducto, Boolean solicitudContratacion);

    void consultarLineaCreditoByIdLineaCredito(String idOperacion,
        String instanciaProceso, Long idLineaCredito, Integer idProducto,
        String idTarea, Boolean solicitudContratacion);

    Boolean inicioInteresesCobro(String idOperacion, String loginUsuario);

    Boolean inicioEnviarGasto(String idOperacion, String loginUsuario);

    Boolean actualizarFinalizoTarea(Long idCondicion, Long idAgrupador,
        Integer idRol, Integer idTarea, String loginUsuario);

    boolean cambiarResponsableOperacionBpm(Long idOperacion, String loginUsuario);

    Map inicioDesembolsoExcepcion(String idOperacion, String loginUsuario,
        List<String> reglasParam, String idSolicitud);

    Boolean inicioRegistrarComision(String idOperacion, String loginUsuario);

    void asignaMiembrosAprobacion(Long idOperacion, Long idSolicitud,
        Integer idNivelAprobacion);

    void asignaMiembrosComiteAprobacion(Long idOperacion,
        oracle.jbo.domain.Number idSolicitud);

    void asignaMiembrosPresidenciaAprobacion(Long idOperacion,
        oracle.jbo.domain.Number idSolicitud);

    Map crearComisionProceso(Long idComision, String descripcion,
        String loginUsuario);

    Boolean crearComision(Long idComision, String descripcion,
        String loginUsuario);

    void asignarDesicionCurrent(Long idSolicitud);

    Long adjuntarDocumento(oracle.jbo.domain.Number idOperacion,
        oracle.jbo.domain.Number idTareaBpm, Boolean esJustificacion,
        BlobDomain content, String fileName, String mimeType, String codigo,
        Date fecha, Integer idTipo, String resumen,
        oracle.jbo.domain.Number idAccion, String loginCreadoPor,
        String nombreCreadoPor, String idOnbase,
        oracle.jbo.domain.Number numeroSerieDocumento, String instanciaProceso);

    Boolean actualizarAccionASeguir(Long piIdSolicitudAprobacion);

    Map actualizarClasificacionAmbiental(ActualizarOperacionRequestType request);

    Map actualizarClasificacionEstrategica(
        ActualizarOperacionRequestType request);

    Boolean actualizarRequeridosEnmienda(Long idEnmienda,
        Boolean requiereASJUR, Boolean reqOpinionGerenciaCredito,
        Boolean requiereCof, Boolean banderaFormalizacion,
        Boolean esDesobligacion, Boolean cambiodePlazo, String justificacion);


    void consultarLineaCreditoByIdDesdeBaseDatos(Long idLineaCredito,
        Integer idProducto);

    void consultarResumenLineasCreditoOperacion(String idOperacion,
        String instanciaProceso, Integer idProducto,
        Boolean solicitudContratacion);

    Long asegurarExistenciaContratoProceso(Long idOperacion,
        String instanciaProceso);

    String propagarLineaCredito(String loginUsuario,
        java.sql.Timestamp fechaValor);

    Map buscarCondicionFinancieraPorIdContrato(Long idContrato);

    Boolean calcularCoutasPrincipal(java.sql.Timestamp fechaInicio,
        java.sql.Timestamp fechaTermino, Integer IdTcaFrecuencia,
        Integer frecuencia, String tipoCuota, Long IdCondicionFinanciera);

    void cargarCFTempVO(String idContrato, String idLineaCredito);

    Boolean findandDeleteCalendarioComponente(Long idCondicionFinanciera,
        Long idLineaCredito);

    Row getCFTempVORowCurrent();

    Boolean guardarCalendarioComponente(Map map);

    // [KB:13306]
    void agregarLineaAprobacion(String psNumeroLinea, String psDecripcion,
        BigDecimal pdMonto, Integer piIdTipoMoneda);

    // [KB:13306]
    void modificarLineaAprobacion(Integer piId, String psNumeroLinea,
        String psDecripcion, BigDecimal pdMonto, Integer piIdTipoMoneda);


    // [KB: 15528]

    Boolean inicioAdministrarOperacion(String idOperacion);

    void agregarJustificacionOperacion(String comentario, String idTcaTareaBpm,
        String idOperacion, String loginUsuario, String nombreUsusario,
        String idInstanciaTarea);

    Boolean tieneRiesgoCredito(Integer idProducto);
    
    BigDecimal modificaMontoAmpliacion(Long idOperacion);

    String invocaTcaTareaConBtnDinVo(String p_nombreTabla, Integer p_idTareaBpm);    

    void setConformarEquipoValues(Boolean reqRAROC, Boolean reqOpinion, Boolean requHojaPCT, Boolean reqAdquisicion,
                                  Integer idProducto, String codigoTarea, Boolean solRAROC, Boolean solOpinion,
                                  Boolean soluHojaPCT, Boolean solAdquisicion, Boolean reqElabDocTecOPD,
                                  Boolean reqGenPlanMonOPD, Boolean reqRevEvidCumpOPD, Boolean solElabDocTecOPD,
                                  Boolean solGenPlanMonOPD, Boolean solRevEvidCumpOPD);

    void setConformarEquipoValues(Boolean reqRAROC, Boolean reqOpinion, Boolean requHojaPCT, Boolean reqAdquisicion,
                                  Integer idProducto, String codigoTarea, Boolean solRAROC, Boolean solOpinion,
                                  Boolean soluHojaPCT, Boolean solAdquisicion, Long idOperacion,
                                  Boolean reqElabDocTecOPD, Boolean reqGenPlanMonOPD, Boolean reqRevEvidCumpOPD,
                                  Boolean solElabDocTecOPD, Boolean solGenPlanMonOPD, Boolean solRevEvidCumpOPD);

    void setearInformacionDetalleCliente(oracle.jbo.domain.Number pnIdCliente, String psRazonSocial,
                                         oracle.jbo.domain.Number pnTipoPersona, oracle.jbo.domain.Number pnSector,
                                         oracle.jbo.domain.Number pnPais, oracle.jbo.domain.Number pnDiaPago,
                                         oracle.jbo.domain.Number pnOficina, String psAbreviatura,
                                         oracle.jbo.domain.Number pnTipoCliente,
                                         oracle.jbo.domain.Number pnTipoInstitucion,
                                         oracle.jbo.domain.Number pnGrupoEconomico, String psNumeroIdentificacion,
                                         String psBicCode, String psDireccion, String psEjecutivo, String psIdFlexcube);

    String EstadoTBILineaCredito(Long pIdContrato, Long pIdLineaCredito, String pInstanciaProceso,
                                 String pNumeroLineaCredito);

    String MergeTBILineaCredito(Long pIdContrato, Long pIdLineaCredito, Long pIdTareaBpm, String pInstanciaProceso,
                                String pEstadoLineaCredito, String pUsuario, Integer pBanEstatus,
                                String pNumeroLineaCredito);

    String propagarLineaCreditoInstancia(String loginUsuario, String instanciaProceso);

    BigDecimal obtenerMontoDescuento(String idContratoDesembolso);
    Map validarCondicionesFormalizacion(Long idOperacion, Long idContrato);

    Map<String, String> obtienePermisosUsuario(String pUser, String pApplication, String pWindow, String pControl);
}
