package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ConsultarAprobacionLOV;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 25 20:48:28 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultarAprobacionLOVImpl extends ViewObjectImpl implements ConsultarAprobacionLOV {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public ConsultarAprobacionLOVImpl() {
        
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the variable value for pIdOperacion.
     * @return variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) ensureVariableManager().getVariableValue("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        ensureVariableManager().setVariableValue("pIdOperacion", value);
    }

    /**
     * Returns the variable value for pEsPositiva.
     * @return variable value for pEsPositiva
     */
    public Integer getpEsPositiva() {
        return (Integer) ensureVariableManager().getVariableValue("pEsPositiva");
    }

    /**
     * Sets <code>value</code> for variable pEsPositiva.
     * @param value value to bind as pEsPositiva
     */
    public void setpEsPositiva(Integer value) {
        ensureVariableManager().setVariableValue("pEsPositiva", value);
    }
    
    /**
     * Ejecuta la consulta y el View criteria para buscar registros de aprobacion por Id de Operacion
     * @param idOperacion
     */
    public void buscarPorIdOperacion(Long idOperacion, Integer esPositiva){
        
        logger.warning("Inicia buscarPorIdOperacion");
        
        if(idOperacion != null){
            
            setpIdOperacion(idOperacion);
            setpEsPositiva(esPositiva);
            
            ViewCriteria vc = getViewCriteria("BuscarPorIdOperacionVC");
            applyViewCriteria(vc);
            logger.warning("Ejecuta Consulta");
            executeQuery();
            
            if(getEstimatedRowCount() > 0){
                setCurrentRow(first());    
            }else{
                logger.warning("No se encontraron registros");
            }
        }else{
            logger.severe("Id de Operacion no recibido");
        }
        
        logger.warning("Finaliza buscarPorIdOperacion");
    }
    
    /**
     * Obtiene el Id de Aprobacion mas reciente de una decision positiva
     * @param idOperacion Contiene el Id de Operacion
     * @return devuelve id de aprobacion
     */
    public Long obtenerUltimoIdAprobacionPositiva(Long idOperacion){
        
        logger.warning("Inicia obtenerUltimoIdAprobacionPositiva");
        Long idAprobacion = null;
        
        if(idOperacion != null){
            buscarPorIdOperacion(idOperacion, new Integer(1));
            
            ConsultarAprobacionLOVRowImpl row = (ConsultarAprobacionLOVRowImpl) getCurrentRow();
            if(row != null){
                idAprobacion = row.getId();
                
                if(idAprobacion == null){
                    logger.severe("Error no se obtuvo un Id Aprobacion");
                }
            }else{
                logger.severe("No se obtuvo el Current Row");    
            }
        }else{
            logger.severe("Id de Operacion no recibido");
        }
        
        logger.warning("Finaliza obtenerUltimoIdAprobacionPositiva");
        return idAprobacion;
    }
}

