package org.bcie.fenix.common.model.vo;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 10 18:27:07 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CargosContratoDesembolsoVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        IdContratoDesembolso,
        Componente,
        MontoCargo,
        FechaRegistro,
        BanEstatus,
        Descripcion,
        Total;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int IDCONTRATODESEMBOLSO = AttributesEnum.IdContratoDesembolso.index();
    public static final int COMPONENTE = AttributesEnum.Componente.index();
    public static final int MONTOCARGO = AttributesEnum.MontoCargo.index();
    public static final int FECHAREGISTRO = AttributesEnum.FechaRegistro.index();
    public static final int BANESTATUS = AttributesEnum.BanEstatus.index();
    public static final int DESCRIPCION = AttributesEnum.Descripcion.index();
    public static final int TOTAL = AttributesEnum.Total.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CargosContratoDesembolsoVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public Long getId() {
        return (Long) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Id.
     * @param value value to set the  Id
     */
    public void setId(Long value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Descripcion.
     * @return the Descripcion
     */
    public Long getIdContratoDesembolso() {
        return (Long) getAttributeInternal(IDCONTRATODESEMBOLSO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Descripcion.
     * @param value value to set the  Descripcion
     */
    public void setIdContratoDesembolso(Long value) {
        setAttributeInternal(IDCONTRATODESEMBOLSO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DescripcionCorta.
     * @return the DescripcionCorta
     */
    public String getComponente() {
        return (String) getAttributeInternal(COMPONENTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DescripcionCorta.
     * @param value value to set the  DescripcionCorta
     */
    public void setComponente(String value) {
        setAttributeInternal(COMPONENTE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Estatus.
     * @return the Estatus
     */
    public Double getMontoCargo() {
        return (Double) getAttributeInternal(MONTOCARGO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Estatus.
     * @param value value to set the  Estatus
     */
    public void setMontoCargo(Double value) {
        setAttributeInternal(MONTOCARGO, value);
    }


    /**
     * Gets the attribute value for the calculated attribute FechaRegistro.
     * @return the FechaRegistro
     */
    public Date getFechaRegistro() {
        return (Date) getAttributeInternal(FECHAREGISTRO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FechaRegistro.
     * @param value value to set the  FechaRegistro
     */
    public void setFechaRegistro(Date value) {
        setAttributeInternal(FECHAREGISTRO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public Boolean getBanEstatus() {
        return (Boolean) getAttributeInternal(BANESTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setBanEstatus(Boolean value) {
        setAttributeInternal(BANESTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoloLectura.
     * @return the SoloLectura
     */
    public String getDescripcion() {
        return (String) getAttributeInternal(DESCRIPCION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoloLectura.
     * @param value value to set the  SoloLectura
     */
    public void setDescripcion(String value) {
        setAttributeInternal(DESCRIPCION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Total.
     * @return the Total
     */
    public Double getTotal() {
        Double total = new Double(0);
        Double monto = new Double(0);
        String columnName = "MontoCargo";
        RowSetIterator rsi = getViewObject().createRowSetIterator("RptBugSummaryIterator" + columnName);
        while(rsi.hasNext()) {
            Row row = rsi.next();
            if(null!= (Double) row.getAttribute(columnName)){
                    monto = (Double) row.getAttribute(columnName);
                    total += monto;
                }
        }
        rsi.reset();
        rsi.closeRowSetIterator();
        return total;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Total.
     * @param value value to set the  Total
     */
    public void setTotal(Double value) {
        setAttributeInternal(TOTAL, value);
    }
}

