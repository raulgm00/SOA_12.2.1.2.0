package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TreEvidenciaSolicitudVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 19 15:41:11 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TreEvidenciaSolicitudVOImpl extends ViewObjectImpl implements TreEvidenciaSolicitudVO {
    
    private static ADFLogger logger = null;
    /**
     * This is the default constructor (do not remove).
     */
    public TreEvidenciaSolicitudVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void agregarTreEvidenciaSolicitud(Long idDocumento, Long idSolicitud, String instanciaProceso) {
        logger.log(ADFLogger.TRACE, "Inside agregarTreEvidenciaSolicitud.");
        logger.warning("Inicia metodo agregarTreEvidenciaSolicitud de TreEvidenciaSolicitudVO");
        
        oracle.jbo.domain.Number idTreEvidenciaSolicitud = null;
        NameValuePairs nvpTreEvidenciaSolicitud = null;
        SequenceImpl seqTreEvidenciaSolicitud = null;
        //logger.warning("Continua porceso agregarTreEvidenciaSolicitud 1");

        seqTreEvidenciaSolicitud = new SequenceImpl("TRE_EVIDENCIA_SOLICITUD_SEQ", getDBTransaction());
        idTreEvidenciaSolicitud = seqTreEvidenciaSolicitud.getSequenceNumber();
        //logger.warning("Continua porceso agregarTreEvidenciaSolicitud 2");
        nvpTreEvidenciaSolicitud = new NameValuePairs();
        nvpTreEvidenciaSolicitud.setAttribute("Id", idTreEvidenciaSolicitud);
        nvpTreEvidenciaSolicitud.setAttribute("IdDocumento", idDocumento);
        nvpTreEvidenciaSolicitud.setAttribute("IdSolicitud", idSolicitud);
        nvpTreEvidenciaSolicitud.setAttribute("InstanciaProceso", instanciaProceso);
        logger.warning("Id--->" + idTreEvidenciaSolicitud);
        logger.warning("IdDocumento--->" + idDocumento);
        logger.warning("IdSolicitud--->" + idSolicitud);
        logger.warning("InstanciaProceso--->" + instanciaProceso);
        //logger.warning("Continua porceso agregarTreEvidenciaSolicitud 3");
        
        this.createAndInitRow(nvpTreEvidenciaSolicitud);
        //logger.warning("Continua proceso agregarTreEvidenciaSolicitud 4");
        try{         
            getDBTransaction().commit();
            logger.warning("se hace commit a la VO");
        }catch(Exception e){
            logger.warning("error en commit en agregarTreEvidenciaSolicitud:"+e);
            try{
                getDBTransaction().commit();
                logger.warning("segundo commit exitoso");
            }catch(Exception e1){
                logger.warning("error segundo commit en agregarTreEvidenciaSolicitud:"+e1);
            }
        }
        
        logger.warning("Finaliza metodo agregarTreEvidenciaSolicitud de TreEvidenciaSolicitudVO");
    }
    
    public void eliminarTreEvidenciaSolicitud(Integer idTreEvidenciaSolicitud) {
        logger.log(ADFLogger.TRACE, "Inside eliminarTreEvidenciaSolicitud.");
       
        logger.warning("Ingresa al metodo eliminarTreEvidenciaSolicitud de la VO TreEvidenciaSolicitud");
        logger.warning("idTreEvidenciaSolicitud---->"+ idTreEvidenciaSolicitud);
        Row row = null;
        //executeQuery();
        row = getRow(new Key(new Object[]{Long.parseLong(idTreEvidenciaSolicitud.toString())}));
       
        if(row != null){
            logger.warning("Metodo eliminarTreEvidenciaSolicitud------Ingresa al If");
            row.remove();
            logger.warning("Metodo eliminarTreEvidenciaSolicitud------Aplica row.remove");
            try{
                getDBTransaction().commit();
                logger.warning("Metodo eliminarTreEvidenciaSolicitud------Hace el commit");
            }catch(Exception e){
                logger.warning("error en commit de eliminarTreEvidenciaSolicitud:"+e);
                try{
                    getDBTransaction().commit();
                    logger.warning("segundo commit exitoso");
                }catch(Exception e1){
                    logger.warning("error en segundo commit de eliminarTreEvidenciaSolicitud:"+e1);
                }
            }
            
        }
        logger.warning("Metodo eliminarTreEvidenciaSolicitud------Fin metodo eliminarTreEvidenciaSolicitud");
    }
}

