package org.bcie.fenix.common.model.vo;import oracle.adf.share.logging.ADFLogger;import oracle.jbo.Row;import oracle.jbo.ViewCriteria;import oracle.jbo.server.ViewObjectImpl;import org.bcie.fenix.common.model.vo.common.TipoMonedaDeSolicitudDesembolsosVO;// ---------------------------------------------------------------------// ---    File generated by Oracle ADF Business Components Design Time.// ---    Fri Sep 30 12:16:04 CDT 2016// ---    Custom code may be added to this class.// ---    Warning: Do not modify method signatures of generated methods.// ---------------------------------------------------------------------public class TipoMonedaDeSolicitudDesembolsosVOImpl extends ViewObjectImpl implements TipoMonedaDeSolicitudDesembolsosVO {        private static ADFLogger logger = ADFLogger.createADFLogger(AprobacionVOImpl.class);        /**     * This is the default constructor (do not remove).     */    public TipoMonedaDeSolicitudDesembolsosVOImpl() {    }        /**     * Vamos por el tipo de moneda del contrato asociado a la solicitud, se     * obtiene el primer registro siempre y cuando la solicitud cuente con      * contratos     *      * @since 30/09/2016     */    public String getTipoMonedaDeSolicitud(Long idSolicitud){        String tipoMoneda = null;        logger.log(ADFLogger.WARNING, " <-> getTipoMonedaDeSolicitud <-> " + idSolicitud);        Row[] row = null;         ViewCriteria criteria = null;        if(idSolicitud != null){            try{                criteria = this.getViewCriteriaManager().getViewCriteria("TipoMonedaCriteria");                criteria.ensureVariableManager().setVariableValue("pIdSolicitud", idSolicitud);                this.applyViewCriteria(criteria);                this.executeQuery();                row = this.getAllRowsInRange();                if(row != null){                                        if(row.length > 0){                        tipoMoneda = (String) row[0].getAttribute("DescripcionCorta");                        }                    logger.log(ADFLogger.WARNING, "La Linea [" + tipoMoneda + "]");                }else{                    logger.log(ADFLogger.WARNING, "El row es NULL en *>.<* getTipoMonedaDeSolicitud");                }            }catch(Exception e){                logger.log(ADFLogger.WARNING, "Error en getTipoMonedaDeSolicitud" + e.getClass() +                            ":" + e.getMessage());            }        }else{            logger.warning("IdSolicitud NULL al calcular la SumaDesembolso");        }        this.getViewCriteriaManager().removeApplyViewCriteriaName("TipoMonedaCriteria");        return tipoMoneda;    }    /**     * Returns the variable value for pIdSolicitud.     * @return variable value for pIdSolicitud     */    public Long getpIdSolicitud() {        return (Long) ensureVariableManager().getVariableValue("pIdSolicitud");    }        /**     * Sets <code>value</code> for variable pIdSolicitud.     * @param value value to bind as pIdSolicitud     */    public void setpIdSolicitud(Long value) {        ensureVariableManager().setVariableValue("pIdSolicitud", value);    }    }