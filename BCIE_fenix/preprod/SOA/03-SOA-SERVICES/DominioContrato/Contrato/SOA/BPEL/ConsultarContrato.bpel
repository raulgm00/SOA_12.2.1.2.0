<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Aug 08 12:23:21 CDT 2016
  Author:  Sergio-Morales
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ConsultarContrato"
               targetNamespace="http://xmlns.oracle.com/DominioContrato/Contrato/ConsultarContrato"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/DominioContrato/Contrato/ConsultarContrato"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="http://www.bcie.org/ContratoService"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:ns2="http://www.bcie.org/LineaCreditoService"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns7="http://www.bcie.org/CondicionBO"
         xmlns:ns11="http://www.bcie.org/TerminoBO" xmlns:ns3="http://www.bcie.org/ContratoMO"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns14="http://www.bcie.org/ResultBO"
         xmlns:ns13="http://www.bcie.org/CommonBO" xmlns:ns10="http://www.bcie.org/DocumentoBO"
         xmlns:ns12="http://www.bcie.org/ComisionBO" xmlns:ns8="http://www.bcie.org/CatalogoBO"
         xmlns:ns6="http://www.bcie.org/LineaCreditoBO" xmlns:ns5="http://www.bcie.org/ContratoBO"
         xmlns:ns9="http://www.bcie.org/AtributoBO" xmlns:ns15="http://www.bcie.org/ErrorBO"
         xmlns:ns4="http://www.bcie.org/LineaCreditoMO"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns16="http://xmlns.bcie.com/LineaCreditoService"  xmlns:ns19="http://www.bcie.org/ReglaBO"
         xmlns:ns17="http://www.bcie.org/OperacionBO" xmlns:ns22="http://www.bcie.org/MatrizTCCBO"
         xmlns:ns20="http://www.bcie.org/ProductoBO" xmlns:ns21="http://www.bcie.org/HerramientaCEBO"
         xmlns:ns18="http://www.bcie.org/DesembolsoBO">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://www.bcie.org/ContratoService" location="../WSDLs/ConsultaContratoSORWrapper.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="consultarcontrato" partnerLinkType="ns1:ConsultarContrato" myRole="ContratoPT"/>
    <partnerLink name="ConsultarLineaCreditoService" partnerLinkType="ns2:ConsultarLineaCreditoService"
                 partnerRole="consultarLineaCreditoPT"/>
    <partnerLink name="ConsultarLineaById" partnerLinkType="ns16:ConsultarLineaById" partnerRole="LineaCreditoPT"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:ConsultaContratoRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:ConsultarContratoResponseMessage"/>
    <variable name="InvokeConsultaLineaCreditoIn" messageType="ns2:ConsultarLineaCreditoRequestMessage"/>
    <variable name="InvokeConsultaLineaCreditoOut" messageType="ns2:ConsultarLineaCreditoResponseMessage"/>
    <variable name="setTitleInstance" type="xsd:string"/>
    <variable name="setNivelDetalle" type="xsd:string"/>
    <variable name="InvokeLineaCreditoIn" messageType="ns16:ConsultarLineaCreditoByIdRequestMessage"/>
    <variable name="InvokeLineaCreditoOut" messageType="ns16:ConsultarLineaCreditoByIdResponseMessage"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <assign name="AssignERROR">
        <copy>
          <from>'ERROR'</from>
          <to>$outputVariable.response/ns3:Resultado/ns14:result</to>
        </copy>
        <copy>
          <from>'Error en ConsultarContrato'</from>
          <to>$outputVariable.response/ns3:Resultado/ns14:message</to>
        </copy>
        <copy>
          <from>ora:getFaultAsString()</from>
          <to>$outputVariable.response/ns3:Resultado/ns14:error/ns15:errorDescription</to>
        </copy>
      </assign>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ConsultarContrato.wsdl) -->
    <receive name="receiveInput" partnerLink="consultarcontrato" portType="ns1:ContratoPT" operation="ConsultaContrato" variable="inputVariable" createInstance="yes"/>
    <assign name="setTitleInstance">
      <copy>
        <from>oraext:setFlowInstanceTitle(concat("IdContrato: ",string($inputVariable.request/ns3:idContrato)))</from>
        <to>$setTitleInstance</to>
      </copy>
      <copy>
        <from>xp20:upper-case(string($inputVariable.request/ns3:nivelDetalle))</from>
        <to>$setNivelDetalle</to>
      </copy>
    </assign>
    <if name="IfValidaContrato">
      <documentation>
        <![CDATA[IdContratoNULL]]>
      </documentation>
      <condition>string-length(string($inputVariable.request/ns3:idContrato)) = 0 or $inputVariable.request/ns3:idContrato = 0</condition>
      <sequence name="SequenceValidaContrato">
        <assign name="isNull">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns3:Resultado/ns14:result</to>
          </copy>
          <copy>
            <from>'El id del contrato es requerido'</from>
            <to>$outputVariable.response/ns3:Resultado/ns14:message</to>
          </copy>
        </assign>
        <reply name="ReplyError" variable="outputVariable" partnerLink="consultarcontrato" portType="ns1:ContratoPT"
               operation="ConsultaContrato"/>
        <exit name="ExitError"/>
      </sequence>
      <else>
        <empty name="Empty"/>
      </else>
    </if>
    <sequence name="SequenceConsultaContrato">
      <assign name="RequestConsultarContrato">
        <copy>
          <from>$inputVariable.request/ns3:idContrato</from>
          <to>$InvokeConsultaLineaCreditoIn.request/ns4:IdContrato</to>
        </copy>
      </assign>
      <invoke name="InvokeConsultaLineaCredito" bpelx:invokeAsDetail="no" partnerLink="ConsultarLineaCreditoService"
              portType="ns2:consultarLineaCreditoPT" operation="consultarLineaCredito"
              inputVariable="InvokeConsultaLineaCreditoIn" outputVariable="InvokeConsultaLineaCreditoOut"/>
      <assign name="ResponseContrato">
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:idContrato</from>
          <to>$outputVariable.response/ns3:clienteContrato/ns5:idContrato</to>
        </copy>
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:Resultado/ns14:result</from>
          <to>$outputVariable.response/ns3:Resultado/ns14:result</to>
        </copy>
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:Resultado/ns14:message</from>
          <to>$outputVariable.response/ns3:Resultado/ns14:message</to>
        </copy>
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:idOperacion</from>
          <to>$outputVariable.response/ns3:clienteContrato/ns5:idOperacion</to>
        </copy>
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:fechaFirma</from>
          <to>$outputVariable.response/ns3:clienteContrato/ns5:fechaFirma</to>
        </copy>
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:fechaVigencia</from>
          <to>$outputVariable.response/ns3:clienteContrato/ns5:fechaVigencia</to>
        </copy>
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:MontoEscriturado</from>
          <to>$outputVariable.response/ns3:clienteContrato/ns5:MontoEscriturado</to>
        </copy>
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:cuentaCliente</from>
          <to>$outputVariable.response/ns3:clienteContrato/ns5:cuentaCliente</to>
        </copy>
        <copy bpelx:insertMissingToData="yes">
          <from>$InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:instanciaProceso</from>
          <to>$outputVariable.response/ns3:clienteContrato/ns5:instanciaProceso</to>
        </copy>
      </assign>
      <if name="IfValidaError">
        <documentation>
          <![CDATA[ERROR]]>
        </documentation>
        <condition>$InvokeConsultaLineaCreditoOut.response/ns4:Resultado/ns14:result='ERROR'</condition>
        <sequence name="Sequence1">
          <assign name="ErroConsultarContrato">
            <copy>
              <from>$InvokeConsultaLineaCreditoOut.response/ns4:Resultado/ns14:result</from>
              <to>$outputVariable.response/ns3:Resultado/ns14:result</to>
            </copy>
            <copy>
              <from>$InvokeConsultaLineaCreditoOut.response/ns4:Resultado/ns14:message</from>
              <to>$outputVariable.response/ns3:Resultado/ns14:message</to>
            </copy>
          </assign>
          <reply name="ReplyError" variable="outputVariable" partnerLink="consultarcontrato" portType="ns1:ContratoPT"
                 operation="ConsultaContrato"/>
          <exit name="ExitError"/>
        </sequence>
        <else>
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <sequence name="Sequence2">
            <if name="IfValidaNivelDetalle">
              <documentation>
                <![CDATA[OperacionOrContrato]]>
              </documentation>
              <condition>$setNivelDetalle='OPERACION' or $setNivelDetalle='CONTRATO'</condition>
              <empty name="Empty"/>
              <else>
                <documentation>
                  <![CDATA[Diferente]]>
                </documentation>
                <sequence name="Sequence3">
                  <assign name="LineasCredito">
                    <bpelx:annotation>
                      <bpelx:pattern patternName="bpelx:transformation"></bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                      <from>ora:doXSLTransformForDoc("../Transformations/Tranformacion.xsl", $outputVariable.response, "InvokeConsultaLineaCreditoOut.response", $InvokeConsultaLineaCreditoOut.response)</from>
                      <to variable="outputVariable" part="response"/>
                    </copy>
                  </assign>
                  <forEach parallel="no" counterName="contador" name="ForLineaCredito">
                    <startCounterValue>1</startCounterValue>
                    <finalCounterValue>count($InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:LineaCredito/ns6:idLineaCredito)</finalCounterValue>
                    <scope name="Scope1"><sequence name="Sequence4"><sequence>
                          <assign name="AssignIdLineas"
                                  xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy bpelx:insertMissingToData="yes">
                              <from>$InvokeConsultaLineaCreditoOut.response/ns4:clienteContrato/ns5:LineaCredito[$contador]/ns6:idLineaCredito</from>
                              <to>$InvokeLineaCreditoIn.ConsultarLineaCreditoByIdRequest/ns4:idLineaCredito</to>
                            </copy></assign>
                          <invoke name="InvokeLineaCredito"
                                                                                      bpelx:invokeAsDetail="no"
                                                                                      partnerLink="ConsultarLineaById"
                                                                                      portType="ns16:LineaCreditoPT"
                                                                                      operation="consultarLineaCreditoById"
                                                                                      inputVariable="InvokeLineaCreditoIn"
                                                                                      outputVariable="InvokeLineaCreditoOut"/><assign name="AssignLineasCredito">
                            <copy>
                              <from>$InvokeLineaCreditoOut.ConsultarLineaCreditoByIdResponse/ns4:LineaCredito</from>
                              <to>$outputVariable.response/ns3:clienteContrato/ns5:LineaCredito[$contador]</to>
                            </copy>
                          </assign></sequence></sequence></scope>
                  </forEach>
                </sequence>
              </else>
            </if>
          </sequence>
        </else>
      </if>
    </sequence>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="consultarcontrato" portType="ns1:ContratoPT" operation="ConsultaContrato" variable="outputVariable"/>
  </sequence>
</process>