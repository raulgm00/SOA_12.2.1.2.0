<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Fri Sep 11 08:46:23 CST 2015
  Author:  david-ramirez
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ActualizarOperacion"
         targetNamespace="http://xmlns.oracle.com/DominioOperacion/ActualizarOperacion/ActualizarOperacion"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://xmlns.oracle.com/DominioOperacion/ActualizarOperacion/ActualizarOperacion"
         xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:ns1="http://xmlns.bcie.com/OperacionService"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:ns2="http://www.bcie.org/OperacionMO"
         xmlns:ns5="http://www.bcie.org/CatalogoBO" xmlns:ns6="http://www.bcie.org/DeclaracionJuradaBO"
         xmlns:ns3="http://www.bcie.org/OperacionBO" xmlns:ns4="http://www.bcie.org/ClienteBO"
         xmlns:ns7="http://www.bcie.org/ResultBO" xmlns:ns8="http://www.bcie.org/ErrorBO"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns9="urn:ConsultarProcesoBPM" xmlns:ns11="http://www.bcie.org/ConsultarProcesoBPMProcesoBO"
         xmlns:ns10="http://www.bcie.org/ConsultarProcesoBPMProcesoMO" xmlns:ns12="http://www.bcie.org/ProductoBO"
         xmlns:ns13="http://www.bcie.org/TerminoService" xmlns:ns14="http://www.bcie.org/TerminoMO"
         xmlns:ns15="http://www.bcie.org/TerminoBO" xmlns:ns16="http://www.bcie.org/AtributoBO"
         xmlns:ns17="http://www.bcie.org/ConsultarLineaCreditoByIdOperacionSAD"
         xmlns:ns18="http://www.bcie.org/LineaCreditoMO" xmlns:ns19="http://www.bcie.org/LineaCreditoBO"
         xmlns:ns20="http://www.bcie.org/CondicionBO" xmlns:ns21="http://www.bcie.org/DocumentoBO"
         xmlns:ns22="http://www.bcie.org/ComisionBO" xmlns:ns23="http://xmlns.bcie.org/ProductoService"
         xmlns:ns28="http://www.bcie.org/ProductoMO" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns25="http://www.bcie.org/CommonBO" xmlns:ns27="http://www.bcie.org/HerramientaCEBO"
         xmlns:ns26="http://www.bcie.org/DesembolsoBO" xmlns:ns24="http://www.bcie.org/ContratoBO"
         xmlns:ns29="http://www.bcie.org/ReglaBO" xmlns:ns30="http://www.bcie.org/MatrizTCCBO">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://schemas.oracle.com/bpel/extension" location="../WSDLs/RuntimeFault.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/Operacion/V1/Wsdl/ADAPTER/ConsultarOperacionByIdSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/Operacion/V1/Wsdl/ADAPTER/CrearOperacionSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/Operacion/V1/Wsdl/ADAPTER/ActualizarOperacionSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService" location="../WSDLs/ActualizarOperacionSORWrapper.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="actualizaroperacionService" partnerLinkType="ns1:ActualizarOperacion" myRole="OperacionPT"/>
    <partnerLink name="ActializarOperacion_PS" partnerLinkType="ns1:ActializarOperacion_PS" partnerRole="OperacionPT"/>
    <partnerLink name="ActualizarOperacionGECCO" partnerLinkType="ns1:ActualizarOperacionGECCO"
                 partnerRole="Operacion12Port"/>
    <partnerLink name="ConsultarOperacion" partnerLinkType="ns1:ConsultarOperacion"
                 partnerRole="ConsultarOperacionById12Port"/>
    <partnerLink name="ConsultarCodExterno" partnerLinkType="ns9:ConsultarCodExterno" partnerRole="ProcesoBPMPT"/>
    <partnerLink name="ActualizarMontoOperacion" partnerLinkType="ns1:ActualizarMontoOperacion"
                 partnerRole="ActualizarMontoOperacionTP"/>
    <partnerLink name="ConsultarMontoOperacion" partnerLinkType="ns1:ConsultarMontoOperacion"
                 partnerRole="ConsultarMontoOperacionPT"/>
    <partnerLink name="CrearMontoOperacion" partnerLinkType="ns1:CrearMontoOperacion"
                 partnerRole="CrearMontoOperacionPT"/>
    <partnerLink name="ActualizarTermino" partnerLinkType="ns13:ActualizarTermino" partnerRole="TerminoPT"/>
    <partnerLink name="consultarTermino" partnerLinkType="ns13:consultarTermino" partnerRole="ConsultarTerminoPT"/>
    <partnerLink name="ConsultarLineaCreditoByIdOperacion_SB"
                 partnerLinkType="ns17:ConsultarLineaCreditoByIdOperacion_SB"
                 partnerRole="ConsultarLineaCreditoByIdOperacion_PT"/>
    <partnerLink name="ConsultarProducto" partnerLinkType="ns23:ConsultarProducto"
                 partnerRole="ConsultarProductoByIdOperacionPT"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:requestActualizarOperacionMessage"/>
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:responseActualizarOperacionMessage"/>
    <variable name="tempoActualizarOperacion" messageType="ns1:requestActualizarOperacionMessage"/>
    <variable name="codigoResponsable" type="xsd:long"/>
    <variable name="inConsultarOperacion" messageType="ns1:requestConsultarOperacionMessage"/>
    <variable name="outConsultarOperacion" messageType="ns1:responseConsultarOperacionMessage"/>
    <variable name="InConsultarExterno" messageType="ns9:requestConsultarBPMmessage"/>
    <variable name="outConsultarExterno" messageType="ns9:responseConsultarBPMmessage"/>
    <variable name="MontoSolicitadoInput" messageType="ns1:requestActualizarMontoOperacionMessages"/>
    <variable name="MontoSolicitadoOut" messageType="ns1:responseActualizarOperacionMessages"/>
    <variable name="MontoTotalIn" messageType="ns1:requestActualizarMontoOperacionMessages"/>
    <variable name="MontoTotalOut" messageType="ns1:responseActualizarOperacionMessages"/>
    <variable name="InConsultarMontoOperacion" messageType="ns1:requestConsultarMontoOperacionMessage"/>
    <variable name="OutConsultarMontoOperacion" messageType="ns1:responseConsultarMontoOperacionMessage"/>
    <variable name="Monto" type="xsd:decimal"/>
    <variable name="tagmontocant" type="xsd:decimal"/>
    <variable name="inConsultarMontoelse" messageType="ns1:requestConsultarMontoOperacionMessage"/>
    <variable name="OutConsultarMontoelse" messageType="ns1:responseConsultarMontoOperacionMessage"/>
    <variable name="InCrearMontoOperacion" messageType="ns1:requestCrearMontoOperacionMessages"/>
    <variable name="OutCrearMontoOperacion" messageType="ns1:responseCrearMontoOperacionMessages"/>
    <variable name="InValidasiExiste" messageType="ns1:requestConsultarMontoOperacionMessage"/>
    <variable name="OutValidasiExiste" messageType="ns1:responseConsultarMontoOperacionMessage"/>
    <variable name="setTitleVar" type="xsd:string"/>
    <variable name="Reponsable" type="xsd:string"/>
    <variable name="FaultVariable" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="V_fechaInicio" type="xsd:date"/>
    <variable name="V_componenteConcesionalidad" type="xsd:boolean"/>
    <variable name="resultadoGECCO" type="xsd:string"/>
    <variable name="IdTipoMonedaMontoSolicitado" type="xsd:int"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence11">
        <assign name="AssignError">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns2:Resultado/ns7:result</to>
          </copy>
          <copy>
            <from>$FaultVariable.summary</from>
            <to>$outputVariable.response/ns2:Resultado/ns7:message</to>
          </copy>
          <copy>
            <from>$FaultVariable.detail</from>
            <to>$outputVariable.response/ns2:Resultado/ns7:error/ns8:errorDescription</to>
          </copy>
        </assign>
        <compensate name="Compensate"/>
        <reply name="ReplyError" variable="outputVariable" partnerLink="actualizaroperacionService"
               portType="ns1:OperacionPT" operation="actualizarOperacion"/>
        <exit name="ExitError"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in ActualizarOperacion.wsdl) -->
    <receive name="receiveInput" partnerLink="actualizaroperacionService" portType="ns1:OperacionPT"
             operation="actualizarOperacion" variable="inputVariable" createInstance="yes"/>
    <assign name="Assign_setTitleVar">
      <copy>
        <from>oraext:setFlowInstanceTitle(concat("idOperacion= ",string($inputVariable.request/ns2:Operacion/ns3:idOperacion)))</from>
        <to>$setTitleVar</to>
      </copy>
    </assign>
    <scope name="ScopeConsultarOperacion">
      <sequence name="Sequence2">
        <assign name="AssignConsultarOperacion">
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
            <to>$inConsultarOperacion.request/ns2:idOperacion</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarOperacion" bpelx:invokeAsDetail="no" partnerLink="ConsultarOperacion"
                portType="ns1:ConsultarOperacionById12Port" operation="ConsultarOperacionById"
                inputVariable="inConsultarOperacion" outputVariable="outConsultarOperacion"/>
        <assign name="AssignOperacion">
          <copy>
            <from>$outConsultarOperacion.response/ns2:Operacion</from>
            <to>$tempoActualizarOperacion.request/ns2:Operacion</to>
          </copy>
        </assign>
        <if name="IfAsignarResponsable">
          <documentation>
            <![CDATA[Reasignar]]>
          </documentation>
          <condition>string($inputVariable.request/ns2:reasignar)='true'</condition>
          <assign name="AssignResponsable">
            <copy>
              <from>$inputVariable.request/ns2:Operacion/ns3:responsable</from>
              <to>$Reponsable</to>
            </copy>
          </assign>
          <else>
            <documentation>
              <![CDATA[NoReasignar]]>
            </documentation>
            <assign name="AssignResponsable">
              <copy>
                <from>$outConsultarOperacion.response/ns2:Operacion/ns3:responsable</from>
                <to>$Reponsable</to>
              </copy>
            </assign>
          </else>
        </if>
        <assign name="AssignResponsable">
          <copy>
            <from>ids:getUserProperty($Reponsable , 'employeenumber')</from>
            <to>$codigoResponsable</to>
          </copy>
        </assign>
        <if name="IfEtapaSeleccionada">
          <documentation>
            <![CDATA[Usuario envía etapa]]>
          </documentation>
          <condition>count($inputVariable.request/ns2:Operacion/ns3:etapa)&gt;0and string($inputVariable.request/ns2:Operacion/ns3:etapa)!=''</condition>
          <assign name="AssignConsultarEtapaBPM_Entrada">
            <copy>
              <from>$inputVariable.request/ns2:Operacion/ns3:etapa</from>
              <to>$InConsultarExterno.request/ns10:Etapa/ns11:idEtapa</to>
            </copy>
          </assign>
          <else>
            <documentation>
              <![CDATA[Usuario no envía etapa]]>
            </documentation>
            <sequence>
              <assign name="AssignConsultarEtapaBPM_Operacion">
                <copy>
                  <from>$tempoActualizarOperacion.request/ns2:Operacion/ns3:etapa</from>
                  <to>$InConsultarExterno.request/ns10:Etapa/ns11:idEtapa</to>
                </copy>
              </assign>
            </sequence>
          </else>
        </if>
        <invoke name="InvokeConsultarExterno" partnerLink="ConsultarCodExterno" portType="ns9:ProcesoBPMPT"
                operation="ConsultatBPM" inputVariable="InConsultarExterno" outputVariable="outConsultarExterno"
                bpelx:invokeAsDetail="no"/>
        <assign name="XQTransformOperacion">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:processXQuery10('../XQUERY/SeleccionarCamposAEditar.xqy', 'ActualizarOperacionRequest', $inputVariable.request, 'ActualizarOperacionRequestTempo', $tempoActualizarOperacion.request)</from>
            <to variable="tempoActualizarOperacion" part="request"/>
          </copy>
        </assign>
        <assign name="AssigncountMonto">
          <copy>
            <from>count($inputVariable.request/ns2:Operacion/ns3:montoOperacion)</from>
            <to>$tagmontocant</to>
          </copy>
        </assign>
      </sequence>
    </scope>
    <scope name="ScopeConsultarMonto">
      <variables>
        <variable name="montoCount" type="xsd:int"/>
        <variable name="numeroTotalMonto" type="xsd:int"/>
      </variables>
      <sequence name="Sequence3">
        <if name="IfMontoOperacion">
          <documentation>
            <![CDATA[MontoTag]]>
          </documentation>
          <condition>count($inputVariable.request/ns2:Operacion/ns3:montoOperacion)&gt;0</condition>
          <sequence name="Sequence4">
            <assign name="Assign_MontoCount">
              <copy>
                <from>1</from>
                <to>$montoCount</to>
              </copy>
              <copy>
                <from>count($inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion)</from>
                <to>$numeroTotalMonto</to>
              </copy>
            </assign>
            <while name="WhileMontoOperacion">
              <condition>$montoCount&lt;=$numeroTotalMonto</condition>
              <sequence name="Sequence6">
                <if name="IfMontosolicitaco">
                  <documentation>
                    <![CDATA[terminawhile]]>
                  </documentation>
                  <condition>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$montoCount]/ns3:IdTcaTipoMonto=2</condition>
                  <sequence>
                    <assign name="AssignTagMonto">
                      <copy>
                        <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$montoCount]/ns3:monto</from>
                        <to>$Monto</to>
                      </copy>
                    </assign>
                    <assign name="Aumentar_MontoCount" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                      <copy>
                        <from>$numeroTotalMonto + 1</from>
                        <to>$montoCount</to>
                      </copy>
                    </assign>
                  </sequence>
                  <else>
                    <documentation>
                      <![CDATA[siguewhile]]>
                    </documentation>
                    <assign name="Aumentar_MontoCount" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                      <copy>
                        <from>$montoCount+1</from>
                        <to>$montoCount</to>
                      </copy>
                    </assign>
                  </else>
                </if>
              </sequence>
            </while>
            <if name="IfMontoSolicitado">
              <documentation>
                <![CDATA[ConMontoTag]]>
              </documentation>
              <condition>string($Monto)= ''</condition>
              <sequence>
                <assign name="AssigConsultaMontoOperacion">
                  <copy>
                    <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                    <to>$inConsultarMontoelse.request/ns2:idOperacion</to>
                  </copy>
                  <copy>
                    <from>2</from>
                    <to>$inConsultarMontoelse.request/ns2:IdTcaTipoMonto</to>
                  </copy>
                </assign>
                <invoke name="InvokeConsultarMonto" partnerLink="ConsultarMontoOperacion"
                        portType="ns1:ConsultarMontoOperacionPT" operation="consultarMontoOperacion"
                        inputVariable="inConsultarMontoelse" outputVariable="OutConsultarMontoelse"
                        bpelx:invokeAsDetail="no"/>
                <assign name="AssignMontosol">
                  <copy>
                    <from>$OutConsultarMontoelse.response/ns2:MontoOperacion/ns3:montoOperacion/ns3:monto</from>
                    <to>$Monto</to>
                  </copy>
                  <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                    <from>$OutConsultarMontoelse.response/ns2:MontoOperacion/ns3:montoOperacion/ns3:idTcaTipoMonedaMontoOperacion</from>
                    <to>$IdTipoMonedaMontoSolicitado</to>
                  </copy>
                </assign>
              </sequence>
              <else>
                <documentation>
                  <![CDATA[MontoSolicitadoBD]]>
                </documentation>
                <sequence name="Sequence5">
                  <empty name="Empty1"/>
                </sequence>
              </else>
            </if>
          </sequence>
          <else>
            <documentation>
              <![CDATA[SinMontoAsignado]]>
            </documentation>
            <sequence>
              <assign name="AssignConsultarMonto">
                <copy>
                  <from>2</from>
                  <to>$InConsultarMontoOperacion.request/ns2:IdTcaTipoMonto</to>
                </copy>
                <copy>
                  <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                  <to>$InConsultarMontoOperacion.request/ns2:idOperacion</to>
                </copy>
              </assign>
              <invoke name="InvokeConsultarMontoOperacion" partnerLink="ConsultarMontoOperacion"
                      portType="ns1:ConsultarMontoOperacionPT" operation="consultarMontoOperacion"
                      inputVariable="InConsultarMontoOperacion" outputVariable="OutConsultarMontoOperacion"
                      bpelx:invokeAsDetail="no"/>
              <assign name="AssignMontoOperacion">
                <copy>
                  <from>$OutConsultarMontoOperacion.response/ns2:MontoOperacion/ns3:montoOperacion/ns3:monto</from>
                  <to>$Monto</to>
                </copy>
                <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                  <from>$OutConsultarMontoOperacion.response/ns2:MontoOperacion/ns3:montoOperacion/ns3:idTcaTipoMonedaMontoOperacion</from>
                  <to>$IdTipoMonedaMontoSolicitado</to>
                </copy>
              </assign>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="GECCO">
      <variables>
        <variable name="inActualzarGECCO" messageType="ns1:requestCrearOperacionMessage"/>
        <variable name="outActualizarGECCO" messageType="ns1:responseCrearOperacionMessage"/>
        <variable name="inConsultarLineaCreditoByIdOperacion"
                  messageType="ns17:ConsultarLineaCreditoByIdOperacionRequest"/>
        <variable name="outConsultarLineaCreditoByIdOperacion"
                  messageType="ns17:ConsultarLineaCreditoByIdOperacionResponse"/>
        <variable name="consultarProdByIdOperacion_Input" messageType="ns23:requestConsultarByIdOperacionMessage"/>
        <variable name="consultarProdByIdOperacion_Output" messageType="ns23:responseConsultarByIdOperacionMessage"/>
      </variables>
      <faultHandlers>
        <catchAll>
          <assign name="AssignErrorGECCO">
            <copy>
              <from>ora:getFaultAsString()</from>
              <to>$resultadoGECCO</to>
            </copy>
          </assign>
        </catchAll>
      </faultHandlers>
      <sequence>
        <assign name="AssingConsultarProducto">
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
            <to>$consultarProdByIdOperacion_Input.request/ns28:idOperacion</to>
          </copy>
        </assign>
        <invoke name="ConsultarProducto" partnerLink="ConsultarProducto"
                portType="ns23:ConsultarProductoByIdOperacionPT" operation="consultarByIdOperacion"
                inputVariable="consultarProdByIdOperacion_Input" outputVariable="consultarProdByIdOperacion_Output"
                bpelx:invokeAsDetail="no"/>
        <assign name="AssignConsultarLineaCreditoRequest">
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
            <to>$inConsultarLineaCreditoByIdOperacion.ConsultarLineaCreditoByIdOperacionRequest/ns18:IdOperacion</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarLineaCreditoByIdOperacion_SB" partnerLink="ConsultarLineaCreditoByIdOperacion_SB"
                portType="ns17:ConsultarLineaCreditoByIdOperacion_PT" operation="ConsultarLineaCreditoByIdOperacion"
                inputVariable="inConsultarLineaCreditoByIdOperacion"
                outputVariable="outConsultarLineaCreditoByIdOperacion" bpelx:invokeAsDetail="no"/>
        <assign name="AssignActualizarGECCO">
          <copy>
            <from>$tempoActualizarOperacion.request/ns2:Operacion</from>
            <to>$inActualzarGECCO.request/ns2:Operacion</to>
          </copy>
          <copy>
            <from>$Monto</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion/ns3:monto</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>$codigoResponsable</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:responsable</to>
          </copy>
          <copy>
            <from>$outConsultarExterno.response/ns10:Etapa/ns11:idExterno</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:etapa</to>
          </copy>
          <copy ignoreMissingFromData="yes">
            <from>$outConsultarLineaCreditoByIdOperacion.ConsultarLineaCreditoByIdOperacionResponse/ns18:LineasCredito[1]/ns19:NumeroLineaCredito</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:lineaCredito</to>
          </copy>
          <copy ignoreMissingFromData="yes">
            <from>$outConsultarOperacion.response/ns2:Operacion/ns3:unidadEjecutora</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:unidadEjecutora</to>
          </copy>
          <copy ignoreMissingFromData="yes">
            <from>$outConsultarOperacion.response/ns2:Operacion/ns3:SRC/ns5:codigoExterno</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:calificacionRiesgo</to>
          </copy>
          <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
            <from>$consultarProdByIdOperacion_Output.response/ns28:Producto/ns12:idProducto</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:producto/ns12:idProducto</to>
          </copy>
          <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
            <from>$consultarProdByIdOperacion_Output.response/ns28:Producto/ns12:descripcion</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:producto/ns12:descripcion</to>
          </copy>
          <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
            <from>$consultarProdByIdOperacion_Output.response/ns28:Producto/ns12:descripcionCorta</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:producto/ns12:descripcionCorta</to>
          </copy>
          <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
            <from>$consultarProdByIdOperacion_Output.response/ns28:Producto/ns12:fechaRegistro</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:producto/ns12:fechaRegistro</to>
          </copy>
          <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
            <from>$consultarProdByIdOperacion_Output.response/ns28:Producto/ns12:codExterno</from>
            <to>$inActualzarGECCO.request/ns2:Operacion/ns3:producto/ns12:codExterno</to>
          </copy>
        </assign>
        <invoke name="InvokeActualizarGECCO" partnerLink="ActualizarOperacionGECCO" portType="ns1:Operacion12Port"
                operation="crearOperacion" inputVariable="inActualzarGECCO" outputVariable="outActualizarGECCO"
                bpelx:invokeAsDetail="no"/>
        <assign name="AssignResultadoGECCO">
          <copy>
            <from>$outActualizarGECCO.response/ns2:Resultado/ns7:result</from>
            <to>$resultadoGECCO</to>
          </copy>
        </assign>
      </sequence>
    </scope>
    <scope name="ScopeActualizarOperacion">
      <variables>
        <variable name="inActualizarOperacionPS" messageType="ns1:requestActualizarOperacionMessage"/>
        <variable name="outActualizarOperacionPS" messageType="ns1:responseActualizarOperacionMessage"/>
        <variable name="MontoCount" type="xsd:integer"/>
      </variables>
      <sequence name="Sequence1">
        <assign name="AssignActualizarOperacionFenix">
          <copy>
            <from>$inputVariable.request/ns2:Operacion</from>
            <to>$inActualizarOperacionPS.request/ns2:Operacion</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>$Reponsable</from>
            <to>$inActualizarOperacionPS.request/ns2:Operacion/ns3:responsable</to>
          </copy>
        </assign>
        <invoke name="InvokeActualizarOperacionFENIX" bpelx:invokeAsDetail="no" partnerLink="ActializarOperacion_PS"
                portType="ns1:OperacionPT" operation="actualizarOperacion" inputVariable="inActualizarOperacionPS"
                outputVariable="outActualizarOperacionPS"/>
        <sequence>
          <assign name="AssignMontoCOunt">
            <copy>
              <from>count($inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion)</from>
              <to>$MontoCount</to>
            </copy>
          </assign>
          <forEach parallel="no" counterName="CountMonto" name="ForEachMontoOperacion">
            <bpelx:skipCondition>$MontoCount=0</bpelx:skipCondition>
            <startCounterValue>1</startCounterValue>
            <finalCounterValue>$MontoCount</finalCounterValue>
            <completionCondition>
              <branches>count($inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion)</branches>
            </completionCondition>
            <scope name="Scope2">
              <sequence>
                <assign name="AssignActualizarMontoTotal">
                  <copy>
                    <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                    <to>$MontoTotalIn.request/ns2:MontoOperacion/ns3:idOperacion</to>
                  </copy>
                  <copy>
                    <from>$inActualizarOperacionPS.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$CountMonto]/ns3:IdTcaTipoMonto</from>
                    <to>$MontoTotalIn.request/ns2:MontoOperacion/ns3:IdTcaTipoMonto</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$CountMonto]/ns3:monto</from>
                    <to>$MontoTotalIn.request/ns2:MontoOperacion/ns3:monto</to>
                  </copy>
                  <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                    <from>$inputVariable.request/ns2:Operacion/ns3:idTcaTipoMoneda</from>
                    <to>$MontoTotalIn.request/ns2:MontoOperacion/ns3:idTcaTipoMonedaMontoOperacion</to>
                  </copy>
                </assign>
                <invoke name="InvokeMontoTotal" partnerLink="ActualizarMontoOperacion"
                        portType="ns1:ActualizarMontoOperacionTP" operation="ActualizarMontoOperacion"
                        inputVariable="MontoTotalIn" outputVariable="MontoTotalOut" bpelx:invokeAsDetail="no"/>
                <assign name="AssignValidaExiste">
                  <copy>
                    <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                    <to>$InValidasiExiste.request/ns2:idOperacion</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$CountMonto]/ns3:IdTcaTipoMonto</from>
                    <to>$InValidasiExiste.request/ns2:IdTcaTipoMonto</to>
                  </copy>
                </assign>
                <invoke name="InvokeValidasiExiste" partnerLink="ConsultarMontoOperacion"
                        portType="ns1:ConsultarMontoOperacionPT" operation="consultarMontoOperacion"
                        inputVariable="InValidasiExiste" outputVariable="OutValidasiExiste" bpelx:invokeAsDetail="no"/>
                <assign name="Assign2">
                  <copy>
                    <from>count($OutValidasiExiste.response/ns2:MontoOperacion/ns3:montoOperacion)</from>
                    <to>$tagmontocant</to>
                  </copy>
                </assign>
                <if name="If1">
                  <documentation>
                    <![CDATA[Inserta]]>
                  </documentation>
                  <condition>count($OutValidasiExiste.response/ns2:MontoOperacion/ns3:montoOperacion)=0</condition>
                  <sequence>
                    <assign name="AssignCrearMontoOperacion">
                      <copy>
                        <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                        <to>$InCrearMontoOperacion.request/ns2:MontoOperacion/ns3:idOperacion</to>
                      </copy>
                      <copy>
                        <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$CountMonto]/ns3:IdTcaTipoMonto</from>
                        <to>$InCrearMontoOperacion.request/ns2:MontoOperacion/ns3:IdTcaTipoMonto</to>
                      </copy>
                      <copy>
                        <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$CountMonto]/ns3:monto</from>
                        <to>$InCrearMontoOperacion.request/ns2:MontoOperacion/ns3:monto</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeCrearMontoOperacion" partnerLink="CrearMontoOperacion"
                            portType="ns1:CrearMontoOperacionPT" operation="CrearMontoOperacion"
                            inputVariable="InCrearMontoOperacion" outputVariable="OutCrearMontoOperacion"
                            bpelx:invokeAsDetail="no"/>
                  </sequence>
                  <else>
                    <documentation>
                      <![CDATA[NoInserta]]>
                    </documentation>
                    <sequence>
                      <empty name="EmptyCrearMonto"/>
                    </sequence>
                  </else>
                </if>
              </sequence>
            </scope>
          </forEach>
          <assign name="AssignActualizarGECCOResponse">
            <copy>
              <from>concat("Actualización GECCO: ",$resultadoGECCO , " Actualizacion FENIX : " , $outActualizarOperacionPS.response/ns2:Resultado)</from>
              <to>$outputVariable.response/ns2:Resultado/ns7:message</to>
            </copy>
            <copy>
              <from>$outActualizarOperacionPS.response/ns2:Resultado/ns7:result</from>
              <to>$outputVariable.response/ns2:Resultado/ns7:result</to>
            </copy>
          </assign>
        </sequence>
      </sequence>
    </scope>
    <if name="IfActualizarTermino">
      <documentation>
        <![CDATA[No Actualiza]]>
      </documentation>
      <condition>$inputVariable.request/ns2:actualizarTermino='false'</condition>
      <sequence>
        <empty name="EmptyNoActualiza"/>
      </sequence>
      <else>
        <documentation>
          <![CDATA[Actualiza]]>
        </documentation>
        <sequence name="Sequence8">
          <scope name="ScopeConsultarTermino">
            <variables>
              <variable name="inconsultarTermino601" messageType="ns13:ConsultarTerminoRequestMessage"/>
              <variable name="outonsultarTermino601" messageType="ns13:ConsultarTerminoResponseMessage"/>
              <variable name="inconsultarTermino304" messageType="ns13:ConsultarTerminoRequestMessage"/>
              <variable name="outconsultarTermino304" messageType="ns13:ConsultarTerminoResponseMessage"/>
            </variables>
            <sequence name="Sequence12">
              <assign name="AssignConsultarTermino601">
                <copy>
                  <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                  <to>$inconsultarTermino601.request/ns14:idOperacion</to>
                </copy>
                <copy>
                  <from>28</from>
                  <to>$inconsultarTermino601.request/ns14:tipoTermino/ns15:idCatTermino</to>
                </copy>
              </assign>
              <invoke name="InvokeconsultarTermino601" partnerLink="consultarTermino" portType="ns13:ConsultarTerminoPT"
                      operation="consultarTermino" inputVariable="inconsultarTermino601"
                      outputVariable="outonsultarTermino601" bpelx:invokeAsDetail="no"/>
              <assign name="AssignConsultarTemino304">
                <copy>
                  <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                  <to>$inconsultarTermino304.request/ns14:idOperacion</to>
                </copy>
                <copy>
                  <from>17</from>
                  <to>$inconsultarTermino304.request/ns14:tipoTermino/ns15:idCatTermino</to>
                </copy>
              </assign>
              <invoke name="Invoke304" partnerLink="consultarTermino" portType="ns13:ConsultarTerminoPT"
                      operation="consultarTermino" inputVariable="inconsultarTermino304"
                      outputVariable="outconsultarTermino304" bpelx:invokeAsDetail="no"/>
              <assign name="AssignTerminos">
                <copy ignoreMissingFromData="yes">
                  <from>$outonsultarTermino601.response/ns14:Termino/ns15:fecha</from>
                  <to>$V_fechaInicio</to>
                </copy>
                <copy ignoreMissingFromData="yes">
                  <from>$outconsultarTermino304.response/ns14:Termino/ns15:seAplicanRecursosConcesion</from>
                  <to>$V_componenteConcesionalidad</to>
                </copy>
              </assign>
            </sequence>
          </scope>
          <scope name="ScopeActualizarTerminoT304">
            <variables>
              <variable name="InTermino602" messageType="ns13:CrearTerminoRequestMessage"/>
              <variable name="outTermino602" messageType="ns13:CrearTerminoResponseMessage"/>
            </variables>
            <faultHandlers>
              <catch faultName="bpelx:remoteFault" faultVariable="FaultVariable"
                     faultMessageType="bpelx:RuntimeFaultMessage">
                <rethrow name="RethrowTermino"/>
              </catch>
              <catchAll>
                <assign name="Assign3">
                  <copy>
                    <from>-1</from>
                    <to>$FaultVariable.code</to>
                  </copy>
                  <copy>
                    <from>ora:getFaultAsString()</from>
                    <to>$FaultVariable.summary</to>
                  </copy>
                  <copy>
                    <from>'Error al Actualizar el termino'</from>
                    <to>$FaultVariable.detail</to>
                  </copy>
                </assign>
              </catchAll>
            </faultHandlers>
            <compensationHandler>
              <if name="IfTermino304" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                <documentation>
                  <![CDATA[OK]]>
                </documentation>
                <condition>count($inputVariable.request/ns2:Operacion/ns3:componenteConcesionalidad)&gt;0</condition>
                <sequence>
                  <assign name="AssignTermino304">
                    <copy>
                      <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                      <to>$InTermino602.request/ns14:Termino/ns15:operacion</to>
                    </copy>
                    <copy>
                      <from>17</from>
                      <to>$InTermino602.request/ns14:Termino/ns15:tipoTermino/ns15:idCatTermino</to>
                    </copy>
                    <copy>
                      <from>true()</from>
                      <to>$InTermino602.request/ns14:esUnico</to>
                    </copy>
                    <copy>
                      <from>$V_componenteConcesionalidad</from>
                      <to>$InTermino602.request/ns14:Termino/ns15:seAplicanRecursosConcesion</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeTermino304" partnerLink="ActualizarTermino" portType="ns13:TerminoPT"
                          operation="crearTermino" inputVariable="InTermino602" outputVariable="outTermino602"
                          bpelx:invokeAsDetail="no" xmlns:bpelx="http://schemas.oracle.com/bpel/extension"/>
                </sequence>
              </if>
            </compensationHandler>
            <sequence name="Sequence10">
              <if name="IfTermino304">
                <documentation>
                  <![CDATA[OK]]>
                </documentation>
                <condition>count($inputVariable.request/ns2:Operacion/ns3:componenteConcesionalidad)&gt;0</condition>
                <sequence>
                  <assign name="AssignTermino304">
                    <copy>
                      <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                      <to>$InTermino602.request/ns14:Termino/ns15:operacion</to>
                    </copy>
                    <copy>
                      <from>17</from>
                      <to>$InTermino602.request/ns14:Termino/ns15:tipoTermino/ns15:idCatTermino</to>
                    </copy>
                    <copy>
                      <from>true()</from>
                      <to>$InTermino602.request/ns14:esUnico</to>
                    </copy>
                    <copy>
                      <from>$inputVariable.request/ns2:Operacion/ns3:componenteConcesionalidad</from>
                      <to>$InTermino602.request/ns14:Termino/ns15:seAplicanRecursosConcesion</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeTermino304" partnerLink="ActualizarTermino" portType="ns13:TerminoPT"
                          operation="crearTermino" inputVariable="InTermino602" outputVariable="outTermino602"
                          bpelx:invokeAsDetail="no"/>
                  <if name="IfResultadoTermino">
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <condition>$outTermino602.response/ns14:Resultado/ns7:result!= 'OK'</condition>
                    <sequence name="Sequence15">
                      <assign name="AssignFault">
                        <copy>
                          <from>'-1'</from>
                          <to>$FaultVariable.code</to>
                        </copy>
                        <copy>
                          <from>'Error al actualizar el termino' </from>
                          <to>$FaultVariable.summary</to>
                        </copy>
                        <copy>
                          <from>$outTermino602.response/ns14:Resultado/ns7:message</from>
                          <to>$FaultVariable.detail</to>
                        </copy>
                      </assign>
                      <throw name="ThrowFault" faultName="bpelx:remoteFault" faultVariable="FaultVariable"/>
                    </sequence>
                  </if>
                </sequence>
              </if>
            </sequence>
          </scope>
          <scope name="ScopeActualizarTerminoT601">
            <variables>
              <variable name="inTermino601" messageType="ns13:CrearTerminoRequestMessage"/>
              <variable name="outTermino601" messageType="ns13:CrearTerminoResponseMessage"/>
              <variable name="inTermino601comp" messageType="ns13:CrearTerminoRequestMessage"/>
              <variable name="outTermino601comp" messageType="ns13:CrearTerminoResponseMessage"/>
            </variables>
            <faultHandlers>
              <catch faultName="bpelx:remoteFault" faultVariable="FaultVariable"
                     faultMessageType="bpelx:RuntimeFaultMessage">
                <rethrow name="RethrowTermino"/>
              </catch>
              <catchAll>
                <assign name="AssignFault">
                  <copy>
                    <from>-1</from>
                    <to>$FaultVariable.code</to>
                  </copy>
                  <copy>
                    <from>ora:getFaultAsString()</from>
                    <to>$FaultVariable.summary</to>
                  </copy>
                  <copy>
                    <from>'Error al Actualizar el termino'</from>
                    <to>$FaultVariable.detail</to>
                  </copy>
                </assign>
              </catchAll>
            </faultHandlers>
            <compensationHandler>
              <sequence name="Sequence14">
                <if name="IfTerminoCompensacion">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>count($inputVariable.request/ns2:Operacion/ns3:fechaInicio)&gt;0</condition>
                  <sequence>
                    <assign name="AssignTermino601comp">
                      <copy>
                        <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                        <to>$inTermino601comp.request/ns14:Termino/ns15:operacion</to>
                      </copy>
                      <copy>
                        <from>$V_fechaInicio</from>
                        <to>$inTermino601comp.request/ns14:Termino/ns15:fecha</to>
                      </copy>
                      <copy>
                        <from>28</from>
                        <to>$inTermino601comp.request/ns14:Termino/ns15:tipoTermino/ns15:idCatTermino</to>
                      </copy>
                      <copy>
                        <from>true()</from>
                        <to>$inTermino601comp.request/ns14:esUnico</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeTermino601comp" partnerLink="ActualizarTermino" portType="ns13:TerminoPT"
                            operation="crearTermino" inputVariable="inTermino601comp" outputVariable="outTermino601comp"
                            bpelx:invokeAsDetail="no"/>
                  </sequence>
                </if>
              </sequence>
            </compensationHandler>
            <sequence name="Sequence9">
              <if name="IfActualiza601">
                <documentation>
                  <![CDATA[OK]]>
                </documentation>
                <condition>count($inputVariable.request/ns2:Operacion/ns3:fechaInicio)&gt;0</condition>
                <sequence>
                  <assign name="AssignTermino601">
                    <copy>
                      <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                      <to>$inTermino601.request/ns14:Termino/ns15:operacion</to>
                    </copy>
                    <copy bpelx:insertMissingToData="yes" ignoreMissingFromData="yes">
                      <from>$tempoActualizarOperacion.request/ns2:Operacion/ns3:fechaInicio</from>
                      <to>$inTermino601.request/ns14:Termino/ns15:fecha</to>
                    </copy>
                    <copy>
                      <from>28</from>
                      <to>$inTermino601.request/ns14:Termino/ns15:tipoTermino/ns15:idCatTermino</to>
                    </copy>
                    <copy>
                      <from>true()</from>
                      <to>$inTermino601.request/ns14:esUnico</to>
                    </copy>
                  </assign>
                  <invoke name="Invoke601" bpelx:invokeAsDetail="no" partnerLink="ActualizarTermino"
                          portType="ns13:TerminoPT" operation="crearTermino" inputVariable="inTermino601"
                          outputVariable="outTermino601"/>
                  <if name="IfResultadoTermino">
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <condition>$outTermino601.response/ns14:Resultado/ns7:result!= 'OK'</condition>
                    <sequence name="Sequence16">
                      <assign name="AssignFault">
                        <copy>
                          <from>'-1'</from>
                          <to>$FaultVariable.code</to>
                        </copy>
                        <copy>
                          <from>'Error al actualizar el termino'</from>
                          <to>$FaultVariable.summary</to>
                        </copy>
                        <copy>
                          <from>$outTermino601.response/ns14:Resultado/ns7:message</from>
                          <to>$FaultVariable.detail</to>
                        </copy>
                      </assign>
                      <throw name="ThrowFault" faultName="bpelx:remoteFault" faultVariable="FaultVariable"/>
                    </sequence>
                  </if>
                </sequence>
              </if>
            </sequence>
          </scope>
          <scope name="ScopeActualizarTermino201">
            <variables>
              <variable name="InActualizarTermino" messageType="ns13:CrearTerminoRequestMessage"/>
              <variable name="OutActualizarTermino" messageType="ns13:CrearTerminoResponseMessage"/>
              <variable name="InActualiozarTermino201Comp" messageType="ns13:CrearTerminoRequestMessage"/>
              <variable name="OutActualiozarTermino201comp" messageType="ns13:CrearTerminoResponseMessage"/>
            </variables>
            <faultHandlers>
              <catch faultName="bpelx:remoteFault" faultVariable="FaultVariable"
                     faultMessageType="bpelx:RuntimeFaultMessage">
                <sequence name="Sequence13">
                  <rethrow name="RethrowTermino"/>
                </sequence>
              </catch>
              <catchAll>
                <assign name="AssignFault">
                  <copy>
                    <from>-1</from>
                    <to>$FaultVariable.code</to>
                  </copy>
                  <copy>
                    <from>ora:getFaultAsString()</from>
                    <to>$FaultVariable.summary</to>
                  </copy>
                  <copy>
                    <from>'Error al Actualizar el termino'</from>
                    <to>$FaultVariable.detail</to>
                  </copy>
                </assign>
              </catchAll>
            </faultHandlers>
            <sequence name="Sequence7">
              <assign name="AssignActualizarTermino">
                <copy>
                  <from>$inputVariable.request/ns2:Operacion/ns3:idOperacion</from>
                  <to>$InActualizarTermino.request/ns14:Termino/ns15:operacion</to>
                </copy>
                <copy>
                  <from>26</from>
                  <to>$InActualizarTermino.request/ns14:Termino/ns15:estadoTCC/ns16:id</to>
                </copy>
                <copy>
                  <from>10</from>
                  <to>$InActualizarTermino.request/ns14:Termino/ns15:tipoTermino/ns15:idCatTermino</to>
                </copy>
                <copy>
                  <from>$Monto</from>
                  <to>$InActualizarTermino.request/ns14:Termino/ns15:monto</to>
                </copy>
                <copy>
                  <from>true()</from>
                  <to>$InActualizarTermino.request/ns14:esUnico</to>
                </copy>
                <copy>
                  <from>'Monto-Solicitado'</from>
                  <to>$InActualizarTermino.request/ns14:Termino/ns15:nombre</to>
                </copy>
                <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                  <from>$IdTipoMonedaMontoSolicitado</from>
                  <to>$InActualizarTermino.request/ns14:Termino/ns15:moneda/ns5:Id</to>
                </copy>
              </assign>
              <invoke name="InvokeActualizarTermino" partnerLink="ActualizarTermino" portType="ns13:TerminoPT"
                      operation="crearTermino" inputVariable="InActualizarTermino" outputVariable="OutActualizarTermino"
                      bpelx:invokeAsDetail="no"/>
              <if name="IfActualizarTermino">
                <documentation>
                  <![CDATA[ERROR]]>
                </documentation>
                <condition>$OutActualizarTermino.response/ns14:Resultado/ns7:result!= 'OK'</condition>
                <sequence name="Sequence17">
                  <assign name="AssignFault">
                    <copy>
                      <from>$OutActualizarTermino.response/ns14:Resultado/ns7:message</from>
                      <to>$FaultVariable.detail</to>
                    </copy>
                    <copy>
                      <from>'Error al actualizar el termino'</from>
                      <to>$FaultVariable.summary</to>
                    </copy>
                    <copy>
                      <from>'-1'</from>
                      <to>$FaultVariable.code</to>
                    </copy>
                  </assign>
                  <throw name="ThrowFault" faultName="bpelx:remoteFault" faultVariable="FaultVariable"/>
                </sequence>
              </if>
            </sequence>
          </scope>
        </sequence>
      </else>
    </if>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="actualizaroperacionService" portType="ns1:OperacionPT"
           operation="actualizarOperacion" variable="outputVariable"/>
  </sequence>
</process>