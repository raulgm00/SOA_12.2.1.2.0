<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Sep 02 07:57:50 CST 2015
  Author:  Juan David RamÃ­rez
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="CrearOperacion"
               targetNamespace="http://www.bcie.org/DominioOperacion/CrearOperacion"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://www.bcie.org/DominioOperacion/CrearOperacion"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="http://xmlns.bcie.com/OperacionService"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:ns9="http://www.bcie.org/DeclaracionJuradaBO"
         xmlns:ns3="http://www.bcie.org/OperacionBO" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns6="http://www.bcie.org/CuestionarioBO" xmlns:ns8="http://www.bcie.org/DocumentoBO"
         xmlns:ns7="http://www.bcie.org/PreguntaBO" xmlns:ns2="http://www.bcie.org/OperacionMO"
         xmlns:ns4="http://www.bcie.org/ClienteBO" xmlns:ns5="http://www.bcie.org/HerramientaBO"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns10="http://www.bcie.org/ResultBO" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns11="http://www.bcie.org/ErrorBO" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns12="http://www.bcie.org/CatalogoBO" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns13="http://xmlns.oracle.com/bpmn/bpmnProcess/ProcesosPrincipales"
         xmlns:ns14="http://xmlns.oracle.com/bpmn/bpmnProcess/ProcesosSecundarios"
         xmlns:ns15="http://xmlns.oracle.com/bpmn/bpmnProcess/LavadoActivosProcess"
         xmlns:ns19="http://xmlns.bcie.org/ObjetoProceso/Comun/Parameter/V1"
         xmlns:ns17="http://xmlns.bcie.org/ObjetoProceso/Comun/Operacion/V1"
         xmlns:ns16="http://xmlns.bcie.org/ObjetoProceso/Comun/Header/V1"
         xmlns:ns18="http://xmlns.bcie.org/ObjetoProceso/Comun/Tarea/V1"
         xmlns:ns20="http://xmlns.bcie.com/ClienteService" xmlns:ns21="http://www.bcie.org/ClienteMO"
         xmlns:ns22="http://xmlns.oracle.com/bpmn/bpmnProcess/ProcesosAlternos"
         xmlns:ns23="http://xmlns.oracle.com/bpmn/bpmnProcess/ElegibilidadProcess" xmlns:ns24="urn:ConsultarProcesoBPM"
         xmlns:ns26="http://www.bcie.org/ConsultarProcesoBPMProcesoBO"
         xmlns:ns25="http://www.bcie.org/ConsultarProcesoBPMProcesoMO" xmlns:ns27="http://www.bcie.org/ProductoBO"
         xmlns:ns28="http://www.bcie.org/TerminoService" xmlns:ns30="http://www.bcie.org/TerminoBO"
         xmlns:ns29="http://www.bcie.org/TerminoMO" xmlns:ns31="http://www.bcie.org/AtributoBO"
         xmlns:ns32="http://www.bcie.org/EliminarTerminoService" xmlns:ns33="http://xmlns.bcie.org/ProductoService"
         xmlns:ns34="http://www.bcie.org/ProductoMO" xmlns:ns41="http://www.bcie.org/HerramientaCEBO"
         xmlns:ns35="http://www.bcie.org/DesembolsoBO" xmlns:ns38="http://www.bcie.org/CommonBO"
         xmlns:ns37="http://www.bcie.org/LineaCreditoBO" xmlns:ns39="http://www.bcie.org/CondicionBO"
         xmlns:ns40="http://www.bcie.org/ComisionBO" xmlns:ns36="http://www.bcie.org/ContratoBO"
         xmlns:ns43="http://xmlns.bcie.org/ObjetoProceso/Comun/Proceso/V1"
         xmlns:ns42="http://xmlns.bcie.org/ObjetoProceso/Comun/Cliente/V1">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://schemas.oracle.com/bpel/extension" location="../WSDLs/RuntimeFault.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.oracle.com/bpmn/bpmnProcess/ProcesosPrincipales"
          location="oramds:/apps/Resources/BPM/Wsdl/ProcesosPrincipales.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/ClienteService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioCliente/Cliente/V1/Wsdl/ADAPTER/ConsultarClienteByIdSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.oracle.com/bpmn/bpmnProcess/LavadoActivosProcess"
          location="oramds:/apps/Resources/BPM/Wsdl/PA01/LavadoActivosProcess.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/Operacion/V1/Wsdl/ADAPTER/CrearOperacionAsociadaSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/Operacion/V1/Wsdl/ADAPTER/EliminarOperacionSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://www.bcie.org/OperacionMO"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/Operacion/V1/Schema/OperacionMO.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://xmlns.bcie.com/OperacionService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/Operacion/V1/Wsdl/ADAPTER/CrearOperacionSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService" location="../WSDLs/OperacionWrapper.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="crearoperacion_client" partnerLinkType="ns1:CrearOperacion" myRole="Operacion12Port"/>
    <partnerLink name="CrearOperacionGECCO" partnerLinkType="ns1:CrearOperacionGECCO" partnerRole="Operacion12Port"/>
    <partnerLink name="CrearOperacionPS" partnerLinkType="ns1:CrearOperacionGECCO" partnerRole="Operacion12Port"/>
    <partnerLink name="EliminarOperacionPS" partnerLinkType="ns1:EliminarOperacionPS" partnerRole="Operacion12Port"/>
    <partnerLink name="CrearOperacionAsociadaPS_Service" partnerLinkType="ns1:CrearOperacionAsociadaPS_Service"
                 partnerRole="CrearOperacionAsociada12Port"/>
    <partnerLink name="ProcesosPrincipales_PS" partnerLinkType="ns13:ProcesosPrincipales_PS"
                 partnerRole="ProcesosPrincipalesPortType"/>
    <partnerLink name="ConsultarClienteById_PS" partnerLinkType="ns20:ConsultarClienteById_PS" partnerRole="ClientePT"/>
    <partnerLink name="ProcesosAlternos_PS" partnerLinkType="ns22:ProcesosAlternos_PS"
                 partnerRole="ProcesosAlternosPortType"/>
    <partnerLink name="ConsultarCodExternoBPM" partnerLinkType="ns24:ConsultarCodExternoBPM"
                 partnerRole="ProcesoBPMPT"/>
    <partnerLink name="MontoOperacion" partnerLinkType="ns1:MontoOperacion" partnerRole="CrearMontoOperacionPT"/>
    <partnerLink name="CrearTermino" partnerLinkType="ns28:CrearTermino" partnerRole="TerminoPT"/>
    <partnerLink name="Eliminartermino" partnerLinkType="ns32:Eliminartermino" partnerRole="EliminarTerminoPT"/>
    <partnerLink name="ConsultarProductoByIdOperacion" partnerLinkType="ns33:ConsultarProductoByIdOperacion"
                 partnerRole="ConsultarProductoByIdOperacionPT"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:requestCrearOperacionMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:responseCrearOperacionMessage"/>
    <variable name="Error" type="ns10:Resultado"/>
    <variable name="codigoResponsable" type="xsd:long"/>
    <variable name="idOperacion" type="xsd:long"/>
    <variable name="InConsultarExterno" messageType="ns24:requestConsultarBPMmessage"/>
    <variable name="OutConsultarExterno" messageType="ns24:responseConsultarBPMmessage"/>
    <variable name="InMontoOperacion" messageType="ns1:requestCrearMontoOperacionMessages"/>
    <variable name="OutMontoOperacion" messageType="ns1:responseCrearMontoOperacionMessages"/>
    <variable name="Monto" type="xsd:decimal"/>
    <variable name="setTitleVar" type="xsd:string"/>
    <variable name="faultVar" messageType="bpelx:RuntimeFaultMessage"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="Sequence5">
        <assign name="AssignError">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns2:Resultado/ns10:result</to>
          </copy>
          <copy>
            <from>$faultVar.code</from>
            <to>$outputVariable.response/ns2:Resultado/ns10:error/ns11:errorCode</to>
          </copy>
          <copy>
            <from>$faultVar.detail</from>
            <to>$outputVariable.response/ns2:Resultado/ns10:message</to>
          </copy>
        </assign>
        <compensate name="Compensate"/>
        <reply name="ReplyError" variable="outputVariable" partnerLink="crearoperacion_client"
               portType="ns1:Operacion12Port" operation="crearOperacion"/>
        <exit name="ExitError"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in CrearOperacion.wsdl) -->
    <receive name="receiveInput" partnerLink="crearoperacion_client" portType="ns1:Operacion12Port" operation="crearOperacion" variable="inputVariable" createInstance="yes"/>
    <scope name="ScopeConsultarCliente">
      <variables>
        <variable name="inConsultarClienteById" messageType="ns20:requestConsultarClienteMessageByIdCliente"/>
        <variable name="outConsultarClienteById" messageType="ns20:responseConsultarClienteMessageByIdCliente"/>
      </variables>
      <if name="IfClienteVacio">
        <documentation>
          <![CDATA[Cliente vacio]]>
        </documentation>
        <condition>count($inputVariable.request/ns2:Operacion/ns3:cliente/ns4:idCliente)=0 or string($inputVariable.request/ns2:Operacion/ns3:cliente/ns4:idCliente)=''</condition>
        <sequence name="Sequence14">
          <assign name="AssignErrorClienteRequerido">
            <copy>
              <from>$inputVariable.request/ns2:Operacion</from>
              <to>$outputVariable.response/ns2:Operacion</to>
            </copy>
            <copy>
              <from>'ERROR'</from>
              <to>$outputVariable.response/ns2:Resultado/ns10:result</to>
            </copy>
            <copy>
              <from>'Error creando la operaciÃ³n'</from>
              <to>$outputVariable.response/ns2:Resultado/ns10:message</to>
            </copy>
            <copy>
              <from>'999'</from>
              <to>$outputVariable.response/ns2:Resultado/ns10:error/ns11:errorCode</to>
            </copy>
            <copy>
              <from>'Negocio'</from>
              <to>$outputVariable.response/ns2:Resultado/ns10:error/ns11:errorType</to>
            </copy>
            <copy>
              <from>'El cÃ³digo (id) del cliente es requerido'</from>
              <to>$outputVariable.response/ns2:Resultado/ns10:error/ns11:errorDescription</to>
            </copy>
          </assign>
          <reply name="ReplyClienteRequerido" variable="outputVariable" partnerLink="crearoperacion_client"
                 portType="ns1:Operacion12Port" operation="crearOperacion"/>
          <exit name="ExitClienteRequerido"/>
        </sequence>
        <else>
          <documentation>
            <![CDATA[Cliente correcto]]>
          </documentation>
          <sequence name="Sequence13">
            <assign name="AssignConsultarCliente">
              <copy>
                <from>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:idCliente</from>
                <to>$inConsultarClienteById.request/ns21:idCliente</to>
              </copy>
            </assign>
            <invoke name="InvokeConsultarCliente" partnerLink="ConsultarClienteById_PS"
                    portType="ns20:ClientePT" operation="consultarByIdCliente" inputVariable="inConsultarClienteById"
                    outputVariable="outConsultarClienteById" bpelx:invokeAsDetail="no"/>
            <if name="IfErrorCliente">
              <documentation>
                <![CDATA[Error consultando cliente]]>
              </documentation>
              <condition>string($outConsultarClienteById.response/ns21:Resultado/ns10:result)!='OK'</condition>
              <assign name="AssignErrorConsultandoCliente">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns2:Resultado/ns10:result</to>
                </copy>
                <copy>
                  <from>'Error creando la operaciÃ³n'</from>
                  <to>$outputVariable.response/ns2:Resultado/ns10:message</to>
                </copy>
                <copy>
                  <from>$outConsultarClienteById.response/ns21:Resultado/ns10:error</from>
                  <to>$outputVariable.response/ns2:Resultado/ns10:error</to>
                </copy>
              </assign>
            </if>
            <assign name="AssignCliente">
              <copy bpelx:insertMissingToData="yes">
                <from>$outConsultarClienteById.response/ns21:Cliente/ns4:razonSocial</from>
                <to>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:razonSocial</to>
              </copy>
              <copy bpelx:insertMissingToData="yes">
                <from>$outConsultarClienteById.response/ns21:Cliente/ns4:idFacturador</from>
                <to>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:idFacturador</to>
              </copy>
              <copy bpelx:insertMissingToData="yes">
                <from>$outConsultarClienteById.response/ns21:Cliente/ns4:pais/ns12:Descripcion</from>
                <to>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:pais/ns12:Descripcion</to>
              </copy>
            </assign>
          </sequence>
        </else>
      </if>
    </scope>
    <scope name="ScopeResponsable">
      <sequence>
        <assign name="AssignCodigoResponsable">
          <copy>
            <from>string(ids:getUserProperty($inputVariable.request/ns2:Operacion/ns3:responsable, 'employeenumber'))</from>
            <to>$codigoResponsable</to>
          </copy>
        </assign>
        <assign name="AssignStatus">
          <copy bpelx:insertMissingToData="yes">
            <from>1</from>
            <to>$inputVariable.request/ns2:Operacion/ns3:status</to>
          </copy>
        </assign>
        <if name="IfNoResponsable">
          <documentation>
            <![CDATA[NoResponsable]]>
          </documentation>
          <condition>string($codigoResponsable)=''</condition>
          <sequence name="Sequence9">
            <assign name="AssignError">
              <copy>
                <from>'ERROR'</from>
                <to>$Error/ns10:result</to>
              </copy>
              <copy>
                <from>'999'</from>
                <to>$Error/ns10:error/ns11:errorCode</to>
              </copy>
              <copy>
                <from>concat('No existe codigo de responsable en el OID para el usuario ',$inputVariable.request/ns2:Operacion/ns3:responsable)</from>
                <to>$Error/ns10:message</to>
              </copy>
              <copy>
                <from>concat('No existe codigo de responsable en el OID para el usuario ',$inputVariable.request/ns2:Operacion/ns3:responsable)</from>
                <to>$Error/ns10:error/ns11:errorDescription</to>
              </copy>
              <copy>
                <from>'NEGOCIO'</from>
                <to>$Error/ns10:error/ns11:errorType</to>
              </copy>
            </assign>
            <throw name="ThrowNoResponsable" faultName="bpelx:assertFailure"/>
          </sequence>
        </if>
      </sequence>
    </scope>
    <scope name="Scope3">
      <variables>
        <variable name="MontoCount" type="xsd:int"/>
        <variable name="MontoTotalCount" type="xsd:int"/>
      </variables>
      <sequence>
        <assign name="AssignMontoCount">
          <copy>
            <from>1</from>
            <to>$MontoCount</to>
          </copy>
          <copy>
            <from>count($inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion)</from>
            <to>$MontoTotalCount</to>
          </copy>
        </assign>
        <while name="WhileMontoSolicitado">
          <condition>$MontoCount&lt;=$MontoTotalCount</condition>
          <if name="IfMonto">
            <documentation>
              <![CDATA[Montovalido]]>
            </documentation>
            <condition>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$MontoCount]/ns3:IdTcaTipoMonto=2</condition>
            <sequence name="Sequence19">
              <assign name="AssignMonto">
                <copy>
                  <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$MontoCount]/ns3:monto</from>
                  <to>$Monto</to>
                </copy>
              </assign>
              <assign name="AssignAumentarMonto">
                <copy>
                  <from>$MontoTotalCount + 1</from>
                  <to>$MontoCount</to>
                </copy>
              </assign>
            </sequence>
            <else>
              <documentation>
                <![CDATA[MontoInvalido]]>
              </documentation><assign name="AssignAumentarMonto"
                                      xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
   <copy>
         <from>$MontoCount + 1</from>
         <to>$MontoCount</to>
      </copy></assign>
            </else>
          </if>
        </while>
      </sequence>
    </scope>
    <scope name="ScopeCrearOperacionFenix">
      <variables>
        <variable name="inCrearOperacionPS" messageType="ns1:requestCrearOperacionMessage"/>
        <variable name="outCrearOperacionPS" messageType="ns1:responseCrearOperacionMessage"/>
        <variable name="In_eliminarOperacion_InputVariable" messageType="ns1:requestEliminarOperacionMessage"/>
        <variable name="OutEliminarOperacion" messageType="ns1:responseEliminarOperacionMessage"/>
      </variables>
      <faultHandlers>
        <catch faultName="bpelx:remoteFault" faultVariable="faultVar" faultMessageType="bpelx:RuntimeFaultMessage">
          <rethrow name="RethrowCrearOperacion"/>
        </catch>
        <catchAll>
          <sequence name="Sequence21">
            <assign name="AssignFault">
              <copy>
                <from>'-1'</from>
                <to>$faultVar.code</to>
              </copy>
              <copy>
                <from>ora:getFaultAsString()</from>
                <to>$faultVar.summary</to>
              </copy>
              <copy>
                <from>'Error al crear la OperaciÃ³n en Fenix'</from>
                <to>$faultVar.detail</to>
              </copy>
            </assign>
            <throw name="ThrowFault" faultVariable="faultVar" faultName="bpelx:remoteFault"/>
          </sequence>
        </catchAll>
      </faultHandlers>
      <compensationHandler>
        <sequence name="Sequence22">
          <assign name="AssignEliminarOperacion">
            <copy>
              <from>'false'</from>
              <to>$In_eliminarOperacion_InputVariable.request/ns2:borradoLogico</to>
            </copy>
            <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
              <from>$idOperacion</from>
              <to>$In_eliminarOperacion_InputVariable.request/ns2:Operacion</to>
            </copy>
          </assign>
          <invoke name="InvokeEliminarOperacion" partnerLink="EliminarOperacionPS"
                  portType="ns1:Operacion12Port" operation="eliminarOperacion"
                  inputVariable="In_eliminarOperacion_InputVariable" outputVariable="OutEliminarOperacion"
                  bpelx:invokeAsDetail="no"/>
        </sequence>
      </compensationHandler>
      <sequence name="Sequence3">
        <assign name="AssignCrearOperacionPS">
          <copy>
            <from>$inputVariable.request/ns2:Operacion</from>
            <to>$inCrearOperacionPS.request/ns2:Operacion</to>
          </copy>
          <copy>
            <from>'1'</from>
            <to>$inCrearOperacionPS.request/ns2:Operacion/ns3:status</to>
          </copy>
          <extensionAssignOperation>
            <bpelx:remove>
              <bpelx:target>$inCrearOperacionPS.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion</bpelx:target>
            </bpelx:remove>
          </extensionAssignOperation>
          <copy bpelx:insertMissingToData="yes">
            <from>$Monto</from>
            <to>$inCrearOperacionPS.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion/ns3:monto</to>
          </copy>
        </assign>
        <invoke name="InvokeCrearOperacionPS" bpelx:invokeAsDetail="no" partnerLink="CrearOperacionPS"
                portType="ns1:Operacion12Port" operation="crearOperacion" inputVariable="inCrearOperacionPS"
                outputVariable="outCrearOperacionPS"/>
        <if name="IfError">
          <documentation>
            <![CDATA[Error]]>
          </documentation>
          <condition>string($outCrearOperacionPS.response/ns2:Resultado/ns10:result)!='OK'</condition>
          <sequence name="Sequence4">
            <assign name="AssignError">
              <copy>
                <from>$outCrearOperacionPS.response/ns2:Resultado/ns10:result</from>
                <to>$Error/ns10:result</to>
              </copy>
              <copy>
                <from>$outCrearOperacionPS.response/ns2:Resultado/ns10:error</from>
                <to>$Error/ns10:error</to>
              </copy>
              <copy>
                <from>'Error creando la operaciÃ³n en Fenix'</from>
                <to>$Error/ns10:message</to>
              </copy>
            </assign>
            <throw name="ThrowCrearOperacionPS" faultName="bpelx:remoteFault" faultVariable="faultVar"/>
          </sequence>
          <else>
            <documentation>
              <![CDATA[Creado correctamente]]>
            </documentation>
            <sequence>
              <assign name="AssignIdOperacion">
                <copy>
                  <from>$outCrearOperacionPS.response/ns2:Operacion/ns3:idOperacion</from>
                  <to>$idOperacion</to>
                </copy>
              </assign>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <assign name="AssignConsultarExterno">
      <copy>
        <from>$inputVariable.request/ns2:Operacion/ns3:etapa</from>
        <to>$InConsultarExterno.request/ns25:Etapa/ns26:idEtapa</to>
      </copy>
    </assign>
    <invoke name="InvokeConsultarExterno" partnerLink="ConsultarCodExternoBPM"
            portType="ns24:ProcesoBPMPT" operation="ConsultatBPM" inputVariable="InConsultarExterno"
            outputVariable="OutConsultarExterno" bpelx:invokeAsDetail="no"/>
    <scope name="ScopeTerminos">
      <variables>
        <variable name="InTermino201" messageType="ns28:CrearTerminoRequestMessage"/>
        <variable name="OutTermino201" messageType="ns28:CrearTerminoResponseMessage"/>
        <variable name="IneliminarTermino" messageType="ns32:EliminarTerminoRequestMesage"/>
        <variable name="OuteliminarTermino" messageType="ns32:EliminarTerminoResponseMessage"/>
      </variables>
      <faultHandlers>
        <catch faultName="bpelx:remoteFault" faultVariable="faultVar" faultMessageType="bpelx:RuntimeFaultMessage">
          <rethrow name="RethrowCrearTermino"/>
        </catch>
        <catchAll><sequence name="Sequence31"><assign name="AssignFault"><copy><from>'-1'</from><to>$faultVar.code</to></copy><copy><from>ora:getFaultAsString()</from><to>$faultVar.summary</to></copy><copy><from>'Error al crear el termino monto'</from><to>$faultVar.detail</to></copy></assign><throw name="ThrowFault"
                                                                                                                                                                                                                                                                                                            faultName="bpelx:remoteFault"
                                                                                                                                                                                                                                                                                                            faultVariable="faultVar"
                                                                                                                                                                                                                                                                                                            xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"/></sequence></catchAll>
      </faultHandlers>
      <compensationHandler>
        <sequence name="Sequence23">
          <assign name="AssignEliminar">
            <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
              <from>$OutTermino201.response/ns29:Resultado/ns10:message</from>
              <to>$IneliminarTermino.request/ns29:idTermino</to>
            </copy>
            <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
              <from>'false'</from>
              <to>$IneliminarTermino.request/ns29:borradoLogico</to>
            </copy>
          </assign>
          <invoke name="InvokeEliminar" partnerLink="Eliminartermino"
                  portType="ns32:EliminarTerminoPT" operation="eliminarTermino" inputVariable="IneliminarTermino"
                  outputVariable="OuteliminarTermino" bpelx:invokeAsDetail="no"/>
        </sequence>
      </compensationHandler>
      <sequence name="Sequence20">
        <bpelx:skipCondition>true()</bpelx:skipCondition>
        <assign name="AssignTermino201">
          <copy>
            <from>$idOperacion</from>
            <to>$InTermino201.request/ns29:Termino/ns30:operacion</to>
          </copy>
          <copy>
            <from>26</from>
            <to>$InTermino201.request/ns29:Termino/ns30:estadoTCC/ns31:id</to>
          </copy>
          <copy>
            <from>'Monto-Solicitado'</from>
            <to>$InTermino201.request/ns29:Termino/ns30:nombre</to>
          </copy>
          <copy>
            <from>10</from>
            <to>$InTermino201.request/ns29:Termino/ns30:tipoTermino/ns30:idCatTermino</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:idTcaTipoMoneda</from>
            <to>$InTermino201.request/ns29:Termino/ns30:moneda/ns12:Id</to>
          </copy>
          <copy>
            <from>$Monto</from>
            <to>$InTermino201.request/ns29:Termino/ns30:monto</to>
          </copy>
          <copy>
            <from>true()</from>
            <to>$InTermino201.request/ns29:esUnico</to>
          </copy>
        </assign>
        <invoke name="InvokeTermino201" partnerLink="CrearTermino" portType="ns28:TerminoPT" operation="crearTermino"
                inputVariable="InTermino201" outputVariable="OutTermino201" bpelx:invokeAsDetail="no"/>
        <if name="IfResultadoTermino">
          <documentation>
            <![CDATA[ERROR]]>
          </documentation>
          <condition>$OutTermino201.response/ns29:Resultado/ns10:result!=  'OK'</condition>
          <sequence name="Sequence24">
            <assign name="AssignFault">
              <copy>
                <from>'-1'</from>
                <to>$faultVar.code</to>
              </copy>
              <copy>
                <from>'Error al crear el termino monto'</from>
                <to>$faultVar.summary</to>
              </copy>
              <copy>
                <from>$OutTermino201.response/ns29:Resultado/ns10:message</from>
                <to>$faultVar.detail</to>
              </copy>
            </assign>
            <throw name="ThrowFault" faultName="bpelx:remoteFault" faultVariable="faultVar"/>
          </sequence>
        </if>
      </sequence>
    </scope>
    <scope name="ScopetTermino601">
      <variables>
        <variable name="InTermino601" messageType="ns28:CrearTerminoRequestMessage"/>
        <variable name="OutTermino601" messageType="ns28:CrearTerminoResponseMessage"/>
        <variable name="InEliminarTermino" messageType="ns32:EliminarTerminoRequestMesage"/>
        <variable name="OutEliminarTermino" messageType="ns32:EliminarTerminoResponseMessage"/>
      </variables>
      <faultHandlers>
        <catch faultName="bpelx:remoteFault" faultVariable="faultVar" faultMessageType="bpelx:RuntimeFaultMessage">
          <rethrow name="RethrowcrearTermino"/>
        </catch>
        <catchAll>
          <sequence>
            <assign name="AssignFault">
              <copy>
                <from>'-1'</from>
                <to>$faultVar.code</to>
              </copy>
              <copy>
                <from>ora:getFaultAsString()</from>
                <to>$faultVar.summary</to>
              </copy>
              <copy>
                <from>'Error al crear el termino'</from>
                <to>$faultVar.detail</to>
              </copy>
            </assign>
            <throw name="ThrowFault" faultName="bpelx:remoteFault" faultVariable="faultVar"
                   xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"/>
          </sequence>
        </catchAll>
      </faultHandlers>
      <compensationHandler>
        <sequence name="Sequence25">
          <assign name="AssignEliminarTermino">
            <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
              <from>$OutTermino601.response/ns29:Resultado/ns10:message</from>
              <to>$InEliminarTermino.request/ns29:idTermino</to>
            </copy>
            <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
              <from>'false'</from>
              <to>$InEliminarTermino.request/ns29:borradoLogico</to>
            </copy>
          </assign>
          <invoke name="InvokeEliminarTermino" partnerLink="Eliminartermino"
                  portType="ns32:EliminarTerminoPT" operation="eliminarTermino" inputVariable="InEliminarTermino"
                  outputVariable="OutEliminarTermino" bpelx:invokeAsDetail="no"/>
        </sequence>
      </compensationHandler>
      <sequence>
        <assign name="AssignTermino601">
          <copy>
            <from>$idOperacion</from>
            <to>$InTermino601.request/ns29:Termino/ns30:operacion</to>
          </copy>
          <copy>
            <from>26</from>
            <to>$InTermino601.request/ns29:Termino/ns30:estadoTCC/ns31:id</to>
          </copy>
          <copy>
            <from>28</from>
            <to>$InTermino601.request/ns29:Termino/ns30:tipoTermino/ns30:idCatTermino</to>
          </copy>
          <copy>
            <from>'Fecha-Ingreso OperaciÃ³n'</from>
            <to>$InTermino601.request/ns29:Termino/ns30:nombre</to>
          </copy>
          <copy>
            <from>true()</from>
            <to>$InTermino601.request/ns29:esUnico</to>
          </copy>
          <copy>
            <from>xp20:current-date()</from>
            <to>$InTermino601.request/ns29:Termino/ns30:fecha</to>
          </copy>
        </assign>
        <invoke name="InvokeTermino601" partnerLink="CrearTermino" portType="ns28:TerminoPT"
                operation="crearTermino" inputVariable="InTermino601" outputVariable="OutTermino601"
                bpelx:invokeAsDetail="no"/>
        <if name="IfResultadoCrearTermino">
          <documentation>
            <![CDATA[ERROR]]>
          </documentation>
          <condition>$OutTermino601.response/ns29:Resultado/ns10:result!='OK'</condition>
          <sequence name="Sequence26">
            <assign name="AssignFault">
              <copy>
                <from>'-1'</from>
                <to>$faultVar.code</to>
              </copy>
              <copy>
                <from>'Error al crear el termino'</from>
                <to>$faultVar.summary</to>
              </copy>
              <copy>
                <from>$OutTermino601.response/ns29:Resultado/ns10:message</from>
                <to>$faultVar.detail</to>
              </copy>
            </assign>
            <throw name="ThrowFault" faultName="bpelx:remoteFault" faultVariable="faultVar"/>
          </sequence>
        </if>
      </sequence>
    </scope>
    <scope name="ScopeTermino304">
      <variables>
        <variable name="InTermino304" messageType="ns28:CrearTerminoRequestMessage"/>
        <variable name="OutTermino304" messageType="ns28:CrearTerminoResponseMessage"/>
        <variable name="InEliminaTermino304" messageType="ns32:EliminarTerminoRequestMesage"/>
        <variable name="outEliminaTermino304" messageType="ns32:EliminarTerminoResponseMessage"/>
      </variables>
      <faultHandlers>
        <catch faultName="bpelx:remoteFault" faultVariable="faultVar" faultMessageType="bpelx:RuntimeFaultMessage">
          <rethrow name="RethrowTermino"/>
        </catch>
        <catchAll>
          <sequence>
            <assign name="AssignFault">
              <copy>
                <from>-1</from>
                <to>$faultVar.code</to>
              </copy>
              <copy>
                <from>ora:getFaultAsString()</from>
                <to>$faultVar.summary</to>
              </copy>
              <copy>
                <from>'Error al crear el termino'</from>
                <to>$faultVar.detail</to>
              </copy>
            </assign>
            <throw name="ThrowFault" faultName="bpelx:remoteFault" faultVariable="faultVar"
                   xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"/>
          </sequence>
        </catchAll>
      </faultHandlers>
      <compensationHandler>
        <sequence name="Sequence28">
          <assign name="AssignEliminaTermino">
            <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
              <from>'false'</from>
              <to>$InEliminaTermino304.request/ns29:borradoLogico</to>
            </copy>
            <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
              <from>$OutTermino304.response/ns29:Resultado/ns10:message</from>
              <to>$InEliminaTermino304.request/ns29:idTermino</to>
            </copy>
          </assign>
          <invoke name="InvokeEliminaTermino" partnerLink="Eliminartermino"
                  portType="ns32:EliminarTerminoPT" operation="eliminarTermino" inputVariable="InEliminaTermino304"
                  outputVariable="outEliminaTermino304" bpelx:invokeAsDetail="no"/>
        </sequence>
      </compensationHandler>
      <sequence name="Sequence27">
        <bpelx:skipCondition>true()</bpelx:skipCondition>
        <assign name="AssignTermino304">
          <copy>
            <from>$idOperacion</from>
            <to>$InTermino304.request/ns29:Termino/ns30:operacion</to>
          </copy>
          <copy>
            <from>26</from>
            <to>$InTermino304.request/ns29:Termino/ns30:estadoTCC/ns31:id</to>
          </copy>
          <copy>
            <from>17</from>
            <to>$InTermino304.request/ns29:Termino/ns30:tipoTermino/ns30:idCatTermino</to>
          </copy>
          <copy>
            <from>'Otras Condiciones Financieras-Recursos Concesionales '</from>
            <to>$InTermino304.request/ns29:Termino/ns30:nombre</to>
          </copy>
          <copy>
            <from>true()</from>
            <to>$InTermino304.request/ns29:esUnico</to>
          </copy>
          <copy bpelx:insertMissingToData="yes" ignoreMissingFromData="yes">
            <from>$inputVariable.request/ns2:Operacion/ns3:componenteConcesionalidad</from>
            <to>$InTermino304.request/ns29:Termino/ns30:seAplicanRecursosConcesion</to>
          </copy>
        </assign>
        <invoke name="InvokeTermino304" partnerLink="CrearTermino" portType="ns28:TerminoPT"
                operation="crearTermino" inputVariable="InTermino304" outputVariable="OutTermino304"
                bpelx:invokeAsDetail="no"/>
        <if name="IfResultadoCrearTermino" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      <documentation>
         
      <![CDATA[ERROR]]></documentation>
      <condition>$OutTermino304.response/ns29:Resultado/ns10:result!='OK'</condition>
      <sequence name="Sequence26">
         <assign name="AssignFault">
              <copy>
                <from>'-1'</from>
                <to>$faultVar.code</to>
              </copy>
              <copy>
                <from>'Error al crear el termino'</from>
                <to>$faultVar.summary</to>
              </copy>
              <copy>
                <from>$OutTermino304.response/ns29:Resultado/ns10:message</from>
                <to>$faultVar.detail</to>
              </copy>
            </assign>
         <throw name="ThrowFault" faultName="bpelx:remoteFault" faultVariable="faultVar"/>
      </sequence>
   </if>
      </sequence>
    </scope>
    <scope name="ScopeCrearOperacionGECCO">
      <variables>
        <variable name="inCrearOperacionGECCO" messageType="ns1:requestCrearOperacionMessage"/>
        <variable name="outCrearOperacionGECCO" messageType="ns1:responseCrearOperacionMessage"/>
        <variable name="consultarByIdOperacion_InputVariable" messageType="ns33:requestConsultarByIdOperacionMessage"/>
        <variable name="consultarByIdOperacion_OutputVariable"
                  messageType="ns33:responseConsultarByIdOperacionMessage"/>
      </variables>
      <faultHandlers>
        <catch bpelx:name="Falta" faultName="bpelx:remoteFault">
          <sequence>
            <scope name="ScopeCompensarError">
              <variables>
                <variable name="inEliminarOperacion" messageType="ns1:requestEliminarOperacionMessage"/>
                <variable name="outEliminarOperacion" messageType="ns1:responseEliminarOperacionMessage"/>
              </variables>
              <sequence>
                <assign name="AssignResultadoErrorGECCO">
                  <copy>
                    <from>$Error</from>
                    <to>$outputVariable.response/ns2:Resultado</to>
                  </copy>
                  <copy>
                    <from>'Error creando la operaciÃ³n en GECCO'</from>
                    <to>$outputVariable.response/ns2:Resultado/ns10:message</to>
                  </copy>
                </assign>
                <!--reply name="ReplyErrorGECCO" variable="outputVariable" partnerLink="crearoperacion_client"
                       portType="ns1:Operacion12Port" operation="crearOperacion"/-->
                <rethrow name="RethrowFault"/>
              </sequence>
            </scope>
          </sequence>
        </catch>
      </faultHandlers>
      <sequence name="Sequence1">
        <assign name="AssingConsultarProductoIdOperacion">
          <copy>
            <from>$idOperacion</from>
            <to>$consultarByIdOperacion_InputVariable.request/ns34:idOperacion</to>
          </copy>
        </assign>
        <invoke name="ConsultarProductoByIdOperacion" partnerLink="ConsultarProductoByIdOperacion"
                portType="ns33:ConsultarProductoByIdOperacionPT" operation="consultarByIdOperacion"
                inputVariable="consultarByIdOperacion_InputVariable"
                outputVariable="consultarByIdOperacion_OutputVariable" bpelx:invokeAsDetail="no"/>
        <assign name="AssignCrearOperacionGECCO">
          <copy>
            <from>$inputVariable.request/ns2:Operacion</from>
            <to>$inCrearOperacionGECCO.request/ns2:Operacion</to>
          </copy>
          <extensionAssignOperation>
            <bpelx:remove>
              <bpelx:target>$inCrearOperacionGECCO.request/ns2:Operacion/ns3:montoOperacion</bpelx:target>
            </bpelx:remove>
          </extensionAssignOperation>
          <copy bpelx:insertMissingToData="yes">
            <from>$Monto</from>
            <to>$inCrearOperacionGECCO.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion/ns3:monto</to>
          </copy>
          <copy>
            <from>$OutConsultarExterno.response/ns25:Etapa/ns26:idExterno</from>
            <to>$inCrearOperacionGECCO.request/ns2:Operacion/ns3:etapa</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>$idOperacion</from>
            <to>$inCrearOperacionGECCO.request/ns2:Operacion/ns3:idOperacion</to>
          </copy>
          <copy bpelx:insertMissingToData="yes">
            <from>$codigoResponsable</from>
            <to>$inCrearOperacionGECCO.request/ns2:Operacion/ns3:responsable</to>
          </copy>
          <copy bpelx:insertMissingToData="yes" ignoreMissingFromData="yes">
            <from>$consultarByIdOperacion_OutputVariable.response/ns34:Producto/ns27:codExterno</from>
            <to>$inCrearOperacionGECCO.request/ns2:Operacion/ns3:producto/ns27:codExterno</to>
          </copy>
        </assign>
        <invoke name="InvokeCrearOperacionGECCO" partnerLink="CrearOperacionGECCO"
                portType="ns1:Operacion12Port" operation="crearOperacion" inputVariable="inCrearOperacionGECCO"
                outputVariable="outCrearOperacionGECCO" bpelx:invokeAsDetail="no"/>
        <if name="IfError">
          <documentation>
            <![CDATA[Error]]>
          </documentation>
          <condition>string($outCrearOperacionGECCO.response/ns2:Resultado/ns10:result)!='OK'</condition>
          <sequence name="Sequence2">
            <assign name="AssignError">
              <copy>
                <from>$outCrearOperacionGECCO.response/ns2:Resultado/ns10:result</from>
                <to>$Error/ns10:result</to>
              </copy>
              <copy>
                <from>$outCrearOperacionGECCO.response/ns2:Resultado/ns10:message</from>
                <to>$Error/ns10:message</to>
              </copy>
              <copy>
                <from>$outCrearOperacionGECCO.response/ns2:Resultado/ns10:error</from>
                <to>$Error/ns10:error</to>
              </copy>
            </assign>
            <throw name="ThrowErrorGECCO" faultName="bpelx:remoteFault"/>
          </sequence>
        </if>
      </sequence>
    </scope>
    <scope name="Scope2">
      <variables>
        <variable name="carMonto" type="xsd:unsignedInt"/>
      </variables>
      <sequence name="Sequence18">
        <assign name="AssignCountMonto">
          <copy>
            <from>count($inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion)</from>
            <to>$carMonto</to>
          </copy>
        </assign>
        <forEach parallel="no" counterName="montoOperacionCounter" name="ForEachMontoOperacion">
          <bpelx:skipCondition>$carMonto=0</bpelx:skipCondition>
          <startCounterValue>1</startCounterValue>
          <finalCounterValue>$carMonto</finalCounterValue>
          <completionCondition>
            <branches successfulBranchesOnly="no">count($inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion)</branches>
          </completionCondition>
          <scope name="Scope1">
            <sequence>
              <assign name="AssignMontoOperacion">
                <copy>
                  <from>$idOperacion</from>
                  <to>$InMontoOperacion.request/ns2:MontoOperacion/ns3:idOperacion</to>
                </copy>
                <copy>
                  <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$montoOperacionCounter]/ns3:IdTcaTipoMonto</from>
                  <to>$InMontoOperacion.request/ns2:MontoOperacion/ns3:IdTcaTipoMonto</to>
                </copy>
                <copy>
                  <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$montoOperacionCounter]/ns3:monto</from>
                  <to>$InMontoOperacion.request/ns2:MontoOperacion/ns3:monto</to>
                </copy>
                <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                  <from>$inputVariable.request/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion[$montoOperacionCounter]/ns3:idTcaTipoMonedaMontoOperacion</from>
                  <to>$InMontoOperacion.request/ns2:MontoOperacion/ns3:idTcaTipoMonedaMontoOperacion</to>
                </copy>
              </assign>
              <invoke name="InvokeMontoOperacion" partnerLink="MontoOperacion" portType="ns1:CrearMontoOperacionPT"
                      operation="CrearMontoOperacion" inputVariable="InMontoOperacion"
                      outputVariable="OutMontoOperacion" bpelx:invokeAsDetail="no"/>
            </sequence>
          </scope>
        </forEach>
      </sequence>
    </scope>
    <scope name="ScopeCrearAsociadas">
      <variables>
        <variable name="cantAsociadas" type="xsd:unsignedInt"/>
      </variables>
      <sequence name="Sequence10">
        <assign name="AssignCountAsociadas">
          <copy>
            <from>count($inputVariable.request/ns2:Operacion/ns3:asociadas/ns3:Operacion)</from>
            <to>$cantAsociadas</to>
          </copy>
        </assign>
        <forEach parallel="yes" counterName="contadorAsociadas" name="forOperacionesAsociadas">
          <bpelx:skipCondition>$cantAsociadas=0</bpelx:skipCondition>
          <startCounterValue>1</startCounterValue>
          <finalCounterValue>$cantAsociadas</finalCounterValue>
          <completionCondition>
            <branches>count($inputVariable.request/ns2:Operacion/ns3:asociadas/ns3:Operacion)</branches>
          </completionCondition>
          <scope name="ScopeAsignacionFerEach">
            <variables>
              <variable name="inCrearOperacionAsociada" messageType="ns1:requestCrearOperacionAsociadaMessage"/>
              <variable name="outCrearOperacionAsociada" messageType="ns1:responseCrearOperacionAsociadaMessage"/>
            </variables>
            <sequence name="Sequence11">
              <assign name="AssignCrearOperacionesAsociadas">
                <copy>
                  <from>$inputVariable.request/ns2:Operacion/ns3:asociadas/ns3:Operacion[$contadorAsociadas]</from>
                  <to>$inCrearOperacionAsociada.request/ns2:idOperacionAsociada</to>
                </copy>
                <copy>
                  <from>$idOperacion</from>
                  <to>$inCrearOperacionAsociada.request/ns2:idOperacionPadre</to>
                </copy>
              </assign>
              <invoke name="InvokeCrearAsociadas" bpelx:invokeAsDetail="no"
                      partnerLink="CrearOperacionAsociadaPS_Service" portType="ns1:CrearOperacionAsociada12Port"
                      operation="crearOperacionAsociada" inputVariable="inCrearOperacionAsociada"
                      outputVariable="outCrearOperacionAsociada"/>
            </sequence>
          </scope>
        </forEach>
      </sequence>
    </scope>
    <scope name="ScopeIniciarElegibilidad">
      <variables>
        <variable name="inInicioElegibilidad" messageType="ns13:InicioElegibilidad"/>
        <variable name="outInicioElegibilidad" messageType="ns13:InicioProcesoResponse"/>
      </variables>
      <sequence name="Sequence15">
        <assign name="AssignInicioProcesoElegibilidad">
          <copy>
            <from>$idOperacion</from>
            <to>$inInicioElegibilidad.parameters/ns23:Header/ns16:Operacion/ns17:CodigoOperacion</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:nombre</from>
            <to>$inInicioElegibilidad.parameters/ns23:Header/ns16:Operacion/ns17:NombreOperacion</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:responsable</from>
            <to>$inInicioElegibilidad.parameters/ns23:Header/ns16:Operacion/ns17:ResponsableOperacion</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:idCliente</from>
            <to>$inInicioElegibilidad.parameters/ns23:Header/ns16:Operacion/ns17:CodigoCliente</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:razonSocial</from>
            <to>$inInicioElegibilidad.parameters/ns23:Header/ns16:Operacion/ns17:NombreCliente</to>
          </copy>
          <copy>
            <from>$Monto</from>
            <to>$inInicioElegibilidad.parameters/ns23:Header/ns16:Operacion/ns17:MontoSolicitado</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:producto/ns27:idProducto</from>
            <to>$inInicioElegibilidad.parameters/ns23:Header/ns16:Operacion/ns17:CodigoProducto</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:pais/ns12:Descripcion</from>
            <to>$inInicioElegibilidad.parameters/ns23:Header/ns16:Operacion/ns17:Pais</to>
          </copy>
        </assign>
        <invoke name="InvokeInicioProcesoOperacion" partnerLink="ProcesosPrincipales_PS"
                portType="ns13:ProcesosPrincipalesPortType" operation="InicioElegibilidad"
                inputVariable="inInicioElegibilidad" bpelx:invokeAsDetail="no" outputVariable="outInicioElegibilidad"/>
      </sequence>
    </scope>
    <scope name="ScopeIniciarLAFT">
      <variables>
        <variable name="inInicioProcesoLaft" messageType="ns22:InicioLAFT"/>
        <variable name="outInicioProcesoLaft" messageType="ns22:InicioProcesoResponse"/>
      </variables>
      <faultHandlers>
        <catchAll>
          <empty name="EnviarCorreo"/>
        </catchAll>
      </faultHandlers>
      <sequence name="Sequence12">
        <assign name="AssignInicioProcesoLAFT">
          <copy>
            <from>$idOperacion</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns16:Operacion/ns17:CodigoOperacion</to>
          </copy>
          <copy>
            <from>'USUARIO_SOLICITA_OFIC'</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns19:ParameterType/ns19:parameterName</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:responsable</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns16:Operacion/ns17:ResponsableOperacion</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:responsable</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns19:ParameterType/ns19:parameterValue</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:pais/ns12:Descripcion</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns16:Operacion/ns17:Pais</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:nombre</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns16:Operacion/ns17:NombreOperacion</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:idCliente</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns16:Operacion/ns17:CodigoCliente</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:cliente/ns4:razonSocial</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns16:Operacion/ns17:NombreCliente</to>
          </copy>
          <copy>
            <from>$Monto</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns16:Operacion/ns17:MontoSolicitado</to>
          </copy>
          <copy>
            <from>$inputVariable.request/ns2:Operacion/ns3:producto/ns27:idProducto</from>
            <to>$inInicioProcesoLaft.parameters/ns15:Header/ns16:Operacion/ns17:CodigoProducto</to>
          </copy>
        </assign>
        <invoke name="InvokeInicioProcesoLAFT" partnerLink="ProcesosAlternos_PS"
                portType="ns22:ProcesosAlternosPortType" operation="InicioLAFT" inputVariable="inInicioProcesoLaft"
                bpelx:invokeAsDetail="no" outputVariable="outInicioProcesoLaft"/>
      </sequence>
    </scope>
    <assign name="AssignResultado">
      <copy>
        <from>'OK'</from>
        <to>$outputVariable.response/ns2:Resultado/ns10:result</to>
      </copy>
      <copy>
        <from>concat('OperaciÃ³n creada satisfactoriamente ID: ',$idOperacion)</from>
        <to>$outputVariable.response/ns2:Resultado/ns10:message</to>
      </copy>
    </assign>
    <assign name="AssignsetTitleVar">
      <copy>
        <from>oraext:setFlowInstanceTitle(concat("idOperacion= ",string($outputVariable.response/ns2:Operacion/ns3:idOperacion)))</from>
        <to>$setTitleVar</to>
      </copy>
    </assign>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="crearoperacion_client" portType="ns1:Operacion12Port" operation="crearOperacion" variable="outputVariable"/>
  </sequence>
</process>