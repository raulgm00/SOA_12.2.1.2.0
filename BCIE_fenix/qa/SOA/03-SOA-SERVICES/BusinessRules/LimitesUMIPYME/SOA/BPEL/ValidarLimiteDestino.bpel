<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Apr 06 16:02:24 CDT 2017
  Author:  cesar-huerta
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ValidarLimiteDestino"
               targetNamespace="http://xmlns.oracle.com/BusinessRulesServices/LimitesUMIPYME/ValidarLimiteDestino"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/BusinessRulesServices/LimitesUMIPYME/ValidarLimiteDestino"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="http://www.bcie.org/ValidarLimiteDestinoSOR"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns13="http://www.bcie.org/HerramientaCEBO"
         xmlns:ns10="http://www.bcie.org/DesembolsoBO" xmlns:ns4="http://www.bcie.org/CommonBO"
         xmlns:ns12="http://www.bcie.org/ProductoBO" xmlns:ns16="http://www.bcie.org/MatrizTCCBO"
         xmlns:ns8="http://www.bcie.org/DocumentoBO" xmlns:ns7="http://www.bcie.org/AtributoBO"
         xmlns:ns5="http://www.bcie.org/CatalogoBO" xmlns:ns2="http://www.bcie.org/DesembolsoMO"
         xmlns:ns3="http://www.bcie.org/LineaCreditoBO" xmlns:ns11="http://www.bcie.org/ReglaBO"
         xmlns:ns6="http://www.bcie.org/CondicionBO" xmlns:ns15="http://www.bcie.org/TerminoBO"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns9="http://www.bcie.org/OperacionBO"
         xmlns:ns14="http://www.bcie.org/ComisionBO" xmlns:ns17="http://www.bcie.org/ResultBO"
         xmlns:ns18="http://www.bcie.org/ErrorBO" xmlns:ns19="http://www.bice.org/ActualizarLineaCreditoService"
         xmlns:ns20="http://www.bcie.org/LineaCreditoMO" xmlns:ns22="http://www.bcie.org/DeclaracionJuradaBO"
         xmlns:ns24="http://www.bcie.org/AprobacionBO" xmlns:ns21="http://www.bcie.org/ClienteBO"
         xmlns:ns23="http://www.bcie.org/ContratoBO" xmlns:ns25="http://www.bcie.org/ConsultarDesembolsosByIdSAD"
         xmlns:ns26="http://www.bcie.org/ConsultarImporteTransitoSAD"
         xmlns:ns27="http://www.bcie.org/ConsultarCommitmentSAD"
         xmlns:ns28="http://www.bcie.org/ConsultarSaldoCarteraSAD" xmlns:ns29="http://www.bcie.org/ConsultarFLEXCUBE">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://www.bcie.org/ValidarLimiteDestinoSOR"
          location="../WSDLs/ValidarLimiteDestinoSORWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"
          ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="validarlimitedestino_client" partnerLinkType="ns1:ValidarLimiteDestino" myRole="ValidarLimiteDestinoPT"/>
    <partnerLink name="ConsultarLineaCreditoByIdLineaCredito_SB"
                 partnerLinkType="ns19:ConsultarLineaCreditoByIdLineaCredito_SB"
                 partnerRole="ConsultarLineaCreditoByIdLineaCreditoPT"/>
    <partnerLink name="ConsultaDesembolsoById_SB" partnerLinkType="ns25:ConsultaDesembolsoById_SB"
                 partnerRole="ConsultarDesembolsosById_PT"/>
    <partnerLink name="ConsultarImporteTransito_SB" partnerLinkType="ns26:ConsultarImporteTransito_SB"
                 partnerRole="ConsultarImporteTransito_PT"/>
    <partnerLink name="ConsultarCommitment_SB" partnerLinkType="ns27:ConsultarCommitment_SB"
                 partnerRole="ConsultarCommitment_PT"/>
    <partnerLink name="ConsultarSaldoCartera_SB" partnerLinkType="ns28:ConsultarSaldoCartera_SB"
                 partnerRole="ConsultarSaldoCartera_PT"/>
    <partnerLink name="ConsultarFLEXCUBE_SB" partnerLinkType="ns29:ConsultarFLEXCUBE_SB"
                 partnerRole="ConsultarFLEXCUBE_PT"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:requestValidarLimiteDestinoMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:responseValidarLimiteDestinoMessage"/>
    <variable name="setTitleVar" type="xsd:string"/>
    <variable name="inConsultarLineaCreditoByIdLineaCredito"
              messageType="ns19:ConsultarLineaCreditoByIdLineaCreditoRequestMessage"/>
    <variable name="outConsultarLineaCreditoByIdLineaCredito"
              messageType="ns19:ConsultarLineaCreditoByIdLineaCreditoResponseMessage"/>
    <variable name="inConsultaDesembolsoById" messageType="ns25:requestConsultarDesembolsosByIdMessage"/>
    <variable name="outinConsultaDesembolsoById" messageType="ns25:responseConsultarDesembolsosByIdMessage"/>
    <variable name="inConsultarImporteTransito" messageType="ns26:requestConsultarImporteTransitoMessage"/>
    <variable name="outConsultarImporteTransito" messageType="ns26:responseConsultarImporteTransitoMessage"/>
    <variable name="saldoTransito" type="xsd:double">
      <from>0.0</from>
    </variable>
    <variable name="inConsultarCommitment" messageType="ns27:requestConsultarCommitmentMessage"/>
    <variable name="outConsultarCommitment" messageType="ns27:responseConsultarCommitmentMessage"/>
    <variable name="montoAprobado" type="xsd:double">
      <from>0.0</from>
    </variable>
    <variable name="inConsultarSaldoCartera" messageType="ns28:requestConsultarSaldoCarteraMessage"/>
    <variable name="outConsultarSaldoCartera" messageType="ns28:responseConsultarSaldoCarteraMessage"/>
    <variable name="numeroLineaCredito" type="xsd:string"/>
    <variable name="inConsultarContrato" messageType="ns29:requestConsultarFLEXCUBEMessage"/>
    <variable name="outConsultarContrato" messageType="ns29:responseConsultarFLEXCUBEMessage"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="SequenceFault">
        <assign name="AssignFault">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
          </copy>
          <copy>
            <from>oraext:setFlowInstanceTitle(concat("idLineaCredito: ",string($inputVariable.request/ns2:LineaCredito/ns3:idLineaCredito)))</from>
            <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
          </copy>
        </assign>
        <reply name="ReplyFault" variable="outputVariable" partnerLink="validarlimitedestino_client"
               portType="ns1:ValidarLimiteDestinoPT" operation="validarLimiteDestino"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ValidarLimiteDestino.wsdl) -->
    <receive name="receiveInput" partnerLink="validarlimitedestino_client" portType="ns1:ValidarLimiteDestinoPT" operation="validarLimiteDestino" variable="inputVariable" createInstance="yes"/>
    <assign name="setTitleInstance">
      <copy>
        <from>oraext:setFlowInstanceTitle(concat("idLineaCredito: ",string($inputVariable.request/ns2:LineaCredito/ns3:idLineaCredito)))</from>
        <to>$setTitleVar</to>
      </copy>
    </assign>
    <sequence name="SequenceConsultarLineaCredito">
      <assign name="AssignRequestConsultarLineaCreditoByIdLineaCredito">
        <copy>
          <from>$inputVariable.request/ns2:LineaCredito/ns3:idLineaCredito</from>
          <to>$inConsultarLineaCreditoByIdLineaCredito.request/ns20:idLineaCredito</to>
        </copy>
      </assign>
      <invoke name="InvokeConsultarLineaCreditoByIdLineaCredito" bpelx:invokeAsDetail="no"
              partnerLink="ConsultarLineaCreditoByIdLineaCredito_SB"
              portType="ns19:ConsultarLineaCreditoByIdLineaCreditoPT" operation="consultarLineaCreditoByIdLineaCredito"
              inputVariable="inConsultarLineaCreditoByIdLineaCredito"
              outputVariable="outConsultarLineaCreditoByIdLineaCredito"/>
      <if name="IfValidaOK">
        <documentation>
          <![CDATA[OK]]>
        </documentation>
        <condition>$outConsultarLineaCreditoByIdLineaCredito.response/ns20:Resultado/ns17:result = 'OK'</condition>
        <empty name="Empty"/>
        <else>
          <documentation>
            <![CDATA[ERROR]]>
          </documentation>
          <sequence name="SequenceErrorConsultarLineaCreditoByIdLineaCredito">
            <assign name="ErrorConsultaLineaCredito">
              <copy>
                <from>'NO_EVALUADA'</from>
                <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
              </copy>
              <copy>
                <from>'OK'</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
              </copy>
              <copy>
                <from>concat('ConsultarLineaCreditoByIdLineaCredito ',$outConsultarLineaCreditoByIdLineaCredito.response/ns20:Resultado/ns17:error/ns18:errorCode, ' , ',$outConsultarLineaCreditoByIdLineaCredito.response/ns20:Resultado/ns17:error/ns18:errorDescription )</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
              </copy>
            </assign>
            <reply name="ReplyeErrorConsultarLineaCreditoByIdLineaCredito" variable="outputVariable"
                   partnerLink="validarlimitedestino_client" portType="ns1:ValidarLimiteDestinoPT"
                   operation="validarLimiteDestino"/>
            <exit name="Exit"/>
          </sequence>
        </else>
      </if>
    </sequence>
    <sequence name="SequenceConsultarDesembolso">
      <assign name="AssignRequestConsultaDesembolsoById">
        <copy>
          <from>$inputVariable.request/ns2:LineaCredito/ns3:ContratoDesembolso/ns10:idDesembolso</from>
          <to>$inConsultaDesembolsoById.request/ns2:idContratoDesembolso</to>
        </copy>
      </assign>
      <invoke name="InvokeConsultaDesembolsoById" bpelx:invokeAsDetail="no" partnerLink="ConsultaDesembolsoById_SB"
              portType="ns25:ConsultarDesembolsosById_PT" operation="ConsultarDesembolsosById"
              inputVariable="inConsultaDesembolsoById" outputVariable="outinConsultaDesembolsoById"/>
      <if name="IfValidaOK">
        <documentation>
          <![CDATA[OK]]>
        </documentation>
        <condition>$outinConsultaDesembolsoById.response/ns2:Resultado/ns17:result = 'OK' and count($outinConsultaDesembolsoById.response/ns2:ContratoDesembolso) &gt;0</condition>
        <if name="IfOKDestino">
          <documentation>
            <![CDATA[NoDestino]]>
          </documentation>
          <condition> $outinConsultaDesembolsoById.response/ns2:ContratoDesembolso/ns10:Programa/ns13:DestinoFinanciamiento/ns5:codigoExterno = ''</condition>
          <sequence name="SequenceDesembolsoSinDestino">
            <assign name="responseNoDestino">
              <copy>
                <from>'NO_EVALUADA'</from>
                <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
              </copy>
              <copy>
                <from>'No se tiene  destino financiaro'</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
              </copy>
              <copy>
                <from>'OK'</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
              </copy>
            </assign>
            <reply name="ReplyNoDestino" variable="outputVariable" partnerLink="validarlimitedestino_client"
                   portType="ns1:ValidarLimiteDestinoPT" operation="validarLimiteDestino"/>
            <exit name="Exit"/>
          </sequence>
          <else>
            <documentation>
              <![CDATA[Destino]]>
            </documentation>
            <empty name="Empty"/>
          </else>
        </if>
        <else>
          <documentation>
            <![CDATA[ERROR]]>
          </documentation>
          <sequence name="SequenceFaultConsultaDesembolsoById">
            <assign name="ErrorConsultaDesembolsoById">
              <copy>
                <from>'NO_EVALUADA'</from>
                <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
              </copy>
              <copy>
                <from>'OK'</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
              </copy>
              <copy>
                <from>concat('ConsultarDesembolsoByIdDesemdolso:  ',$outinConsultaDesembolsoById.response/ns2:Resultado/ns17:error/ns18:errorCode,' , ',$outinConsultaDesembolsoById.response/ns2:Resultado/ns17:error/ns18:errorDescription)</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
              </copy>
            </assign>
            <reply name="ReplyErrorConsultaDesembolsoById" variable="outputVariable"
                   partnerLink="validarlimitedestino_client" portType="ns1:ValidarLimiteDestinoPT"
                   operation="validarLimiteDestino"/>
            <exit name="Exit"/>
          </sequence>
        </else>
      </if>
    </sequence>
    <sequence name="SequenceConsultarImporteTransito">
      <assign name="XQ_ConsultarLineaCredito_And_ConsultarDesembolso_To_ConsultarImporteTransito">
        <bpelx:annotation>
          <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
        </bpelx:annotation>
        <copy>
          <from>ora:processXQuery10('../Transformations/ConsultarLineaCredito_AND_ConsultarDesembolso_TO_ConsultarImporteTransito.xqy', 'outConsultarLineaCreditoByIdLineaCredito.response', $outConsultarLineaCreditoByIdLineaCredito.response, 'outinConsultaDesembolsoById.response', $outinConsultaDesembolsoById.response)</from>
          <to variable="inConsultarImporteTransito" part="request"/>
        </copy>
      </assign>
      <invoke name="InvokeConsultarImporteTransito" bpelx:invokeAsDetail="no" partnerLink="ConsultarImporteTransito_SB"
              portType="ns26:ConsultarImporteTransito_PT" operation="ConsultarImporteTransito"
              inputVariable="inConsultarImporteTransito" outputVariable="outConsultarImporteTransito"/>
      <if name="IfValidaOK">
        <documentation>
          <![CDATA[OK]]>
        </documentation>
        <condition>$outConsultarImporteTransito.response/ns20:Resultado/ns17:result = 'OK'</condition>
        <empty name="Empty"/>
        <else>
          <documentation>
            <![CDATA[ERROR]]>
          </documentation>
          <sequence name="SequenceFaultConsultaImporteTransito">
            <assign name="ErrorConsultaSaldoTransito">
              <copy>
                <from>'NO_EVALUADA'</from>
                <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
              </copy>
              <copy>
                <from>'OK'</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
              </copy>
              <copy>
                <from>concat('ConsultarImporteTransito:  ', $outConsultarImporteTransito.response/ns20:Resultado/ns17:error/ns18:errorCode, ',  ',$outConsultarImporteTransito.response/ns20:Resultado/ns17:error/ns18:errorDescription)</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
              </copy>
            </assign>
            <reply name="ReplyErrorConsultandoSaldoTransito" variable="outputVariable"
                   partnerLink="validarlimitedestino_client" portType="ns1:ValidarLimiteDestinoPT"
                   operation="validarLimiteDestino"/>
            <exit name="Exit"/>
          </sequence>
        </else>
      </if>
      <forEach parallel="no" counterName="CounterDesembolsos" name="ForEachDesembolsosImporteTrnasito">
        <startCounterValue>1</startCounterValue>
        <finalCounterValue>count($outConsultarImporteTransito.response/ns20:LineaCredito/ns3:ContratoDesembolso)</finalCounterValue>
        <scope name="ScopeImpoteTrnasito">
          <variables>
            <variable name="montoTrnasitoDVM" type="xsd:double">
              <from>0.0</from>
            </variable>
          </variables>
          <faultHandlers>
            <catchAll>
              <sequence name="SequenceErrorForDVM">
                <assign name="FaultMessage">
                  <copy>
                    <from>'NO_EVALUADA'</from>
                    <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
                  </copy>
                  <copy>
                    <from>'OK'</from>
                    <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
                  </copy>
                  <copy>
                    <from>'Consultar saldo tránsito DVM'</from>
                    <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
                  </copy>
                </assign>
                <reply name="ReplyFaultForDVM" variable="outputVariable" partnerLink="validarlimitedestino_client"
                       portType="ns1:ValidarLimiteDestinoPT" operation="validarLimiteDestino"/>
                <exit name="Exit"/>
              </sequence>
            </catchAll>
          </faultHandlers>
          <sequence name="SequenceForEstadosDesembolsos">
            <if name="IfValidaEstadoDesembolsos">
              <documentation>
                <![CDATA[SumaMonto]]>
              </documentation>
              <condition>$outConsultarImporteTransito.response/ns20:LineaCredito/ns3:ContratoDesembolso[$CounterDesembolsos]/ns10:estado/ns5:Id =13 or$outConsultarImporteTransito.response/ns20:LineaCredito/ns3:ContratoDesembolso[$CounterDesembolsos]/ns10:estado/ns5:Id =14 or$outConsultarImporteTransito.response/ns20:LineaCredito/ns3:ContratoDesembolso[$CounterDesembolsos]/ns10:estado/ns5:Id =15</condition>
              <sequence name="SequenceValidaDVM">
                <if name="IfValidaDVM">
                  <documentation>
                    <![CDATA[OkDVM]]>
                  </documentation>
                  <condition>dvm:lookupValue("oramds:/apps/Resources/ComponentesComunes/DominioDesembolso/Desembolso/V1/DVM/Destino.dvm","Codigo",$outConsultarImporteTransito.response/ns20:LineaCredito/ns3:ContratoDesembolso[$CounterDesembolsos]/ns10:Programa/ns13:DestinoFinanciamiento/ns5:codigoExterno,"TipoCategoria","NotFound")= 'CAPITAL_TRABAJO'</condition>
                  <assign name="assingMontoTransito">
                    <copy>
                      <from>$montoTrnasitoDVM + $outConsultarImporteTransito.response/ns20:LineaCredito/ns3:ContratoDesembolso/ns10:monto/ns4:importe </from>
                      <to>$montoTrnasitoDVM</to>
                    </copy>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[NoDVM]]>
                    </documentation>
                    <sequence name="Sequence1">
                      <assign name="AssignCUMPLIDA">
                        <copy>
                          <from>'CUMPLIDA'</from>
                          <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
                        </copy>
                        <copy>
                          <from>'Regla cumplida'</from>
                          <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
                        </copy>
                        <copy>
                          <from>'OK'</from>
                          <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
                        </copy>
                      </assign>
                      <reply name="Reply_CUMPLIDA" variable="outputVariable"
                             partnerLink="validarlimitedestino_client" portType="ns1:ValidarLimiteDestinoPT"
                             operation="validarLimiteDestino"/>
                      <exit name="Exit_NE"/>
                    </sequence>
                  </else>
                </if>
              </sequence>
              <else>
                <documentation>
                  <![CDATA[NoSumaMonto]]>
                </documentation>
                <empty name="Empty"/>
              </else>
            </if>
            <if name="IfEstadoDesembolsoIn">
              <documentation>
                <![CDATA[OK]]>
              </documentation>
              <condition>$outinConsultaDesembolsoById.response/ns2:ContratoDesembolso/ns10:estado/ns5:Id = '6' or$outinConsultaDesembolsoById.response/ns2:ContratoDesembolso/ns10:estado/ns5:Id = '7' or$outinConsultaDesembolsoById.response/ns2:ContratoDesembolso/ns10:estado/ns5:Id = '8'</condition>
              <assign name="SumaDesembolso">
                <copy>
                  <from>$montoTrnasitoDVM +    $outinConsultaDesembolsoById.response/ns2:ContratoDesembolso/ns10:monto/ns4:importe</from>
                  <to>$montoTrnasitoDVM</to>
                </copy>
              </assign>
              <else>
                <empty name="Empty"/>
              </else>
            </if>
            <assign name="AssignSaldoTransito">
              <copy>
                <from>$montoTrnasitoDVM</from>
                <to>$saldoTransito</to>
              </copy>
            </assign>
          </sequence>
        </scope>
      </forEach>
    </sequence>
    <sequence name="SequenceConsultarCommitment">
      <assign name="requestConsultarContrato">
        <copy>
          <from>$outConsultarLineaCreditoByIdLineaCredito.response/ns20:Operacion/ns9:contrato/ns23:LineaCredito/ns3:Flexcube/ns3:id</from>
          <to>$inConsultarContrato.request/ns20:codigoContrato</to>
        </copy>
        <copy>
          <from>'LINEA'</from>
          <to>$inConsultarContrato.request/ns20:nivelDetalle</to>
        </copy>
      </assign>
      <invoke name="InvokeConsultarContrato"
              inputVariable="inConsultarContrato" outputVariable="outConsultarContrato" bpelx:invokeAsDetail="no"
              partnerLink="ConsultarFLEXCUBE_SB" portType="ns29:ConsultarFLEXCUBE_PT" operation="ConsultarFLEXCUBE"/>
      <if name="IfOKConsultaContrato">
        <documentation>
          <![CDATA[OK]]>
        </documentation>
        <condition>$outConsultarContrato.response/ns20:Resultado/ns17:result = 'OK'</condition>
        <assign name="montoAprobado">
          <copy>
            <from>$outConsultarContrato.response/ns20:TipoContrato/ns3:LineaCredito/ns3:MontoLinea  * .25</from>
            <to>$montoAprobado</to>
          </copy>
        </assign>
        <else>
          <documentation>
            <![CDATA[ERROR]]>
          </documentation>
          <sequence name="SequenceFaultConsultaCommitment">
            <assign name="ErrorConsultaCommitment">
              <copy>
                <from>'CUMPLIDA'</from>
                <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
              </copy>
              <copy>
                <from>'OK'</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
              </copy>
              <copy>
                <from>concat('ConsultarContrato ', $outConsultarContrato.response/ns20:Resultado/ns17:error/ns18:errorCode, ' , ',$outConsultarContrato.response/ns20:Resultado/ns17:error/ns18:errorDescription,' , ', $outConsultarContrato.response/ns20:Resultado/ns17:message)</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
              </copy>
            </assign>
            <reply name="ReplyFaultConsultaCommitment" variable="outputVariable"
                   partnerLink="validarlimitedestino_client" portType="ns1:ValidarLimiteDestinoPT"
                   operation="validarLimiteDestino"/>
            <exit name="Exit"/>
          </sequence>
        </else>
      </if>
    </sequence>
    <sequence name="SequenceConsultarSaldoCartera">
      <assign name="rerquestConsutlarSaldoCartera">
        <copy>
          <from>string($outConsultarLineaCreditoByIdLineaCredito.response/ns20:Operacion/ns9:contrato/ns23:LineaCredito/ns3:NumeroLineaCredito)</from>
          <to>$inConsultarSaldoCartera.request/ns2:SaldoCartera/ns3:idLineaCredito</to>
        </copy>
        <copy>
          <from>string(dvm:lookupValue("oramds:/apps/Resources/ComponentesComunes/DominioDesembolso/Desembolso/V1/DVM/Destino.dvm","Codigo",$outinConsultaDesembolsoById.response/ns2:ContratoDesembolso/ns10:Programa/ns13:DestinoFinanciamiento/ns5:codigoExterno,"TipoCategoria","NotFound"))</from>
          <to>$inConsultarSaldoCartera.request/ns2:SaldoCartera/ns10:ListaDestino</to>
        </copy>
      </assign>
      <invoke name="InvokeConsultarSaldoCartera" bpelx:invokeAsDetail="no" partnerLink="ConsultarSaldoCartera_SB"
              portType="ns28:ConsultarSaldoCartera_PT" operation="ConsultarSaldoCartera"
              inputVariable="inConsultarSaldoCartera" outputVariable="outConsultarSaldoCartera"/>
      <if name="IfValidaOK">
        <documentation>
          <![CDATA[OK]]>
        </documentation>
        <condition>$outConsultarSaldoCartera.response/ns2:Resultado/ns17:result = 'OK'</condition>
        <empty name="Empty"/>
        <else>
          <documentation>
            <![CDATA[ERROR]]>
          </documentation>
          <sequence name="SequenceErrorConsultaSaldoCartera">
            <assign name="ErrorConsultaSaldoCartera">
              <copy>
                <from>'NO_EVALUADA'</from>
                <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
              </copy>
              <copy>
                <from>'OK'</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
              </copy>
              <copy>
                <from>concat('ConsultarSaldoCartera ', $outConsultarSaldoCartera.response/ns2:Resultado/ns17:message)</from>
                <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
              </copy>
            </assign>
            <reply name="ReplyFaulCaonsultarSaldoCartera" variable="outputVariable"
                   partnerLink="validarlimitedestino_client" portType="ns1:ValidarLimiteDestinoPT"
                   operation="validarLimiteDestino"/>
            <exit name="Exit"/>
          </sequence>
        </else>
      </if>
    </sequence>
    <sequence name="SequenceValidaReglaLimiteDestino">
      <if name="IfValidaRegla">
        <documentation>
          <![CDATA[CUMPLIDA]]>
        </documentation>
        <condition>$montoAprobado &gt;= ($saldoTransito + $outConsultarSaldoCartera.response/ns2:Monto/ns4:importe)</condition>
        <assign name="CUMPLIDA">
          <copy>
            <from>'CUMPLIDA'</from>
            <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
          </copy>
          <copy>
            <from>'Regla cumplida'</from>
            <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
          </copy>
          <copy>
            <from>'OK'</from>
            <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
          </copy>
        </assign>
        <else>
          <documentation>
            <![CDATA[NO_CUMPLIDA]]>
          </documentation>
          <assign name="NO_CUMPLIDA">
            <copy>
              <from>'NO_CUMPLIDA'</from>
              <to>$outputVariable.response/ns2:Regla/ns11:Estado/ns5:DescripcionCorta</to>
            </copy>
            <copy>
              <from>'Regla no cumplida'</from>
              <to>$outputVariable.response/ns2:Resultado/ns17:message</to>
            </copy>
            <copy>
              <from>'OK'</from>
              <to>$outputVariable.response/ns2:Resultado/ns17:result</to>
            </copy>
          </assign>
        </else>
      </if>
    </sequence>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="validarlimitedestino_client" portType="ns1:ValidarLimiteDestinoPT" operation="validarLimiteDestino" variable="outputVariable"/>
  </sequence>
</process>