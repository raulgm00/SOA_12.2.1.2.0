<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Dec 08 16:17:04 CST 2015
  Author:  francisco-taboada
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ConfiguracionCancelarOperacion"
               targetNamespace="http://xmlns.oracle.com/ConfiguracionProcesos/ConfiguracionCancelarOperacion/ConfiguracionCancelarOperacion"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/ConfiguracionProcesos/ConfiguracionCancelarOperacion/ConfiguracionCancelarOperacion"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="http://xmlns.bcie.com/ConfiguracionProcesosService"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:ns2="http://xmlns.bcie.com/ProductoService"
               xmlns:ns3="http://www.bcie.org/ConfiguracionProcesosMO"
               xmlns:ns4="http://www.bcie.org/ProductoMO"
               xmlns:ns5="http://www.bcie.org/ProductoBO" 
               xmlns:ns12="http://www.bcie.org/ConfiguracionProcesosBO"
               xmlns:ns9="http://www.bcie.org/DeclaracionJuradaBO" 
               xmlns:ns6="http://www.bcie.org/OperacionBO"
               xmlns:ns10="http://www.bcie.org/ResultBO" 
               xmlns:ns8="http://www.bcie.org/CatalogoBO"
               xmlns:ns7="http://www.bcie.org/ClienteBO"
               xmlns:ns11="http://www.bcie.org/ErrorBO"
               xmlns:ns13="http://www.bcie.com/ConsultarRolesPorProceso"
               xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
               xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
               xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
               xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
               xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
               xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
               xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
               xmlns:ess="http://xmlns.oracle.com/scheduler"
               xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
               xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
               xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
               xmlns:ns14="http://www.bcie.org/ConsultarRolesPorProcesoMO"
               xmlns:ns15="http://www.bcie.org/ConsultarRolesPorProcesoBO"
               xmlns:xsd="http://www.w3.org/2001/XMLSchema"
               xmlns:ns16="http://xmlns.bcie.com/UsuarioService" 
               xmlns:ns17="http://www.bcie.org/UsuarioMO"
               xmlns:ns18="http://www.bcie.org/UsuarioBO"
               xmlns:ns19="urn:ConsultarEnmiendasTCCByIdOperacionSAD"
               xmlns:ns20="http://xmlns.bcie.com/ComisionService"
               xmlns:ns21="http://www.bcie.org/MatrizTCCBO"
               xmlns:ns22="http://www.bcie.org/ComisionBO" 
               xmlns:ns23="http://www.bcie.org/AtributoBO"
               xmlns:ns24="http://www.bcie.org/MatrizTCCMO" 
               xmlns:ns25="http://www.bcie.org/ComisionMO"
               xmlns:ns34="http://www.bcie.org/ReglaBO" 
               xmlns:ns36="http://www.bcie.org/AdquisicionBO"
               xmlns:ns29="http://www.bcie.org/CondicionBO" 
               xmlns:ns30="http://www.bcie.org/TerminoBO"
               xmlns:ns26="http://www.bcie.org/DesembolsoBO"
               xmlns:ns35="http://www.bcie.org/DocumentoBO"
               xmlns:ns28="http://www.bcie.org/LineaCreditoBO"
               xmlns:ns32="http://www.bcie.org/HerramientaCEBO"
               xmlns:ns31="http://www.bcie.org/CommonBO"
               xmlns:ns33="http://www.bcie.org/ImplementacionPctBO"
               xmlns:ns27="http://www.bcie.org/ContratoBO" 
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:ns37="http://www.bcie.org/ConsultarImplementacionLoteSAD"
               xmlns:ns38="http://www.bcie.org/ConsultarSolicitudDesembolsoSAD"
               xmlns:ns39="http://www.bcie.org/CondicionService"
               xmlns:ns40="http://www.bcie.org/ConsultarAdquisicion"
               xmlns:ns41="http://www.bcie.org/ImplementacionPctMO" 
               xmlns:ns42="http://www.bcie.org/DesembolsoMO"
               xmlns:ns43="http://www.bcie.org/CondicionMO"
               xmlns:ns44="http://www.bcie.org/AdquisicionMO" 
               xmlns:ns45="http://www.bcie.org/ConsultarNoObjecion"
         xmlns:ns46="http://www.bcie.org/ConsultarBitacoraProcesoOperacion"
         xmlns:ns47="http://www.bcie.org/CrearBitacoraProcesoBO"
         xmlns:ns48="http://www.bcie.org/CrearBitacoraProcesoMO"
         >

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://xmlns.bcie.com/ConfiguracionProcesosService"
          location="oramds:/apps/Resources/ComponentesComunes/Utilidades/ConfiguracionProcesos/V1/WSDL/BPEL/ConfiguracionCancelarOperacionSOR.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/ConfiguracionProcesosService"
          location="../WSDLs/ConfiguracionCancelarOperacionSORWrapper.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/" 
          ui:processWSDL="true"/>
          
  <partnerLinks>
    <partnerLink name="configuracioncancelaroperacion_client" partnerLinkType="ns1:ConfiguracionCancelarOperacion" myRole="ConfiguracionCancelarOperacionPT"/>
    <partnerLink name="ConsultarProductoOperacion" partnerLinkType="ns2:ConsultarProductoOperacion" partnerRole="ProductoPT"/>
    <partnerLink name="ConsultarRoles" partnerLinkType="ns13:ConsultarRoles"  partnerRole="ConsultarRolesPorProceso_ptt"/>
    <partnerLink name="ConsultatRolEnGrupo" partnerLinkType="ns16:ConsultatRolEnGrupo" partnerRole="UsuarioPT"/>
    <partnerLink name="ConsultarEnmiendasTCCByIdOperacion" partnerLinkType="ns19:ConsultarEnmiendasTCCByIdOperacion" partnerRole="ConsultarEnmiendasTCCByIdOperacionPT"/>
    <partnerLink name="ConsultarComision" partnerLinkType="ns20:ConsultarComision" partnerRole="ConsultarComisionPT"/>
    <partnerLink name="ConsultarImplementacionLote_BS" partnerLinkType="ns37:ConsultarImplementacionLote_BS" partnerRole="ConsultarImplemetacionLote_PT"/>
    <partnerLink name="ConsultarSolicitudDesembolso_BS" partnerLinkType="ns38:ConsultarSolicitudDesembolso_BS"  partnerRole="ConsultarSolicitudDesembolso_PT"/>
    <partnerLink name="ConsultarTransaccionCondicion_SB" partnerLinkType="ns39:ConsultarTransaccionCondicion_SB" partnerRole="ConsultarTransaccionCondicionPT"/>
    <partnerLink name="ConsultarAdquisicion_BS" partnerLinkType="ns40:ConsultarAdquisicion_BS"  partnerRole="ConsultarAdquisicionPT"/>
    <partnerLink name="ConsultarNoObjecionById_BS" partnerLinkType="ns45:ConsultarNoObjecionById_BS" partnerRole="ConsultarNoObjecionPT"/>
    <partnerLink name="ConsultarBitacoraProcesoOperacion_BS" partnerLinkType="ns46:ConsultarBitacoraProcesoOperacion_BS"
                 partnerRole="ConsultarBitacoraProcesoOperacionPT"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  
  <variables>
    <variable name="inputVariable" messageType="ns1:requestconfiguracionCancelarOperacionmessage"/>
    <variable name="outputVariable" messageType="ns1:responseconfiguracionCancelarOperacionmessage"/>
    <variable name="ConsultarProductoIn" messageType="ns2:requestConsultarByIdOperacionMessage"/>
    <variable name="ConsultarProductoOut" messageType="ns2:responseConsultarByIdOperacionMessage"/>
    <variable name="setTitleVar" type="xsd:string"/>
    <variable name="inConsultarImplementacionLote" messageType="ns37:requestConsultarImplementacionLoteMessage"/>
    <variable name="outConsultarImplementacionLote" messageType="ns37:responseConsultarImplementacionLoteMessage"/>
    <variable name="inConsultarSolicitudDesembolso" messageType="ns38:requestConsultarSolicitudDesembolsoMessage"/>
    <variable name="outConsultarSolicitudDesembolso" messageType="ns38:responseConsultarSolicitudDesembolsoMessage"/>
    <variable name="inConsultarTransaccionCondicion" messageType="ns39:ConsultarTransaccionCondicionRequesMessage"/>
    <variable name="outConsultarTransaccionCondicion_SB"  messageType="ns39:ConsultarTransaccionCondicionResponseMessage"/>
    <variable name="inConsultarAdquisicion" messageType="ns40:requestConsultarAdquisicionMessage"/>
    <variable name="outConsultarAdquisicion" messageType="ns40:responseConsultarAdquisicionMessage"/>
    <variable name="outImplementacion" messageType="ns1:responseconfiguracionCancelarOperacionmessage"/>
    <variable name="inConsultarNoObjecion" messageType="ns45:requestConsultarNoObjecionMessage"/>
    <variable name="outConsultarNoObjecion" messageType="ns45:responseConsultarNoObjecionMessage"/>
    <variable name="listaInstanciasPrepago" messageType="ns1:responseconfiguracionCancelarOperacionmessage"/>
    <variable name="VTransaccionCondicion" element="ns3:configuracionCancelarOperacionResponse"/>
    <variable name="Vadquisicion" element="ns3:configuracionCancelarOperacionResponse"/>
    <variable name="VNoObjecion" element="ns3:configuracionCancelarOperacionResponse"/>
  </variables>
  
  <faultHandlers>
    <catchAll>
      <sequence name="SequenceCatchError">
        <assign name="AssignERROR">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns3:Resultado/ns10:result</to>
          </copy>
          <copy>
            <from>'Error en ConfiguracionCancelarOperacion'</from>
            <to>$outputVariable.response/ns3:Resultado/ns10:message</to>
          </copy>
          <copy>
            <from>ora:getFaultAsString()</from>
            <to>$outputVariable.response/ns3:Resultado/ns10:error/ns11:errorDescription</to>
          </copy>
        </assign>
        <reply name="ReplyERROR" variable="outputVariable" partnerLink="configuracioncancelaroperacion_client"
               portType="ns1:ConfiguracionCancelarOperacionPT" operation="ConfiguracionCancelarOperacion"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ConfiguracionCancelarOperacion.wsdl) -->
    <receive name="receiveInput" partnerLink="configuracioncancelaroperacion_client" portType="ns1:ConfiguracionCancelarOperacionPT" operation="ConfiguracionCancelarOperacion" variable="inputVariable" createInstance="yes"/>
    <assign name="AssignFlowName">
      <copy>
        <from> oraext:setFlowInstanceTitle(concat("idOperacion= ", $inputVariable.request/ns3:idOperacion))</from>
        <to>$setTitleVar</to>
      </copy>
    </assign>
    <assign name="AssignConsultarProducto">
      <copy>
        <from>$inputVariable.request/ns3:idOperacion</from>
        <to>$ConsultarProductoIn.request/ns4:idOperacion</to>
      </copy>
    </assign>
    <invoke name="InvokeConsultarProducto" partnerLink="ConsultarProductoOperacion"
            portType="ns2:ProductoPT" operation="consultarByIdOperacion" inputVariable="ConsultarProductoIn"
            outputVariable="ConsultarProductoOut" bpelx:invokeAsDetail="no"/>
    <if name="IfRespuesta">
      <documentation>
        <![CDATA[OK]]>
      </documentation>
      <condition>$ConsultarProductoOut.response/ns4:Resultado/ns10:result='OK'</condition>
      <sequence name="SequenceResultadoProducto">
        <assign name="AssignOutConsultarProducto">
          <copy>
            <from>$ConsultarProductoOut.response/ns4:Producto</from>
            <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:producto</to>
          </copy>
          <copy>
            <from>false()</from>
            <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:gerente</to>
          </copy>
          <copy>
            <from>$ConsultarProductoOut.response/ns4:Operacion</from>
            <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:operacion</to>
          </copy>
          <copy>
            <from>$ConsultarProductoOut.response/ns4:Resultado</from>
            <to>$outputVariable.response/ns3:Resultado</to>
          </copy>
        </assign>
        <scope name="ScopeConsultarRol">
          <variables>
            <variable name="InConsultarRol" messageType="ns13:requestMessage"/>
            <variable name="OutConsultarRol" messageType="ns13:replyMessage"/>
            <variable name="RolCount" type="xsd:unsignedInt"/>
            <variable name="InConsultarAtri" messageType="ns16:requestConsultarAtributosUsuarioMessage"/>
            <variable name="OutConsultarAtri" messageType="ns16:responseConsultarAtributosUsuarioMessage"/>
            <variable name="GrupoCount" type="xsd:int"/>
            <variable name="GroupTotal" type="xsd:int"/>
            <variable name="Grupo" type="xsd:string"/>
          </variables>
          <sequence>
            <assign name="AssignConsultarRol">
              <copy>
                <from>11</from>
                <to>$InConsultarRol.request/ns14:Proceso/ns15:idProceso</to>
              </copy>
            </assign>
            <invoke name="InvokConsultarRol" partnerLink="ConsultarRoles"
                    portType="ns13:ConsultarRolesPorProceso_ptt" operation="ConsultarRolesPorProceso"
                    inputVariable="InConsultarRol" outputVariable="OutConsultarRol" bpelx:invokeAsDetail="no"/>
            <assign name="AssignRolCount">
              <copy>
                <from>count($OutConsultarRol.response/ns14:ListadoRoles/ns15:listadoRoles)</from>
                <to>$RolCount</to>
              </copy>
            </assign>
            <forEach parallel="no" counterName="CounterRol" name="ForEachConsultarRol">
              <bpelx:skipCondition>$RolCount=0</bpelx:skipCondition>
              <startCounterValue>1</startCounterValue>
              <finalCounterValue>$RolCount</finalCounterValue>
              <scope name="ScopeForConutlaRol">
                <assign name="AssignOutConsultarRol">
                  <copy bpelx:insertMissingToData="yes">
                    <from>$OutConsultarRol.response/ns14:ListadoRoles/ns15:listadoRoles[$CounterRol]/ns8:Id</from>
                    <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:RolesEquipoTrabajo/ns12:Rol[$CounterRol]/ns8:Id</to>
                  </copy>
                  <copy bpelx:insertMissingToData="yes">
                    <from>$OutConsultarRol.response/ns14:ListadoRoles/ns15:listadoRoles[$CounterRol]/ns8:Descripcion</from>
                    <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:RolesEquipoTrabajo/ns12:Rol[$CounterRol]/ns8:Descripcion</to>
                  </copy>
                  <copy bpelx:insertMissingToData="yes">
                    <from>$OutConsultarRol.response/ns14:ListadoRoles/ns15:listadoRoles[$CounterRol]/ns8:DescripcionCorta</from>
                    <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:RolesEquipoTrabajo/ns12:Rol[$CounterRol]/ns8:DescripcionCorta</to>
                  </copy>
                </assign>
              </scope>
            </forEach>
            <assign name="AssignAtributo">
              <copy>
                <from>$inputVariable.request/ns3:usuario</from>
                <to>$InConsultarAtri.request/ns17:listaNombres/ns18:nombreUsuario</to>
              </copy>
            </assign>
            <invoke name="InvokeConsultarAtri" partnerLink="ConsultatRolEnGrupo"
                    portType="ns16:UsuarioPT" operation="consultarAtributosUsuario" inputVariable="InConsultarAtri"
                    outputVariable="OutConsultarAtri" bpelx:invokeAsDetail="no"/>
            <assign name="AssigngrupoCount">
              <copy>
                <from>1</from>
                <to>$GrupoCount</to>
              </copy>
              <copy>
                <from>count($OutConsultarAtri.response/ns17:listaUsuarios/ns18:usuario/ns18:listaGrupos/ns18:grupo)</from>
                <to>$GroupTotal</to>
              </copy>
            </assign>
            <while name="WhileValidaGerente">
              <condition>$GrupoCount&lt;=$GroupTotal</condition>
              <sequence name="SequenceWhileGerente">
                <assign name="AssignGrupo">
                  <copy>
                    <from>$OutConsultarAtri.response/ns17:listaUsuarios/ns18:usuario/ns18:listaGrupos/ns18:grupo[$GrupoCount]</from>
                    <to>$Grupo</to>
                  </copy>
                </assign>
                <if name="IfValidaGerente">
                  <documentation>
                    <![CDATA[TRUE]]>
                  </documentation>
                  <condition>$Grupo='FENIX_GERENTES_BZ' or $Grupo='FENIX_GERENTES_CO' or $Grupo='FENIX_GERENTES_CR' or $Grupo='FENIX_GERENTES_DO' or $Grupo='FENIX_GERENTES_GT' or $Grupo='FENIX_GERENTES_GT' or $Grupo='FENIX_GERENTES_HN' or $Grupo='FENIX_GERENTES_NI' or $Grupo='FENIX_GERENTES_PA' or $Grupo='FENIX_GERENTES_SV' </condition>
                  <sequence name="SequenceResultadoGerente">
                    <assign name="AssignAumentarCount">
                      <copy>
                        <from>$GroupTotal+1</from>
                        <to>$GrupoCount</to>
                      </copy>
                    </assign>
                    <assign name="Assigntrue">
                      <copy bpelx:insertMissingToData="yes">
                        <from>'true'</from>
                        <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:gerente</to>
                      </copy>
                    </assign>
                  </sequence>
                  <else>
                    <documentation>
                      <![CDATA[FALSE]]>
                    </documentation>
                    <sequence name="SequenceErrorGerente">
                      <assign name="AssignAumentarCount">
                        <copy>
                          <from>$GrupoCount+1</from>
                          <to>$GrupoCount</to>
                        </copy>
                      </assign>
                      <assign name="Assignfalse">
                        <copy bpelx:insertMissingToData="yes" ignoreMissingFromData="no" keepSrcElementName="no">
                          <from>'false'</from>
                          <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:gerente</to>
                        </copy>
                      </assign>
                    </sequence>
                  </else>
                </if>
              </sequence>
            </while>
          </sequence>
        </scope>
        <scope name="ScopeConsultarEnmiendasTccComisiones">
          <variables>
            <variable name="inInvokeConsultarEnmiendasTCC"
                      messageType="ns19:ConsultarEnmiendasTCCByIdOperacionRequestMessage"/>
            <variable name="outInvokeConsultarEnmiendasTCC"
                      messageType="ns19:ConsultarEnmiendasTCCByIdOperacionResponseMessage"/>
            <variable name="inConsultarComisiones" messageType="ns20:requestConsultarComisionMessage"/>
            <variable name="outConsultarComisiones" messageType="ns20:responseConsultarComisionMessage"/>
            <variable name="ComisionCount" type="xsd:unsignedInt"/>
          </variables>
          <sequence name="SequenceTCC">
            <assign name="AssignConsultas">
              <copy>
                <from>$inputVariable.request/ns3:idOperacion</from>
                <to>$inInvokeConsultarEnmiendasTCC.ConsultarEnmiendasTCCByIdOperacionRequest/ns24:idOperacion</to>
              </copy>
              <copy>
                <from>$inputVariable.request/ns3:idOperacion</from>
                <to>$inConsultarComisiones.request/ns25:idOperacion</to>
              </copy>
            </assign>
            <invoke name="InvokeConsultarEnmiendasTCC" bpelx:invokeAsDetail="no"
                    partnerLink="ConsultarEnmiendasTCCByIdOperacion"
                    portType="ns19:ConsultarEnmiendasTCCByIdOperacionPT"
                    operation="consultarEnmiendasTCCByIdOperacion" inputVariable="inInvokeConsultarEnmiendasTCC"
                    outputVariable="outInvokeConsultarEnmiendasTCC"/>
            <invoke name="ConsultarComisiones" bpelx:invokeAsDetail="no" partnerLink="ConsultarComision"
                    portType="ns20:ConsultarComisionPT" operation="ConsultarComision"
                    inputVariable="inConsultarComisiones" outputVariable="outConsultarComisiones"/>
            <assign name="AssignEnmiendas">
              <copy>
                <from>$outInvokeConsultarEnmiendasTCC.ConsultarEnmiendasTCCByIdOperacionResponse/ns24:Enmiendas</from>
                <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:Enmiendas</to>
              </copy>
              <copy>
                <from>count($outConsultarComisiones.response/ns25:Comision)</from>
                <to>$ComisionCount</to>
              </copy>
            </assign>
            <forEach parallel="no" counterName="CounterComision" name="ForEachComisiones">
              <bpelx:skipCondition>$ComisionCount = 0</bpelx:skipCondition>
              <startCounterValue>1</startCounterValue>
              <finalCounterValue>$ComisionCount</finalCounterValue>
              <scope name="ScopeComisiones">
                <sequence name="SequenceComisiones">
                  <assign name="AssignComisiones">
                    <copy bpelx:insertMissingToData="yes">
                      <from>$outConsultarComisiones.response/ns25:Comision[$CounterComision]/ns22:idComision</from>
                      <to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:Comisiones/ns22:Comision[$CounterComision]/ns22:idComision</to>
                    </copy>
                  </assign>
                </sequence>
              </scope>
            </forEach>
          </sequence>
        </scope>
      </sequence>
      <else>
        <documentation>
          <![CDATA[ERROR]]>
        </documentation>
        <assign name="AssignOutERRO">
          <copy>
            <from>$ConsultarProductoOut.response/ns4:Resultado/ns10:error</from>
            <to>$outputVariable.response/ns3:Resultado/ns10:error</to>
          </copy>
        </assign>
      </else>
    </if>
    <assign name="assingRequestConsultas">
      <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
        <from>$inputVariable.request/ns3:idOperacion</from>
        <to>$inConsultarImplementacionLote.request/ns41:idOperacion</to>
      </copy>
      <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
        <from>$inputVariable.request/ns3:idOperacion</from>
        <to>$inConsultarSolicitudDesembolso.request/ns42:idOperacion</to>
      </copy>
      <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
        <from>$inputVariable.request/ns3:idOperacion</from>
        <to>$inConsultarTransaccionCondicion.request/ns43:idOperacion</to>
      </copy>
      <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
        <from>$inputVariable.request/ns3:idOperacion</from>
        <to>$inConsultarAdquisicion.request/ns44:idOperacion</to>
      </copy>
    </assign>
    <invoke name="ConsultarImplementacionLote" bpelx:invokeAsDetail="no" partnerLink="ConsultarImplementacionLote_BS"
            portType="ns37:ConsultarImplemetacionLote_PT" operation="consultarOperacionLote"
            inputVariable="inConsultarImplementacionLote" outputVariable="outConsultarImplementacionLote"/>
    <if name="IfOK">
      <documentation>
        <![CDATA[OK]]>
      </documentation>
      <condition>count($outConsultarImplementacionLote.response/ns41:ImplementacionLote)&gt;0</condition>
      <assign name="assingLotImplementacion">
        <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
          <from>ora:processXQuery10('../Transformations/XQ_ImplemetacionLote_TO_Response.xqy','outConsultarImplementacionLote.response',$outConsultarImplementacionLote.response)</from>
          <to>$outImplementacion.response</to>
        </copy>
        <extensionAssignOperation>
          <bpelx:append ignoreMissingFromData="yes" keepSrcElementName="no">
            <bpelx:from>$outImplementacion.response/ns3:configuracionCancelarOperacion/ns12:ImplementacionPCT/ns33:loteImplementacion</bpelx:from>
            <bpelx:to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:ImplementacionPCT</bpelx:to>
          </bpelx:append>
        </extensionAssignOperation>
      </assign>
      <else>
        <documentation>
          <![CDATA[ERROR]]>
        </documentation>
        <empty name="Empty"/>
      </else>
    </if>
    <invoke name="ConsultarSolicitudDesembolso" bpelx:invokeAsDetail="no"
            partnerLink="ConsultarSolicitudDesembolso_BS" portType="ns38:ConsultarSolicitudDesembolso_PT"
            operation="consultarSolicitudDesembolso" inputVariable="inConsultarSolicitudDesembolso"
            outputVariable="outConsultarSolicitudDesembolso"/>
    <if name="IfOK">
      <documentation>
        <![CDATA[OK]]>
      </documentation>
      <condition>$outConsultarSolicitudDesembolso.response/ns42:Resultado/ns10:result = 'OK'</condition>
      <assign name="assingSolicitud">
        <extensionAssignOperation>
          <bpelx:append>
            <bpelx:from>$outConsultarSolicitudDesembolso.response/ns42:SolicitudDesembolso</bpelx:from>
            <bpelx:to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:SolicitudDesembolso</bpelx:to>
          </bpelx:append>
        </extensionAssignOperation>
      </assign>
      <else>
        <documentation>
          <![CDATA[ERROR]]>
        </documentation>
        <sequence name="SequenceError">
          <assign name="assingError">
            <copy>
              <from>'ERROR'</from>
              <to>$outputVariable.response/ns3:Resultado/ns10:result</to>
            </copy>
            <copy>
              <from>$outConsultarSolicitudDesembolso.response/ns42:Resultado/ns10:message</from>
              <to>$outputVariable.response/ns3:Resultado/ns10:message</to>
            </copy>
          </assign>
          <reply name="Reply" variable="outputVariable" partnerLink="configuracioncancelaroperacion_client"
                 portType="ns1:ConfiguracionCancelarOperacionPT" operation="ConfiguracionCancelarOperacion"/>
          <exit name="Exit"/>
        </sequence>
      </else>
    </if>
    <invoke name="ConsultarTransaccionCondicion" bpelx:invokeAsDetail="no"
            partnerLink="ConsultarTransaccionCondicion_SB" portType="ns39:ConsultarTransaccionCondicionPT"
            operation="ConsultarTransaccionCondicion" inputVariable="inConsultarTransaccionCondicion"
            outputVariable="outConsultarTransaccionCondicion_SB"/>
    <if name="IfOK">
      <documentation>
        <![CDATA[OK]]>
      </documentation>
      <condition>$outConsultarTransaccionCondicion_SB.response/ns43:Resultado/ns10:result ='OK'</condition>
      <sequence name="Sequence2">
        <assign name="XQTransform1">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:processXQuery10('../Transformations/consultarTransaccionCondicion_TO_VTransaccionCondicion.xqy', 'outConsultarTransaccionCondicion_SB.response', $outConsultarTransaccionCondicion_SB.response)</from>
            <to variable="VTransaccionCondicion"/>
          </copy>
        </assign>
        <assign name="AssignTransaccionCondicion">
          <extensionAssignOperation>
            <bpelx:copyList>
              <bpelx:from>$VTransaccionCondicion/ns3:configuracionCancelarOperacion/ns12:Condiciones</bpelx:from>
              <bpelx:to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:Condiciones</bpelx:to>
            </bpelx:copyList>
          </extensionAssignOperation>
        </assign>
      </sequence>
      <else>
        <documentation>
          <![CDATA[ERROR]]>
        </documentation>
        <sequence name="SequenceError">
          <assign name="assingError">
            <copy>
              <from>'ERROR'</from>
              <to>$outputVariable.response/ns3:Resultado/ns10:result</to>
            </copy>
            <copy>
              <from>$outConsultarTransaccionCondicion_SB.response/ns43:Resultado/ns10:message</from>
              <to>$outputVariable.response/ns3:Resultado/ns10:message</to>
            </copy>
          </assign>
          <reply name="Reply" variable="outputVariable" partnerLink="configuracioncancelaroperacion_client"
                 portType="ns1:ConfiguracionCancelarOperacionPT" operation="ConfiguracionCancelarOperacion"/>
          <exit name="Exit"/>
        </sequence>
      </else>
    </if>
    <invoke name="ConsultarAdquisicion" bpelx:invokeAsDetail="no" partnerLink="ConsultarAdquisicion_BS"
            portType="ns40:ConsultarAdquisicionPT" operation="consultarAdquisicion"
            inputVariable="inConsultarAdquisicion" outputVariable="outConsultarAdquisicion"/>
    <if name="IfOK">
      <documentation>
        <![CDATA[OK]]>
      </documentation>
      <condition>$outConsultarAdquisicion.response/ns44:Resultado/ns10:result = 'OK'</condition>
      <sequence name="Sequence1">
        <assign name="XQT_extraerAdquiisicion">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from>ora:processXQuery10('../Transformations/consultarAdquisicion_TO_OutVariable_adquisicion.xqy', 'outConsultarAdquisicion.response', $outConsultarAdquisicion.response)</from>
            <to variable="Vadquisicion"/>
          </copy>
        </assign>
        <forEach parallel="no" counterName="adquisicionCounter" name="ForEachAdquisicion">
          <startCounterValue>1</startCounterValue>
          <finalCounterValue>count($outConsultarAdquisicion.response/ns44:Adquisicion)</finalCounterValue>
          <scope name="ScopeForAdquisicion">
            <sequence name="SequenceNoObjecion">
              <assign name="assingAdquisicion">
                <copy>
                  <from>$outConsultarAdquisicion.response/ns44:Adquisicion[$adquisicionCounter]/ns36:idAdquisicion</from>
                  <to>$inConsultarNoObjecion.request/ns44:idAquisicion</to>
                </copy>
              </assign>
              <invoke name="ConsultarNoObjecion" bpelx:invokeAsDetail="no" partnerLink="ConsultarNoObjecionById_BS"
                      portType="ns45:ConsultarNoObjecionPT" operation="consultarNoObjecion"
                      inputVariable="inConsultarNoObjecion" outputVariable="outConsultarNoObjecion"/>
              <assign name="XQT_NoObjecion">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:processXQuery10('../Transformations/asignarNoObjecion_TO_Adquisicion.xqy', 'outConsultarNoObjecion.response', $outConsultarNoObjecion.response)</from>
                  <to variable="VNoObjecion"/>
                </copy>
              </assign>
              <assign name="AssignNoObjecion">
                <extensionAssignOperation>
                  <bpelx:append>
                    <bpelx:from>$VNoObjecion/ns3:configuracionCancelarOperacion/ns12:Adquisiciones/ns36:Adquisicion/ns36:noObjecion</bpelx:from>
                    <bpelx:to>$Vadquisicion/ns3:configuracionCancelarOperacion/ns12:Adquisiciones/ns36:Adquisicion[$adquisicionCounter]</bpelx:to>
                  </bpelx:append>
                </extensionAssignOperation>
              </assign>
            </sequence>
          </scope>
        </forEach>
        <assign name="assingAdquisicion">
          <extensionAssignOperation>
            <bpelx:copyList>
              <bpelx:from>$Vadquisicion/ns3:configuracionCancelarOperacion/ns12:Adquisiciones</bpelx:from>
              <bpelx:to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:Adquisiciones</bpelx:to>
            </bpelx:copyList>
          </extensionAssignOperation>
        </assign>
      </sequence>
      <else>
        <documentation>
          <![CDATA[ERROR]]>
        </documentation>
        <sequence name="SequenceError">
          <assign name="assingError">
            <copy>
              <from>'ERROR'</from>
              <to>$outputVariable.response/ns3:Resultado/ns10:result</to>
            </copy>
            <copy>
              <from>$outConsultarAdquisicion.response/ns44:Resultado/ns10:message</from>
              <to>$outputVariable.response/ns3:Resultado/ns10:message</to>
            </copy>
          </assign>
          <reply name="Reply" variable="outputVariable" partnerLink="configuracioncancelaroperacion_client"
                 portType="ns1:ConfiguracionCancelarOperacionPT" operation="ConfiguracionCancelarOperacion"/>
          <exit name="Exit"/>
        </sequence>
      </else>
    </if>
    <!-- Generate reply to synchronous request -->
     <scope name="ScopeRegistrarComision">
      <variables>
        <variable name="inConsultaRegistrarComision" messageType="ns46:requestConsultarBitacoraProcesoOperacionMessage"/>
     <variable name="outConsultaRegistrarComision" messageType="ns46:responseConsultarBitacoraProcesoOperacionMessage"/>
      </variables>
      <sequence name="SequenceRegistrarComision">
        <assign name="assingIdOperacion">
          <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
            <from>$inputVariable.request/ns3:idOperacion</from>
            <to>$inConsultaRegistrarComision.request/ns48:idOperacion</to>
          </copy>
          <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
            <from>33</from>
            <to>$inConsultaRegistrarComision.request/ns48:idProceso</to>
          </copy>
        </assign>
        <invoke name="ConsultaRegistrarComision" bpelx:invokeAsDetail="no"
                partnerLink="ConsultarBitacoraProcesoOperacion_BS" portType="ns46:ConsultarBitacoraProcesoOperacionPT"
                operation="consultarBitacoraProcesoOperacion" inputVariable="inConsultaRegistrarComision"
                outputVariable="outConsultaRegistrarComision"/>
        <if name="IfOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>count($outConsultaRegistrarComision.response/ns48:Bitacora)&gt;0</condition>
          <assign name="assingRegistrarComision">
            <copy>
              <from>ora:processXQuery10('../Transformations/XQ_InstanciasRegistrarComision_TO_Response.xqy','consultarBitacoraProcesoResponse',$outConsultaRegistrarComision.response)</from>
              <to>$listaInstanciasPrepago.response</to>
            </copy>
            <extensionAssignOperation>
              <bpelx:copyList>
                <bpelx:from>$listaInstanciasPrepago.response/ns3:configuracionCancelarOperacion/ns12:RegistrarComision/ns47:InstanciaProceso</bpelx:from>
                <bpelx:to>$outputVariable.response/ns3:configuracionCancelarOperacion/ns12:RegistrarComision/ns47:InstanciaProceso</bpelx:to>
              </bpelx:copyList>
            </extensionAssignOperation>
          </assign>
    
          <else>
            <documentation>
              <![CDATA[Vacio]]>
            </documentation>
            <empty name="Empty"/>
          </else>
        </if>
      </sequence>
    </scope>
    <reply name="replyOutput" partnerLink="configuracioncancelaroperacion_client" portType="ns1:ConfiguracionCancelarOperacionPT" operation="ConfiguracionCancelarOperacion" variable="outputVariable"/>
  </sequence>
</process>