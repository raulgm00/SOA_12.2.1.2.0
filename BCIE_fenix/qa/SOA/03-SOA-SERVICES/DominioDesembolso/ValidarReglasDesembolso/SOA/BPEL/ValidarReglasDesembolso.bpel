<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sun Oct 02 12:13:22 CDT 2016
  Author:  perla-osorio
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ValidarReglasDesembolso" targetNamespace="http://xmlns.oracle.com/DominioDesembolso/ValidarReglasDesembolso/ValidarReglasDesembolso" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:client="http://xmlns.oracle.com/DominioDesembolso/ValidarReglasDesembolso/ValidarReglasDesembolso" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ns1="http://www.bcie.org/ValidarReglasDesembolso" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:ns2="http://www.bcie.org/ConsultarInformacionReglaById" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns4="http://www.bcie.org/ReglaTareaBO" xmlns:ns6="http://www.bcie.org/CatalogoBO" xmlns:ns5="http://www.bcie.org/ReglaBO" xmlns:ns3="http://www.bcie.org/DesembolsoMO" xmlns:ns13="http://www.bcie.org/TerminoBO" xmlns:ns17="http://www.bcie.org/OperacionBO" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns21="http://www.bcie.org/ResultBO" xmlns:ns9="http://www.bcie.org/CommonBO" xmlns:ns8="http://www.bcie.org/LineaCreditoBO" xmlns:ns18="http://www.bcie.org/ProductoBO" xmlns:ns10="http://www.bcie.org/CondicionBO" xmlns:ns19="http://www.bcie.org/DeclaracionJuradaBO" xmlns:ns12="http://www.bcie.org/DocumentoBO" xmlns:ns16="http://www.bcie.org/HerramientaCEBO" xmlns:ns14="http://www.bcie.org/ComisionBO" xmlns:ns15="http://www.bcie.org/DesembolsoBO" xmlns:ns20="http://www.bcie.org/ContratoBO" xmlns:ns7="http://www.bcie.org/ClienteBO" xmlns:ns11="http://www.bcie.org/AtributoBO" xmlns:ns22="http://www.bcie.org/ErrorBO" xmlns:ns23="http://www.bcie.org/ValidarSCR" xmlns:ns24="http://www.bcie.org/ValidarMoraSOR" xmlns:ns25="http://www.bcie.org/ValidarProgramacionSOR" xmlns:ns26="http://www.bcie.org/ClienteMO" xmlns:ns27="http://www.bcie.org/ConsultarTreReglasDesembolso" xmlns:ns28="http://www.bcie.org/CrearActualizarReglasDesembolso" xmlns:ns29="http://www.bcie.org/CrearBitacoraReglasDesembolso" xmlns:ns30="http://www.bcie.org/CrearBitacoraReglasDesembolsoMO" xmlns:ns31="http://www.bcie.org/CrearBitacoraReglasDesembolsoBO" xmlns:ns32="http://xmlns.bcie.com/DeclaracionJuradaService" xmlns:ns33="http://www.bcie.org/DeclaracionJuradaMO" xmlns:ns34="http://www.bcie.org/MatrizTCCBO" xmlns:ns35="http://xmlns.oracle.com/OSB_BCIE/MDS/ValidarLimitesSOR" xmlns:ns36="http://www.bcie.org/LimitePorcentajeLineaSOR" xmlns:ns37="http://www.bcie.org/ValidarLimiteProgramaSOR" xmlns:ns38="http://www.bcie.org/ValidarHoraCierreSAD" xmlns:ns39="http://www.bcie.org/ValidarPlazoF1" xmlns:ns40="http://www.bcie.org/ValidarPlazoF1SAD" xmlns:ns41="http://www.bcie.org/ValidarPlazoSOR" xmlns:ns42="http://www.bcie.org/ValidarCondicionesDesembolsoSOR" xmlns:ns43="http://www.bcie.org/ValidarLimiteDestinoSOR" xmlns:ns44="http://www.bcie.org/ValidarEstadoFlexcubeMO" xmlns:ns45="http://www.bcie.org/ValidarLoanComplejoSOR" xmlns:ns46="http://www.bcie.org/ValidarMontoMaximoDesembolsoSAD" xmlns:ns47="http://www.bcie.org/ConsultarDesembolsosByIdSAD" xmlns:ns48="http://www.bcie.org/ConsultarSaldoLineaSAD" xmlns:ns49="http://www.bcie.org/ConsultarImporteTransitoSAD" xmlns:ns50="http://www.bice.org/ActualizarLineaCreditoService" xmlns:ns51="http://www.bcie.org/ValidarFechaVencimientoSAD" xmlns:ns53="http://www.bcie.org/AprobacionBO" xmlns:ns52="http://www.bcie.org/LineaCreditoMO" xmlns:ns54="http://www.bcie.org/ConsultarFLEXCUBE" xmlns:ns55="http://xmlns.bcie.com/OperacionService" xmlns:ns56="http://www.bcie.org/OperacionMO">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://www.bcie.org/CrearBitacoraReglasDesembolso" location="oramds:/apps/Resources/ComponentesComunes/Utilidades/CrearBitacoraReglasDesembolso/V1/Wsdl/CrearBitacoraReglasDesembolso.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://www.bcie.org/ValidarReglasDesembolso" location="oramds:/apps/Resources/ComponentesComunes/DominioDesembolso/Desembolso/V1/Wsdl/BPEL/ValidarReglasDesembolsoSOR.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://www.bcie.org/ConsultarTreReglasDesembolso" location="oramds:/apps/Resources/ComponentesComunes/DominioDesembolso/Desembolso/V1/Wsdl/ADAPTER/ConsultarReglasDesembolsoSAD.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://www.bcie.org/ValidarReglasDesembolso" location="../WSDLs/ValidarReglasDesembolsoSORWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="validarreglasdesembolso_client" partnerLinkType="ns1:ValidarReglasDesembolso" myRole="ValidarReglasDesembolso_PT"/>
    <partnerLink name="ConsultarInformacionReglaById_SB" partnerLinkType="ns2:ConsultarInformacionReglaById_SB" partnerRole="ConsultarInformacionReglaById_PT"/>
    <partnerLink name="ValidarSCR_SB" partnerLinkType="ns23:ValidarSCR_SB" partnerRole="ValidarSCR_PT"/>
    <partnerLink name="ValidarMora_SB" partnerLinkType="ns24:ValidarMora_SB" partnerRole="ValidarMora_PT"/>
    <partnerLink name="ValidarProgramacion_SB" partnerLinkType="ns25:ValidarProgramacion_SB" partnerRole="ValidarProgramacion_PT"/>
    <partnerLink name="ConsultarReglasDesembolso_SB" partnerLinkType="ns27:ConsultarReglasDesembolso_SB" partnerRole="ConsultarReglasDesembolso_PT"/>
    <partnerLink name="CrearActualizarReglasDesembolso_SB" partnerLinkType="ns28:CrearActualizarReglasDesembolso_SB" partnerRole="CrearActualizarReglasDesembolso"/>
    <partnerLink name="CrearBitacoraReglasDesembolso_SB" partnerLinkType="ns29:CrearBitacoraReglasDesembolso_SB" partnerRole="CrearBitacoraReglasDesembolso_PT"/>
    <partnerLink name="DeclaracionService_SB" partnerLinkType="ns32:DeclaracionService_SB" partnerRole="DeclaracionJuradaPT"/>
    <partnerLink name="ValidarLimites_SB" partnerLinkType="ns35:ValidarLimites_SB" partnerRole="ValidarLimites_ptt"/>
    <partnerLink name="ValidarLimitesPorcentajeLinea_SB" partnerLinkType="ns36:ValidarLimitesPorcentajeLinea_SB" partnerRole="LimitePorcentajeLinea_PT"/>
    <partnerLink name="ValidarLmitePrograma_SB" partnerLinkType="ns37:ValidarLmitePrograma_SB" partnerRole="ValidarLimitePrograma_PT"/>
    <partnerLink name="ValidarHoraCierre_SB" partnerLinkType="ns38:ValidarHoraCierre_SB" partnerRole="ValidarHoraCierrePT"/>
    <partnerLink name="ValidarPlazoF1_SB" partnerLinkType="ns40:ValidarPlazoF1_SB" partnerRole="ValidarPlazoF1_PT"/>
    <partnerLink name="ValidarPlazo_SB" partnerLinkType="ns41:ValidarPlazo_SB" partnerRole="ValidarPlazo_PT"/>
    <partnerLink name="ValidarCondicionesDesembolso_SB" partnerLinkType="ns42:ValidarCondicionesFinancieras_SB" partnerRole="ValidarCondicionesDesembolsoPT"/>
    <partnerLink name="ValidaLimiteDestino_SB" partnerLinkType="ns43:ValidaLimiteDestino_SB" partnerRole="ValidarLimiteDestinoPT"/>
    <partnerLink name="ValidarEstadoFlexcube_SB" partnerLinkType="ns44:ValidarEstadoFlexcube_SB" partnerRole="ValidarEstadoFlexcubePT"/>
    <partnerLink name="ValidarLoanComplejo_SB" partnerLinkType="ns45:ValidarLoanComplejo_SB" partnerRole="ValidarLoanComplejo_PT"/>
    <partnerLink name="ValidarMontoMaximoDesembolso_SB" partnerLinkType="ns46:ValidarMontoMaximoDesembolso_SB" partnerRole="ValidarMontoMaximoDesembolsoPT"/>
    <partnerLink name="ConsultaDesembolsoById_SB" partnerLinkType="ns47:ConsultaDesembolsoById_SB" partnerRole="ConsultarDesembolsosById_PT"/>
    <partnerLink name="ConsultarImporteTransito_SB" partnerLinkType="ns49:ConsultarImporteTransito_SB" partnerRole="ConsultarImporteTransito_PT"/>
    <partnerLink name="ConsultaLineaCreditoByID_SB" partnerLinkType="ns50:ConsultaLineaCreditoByID_SB" partnerRole="ConsultarLineaCreditoByIdLineaCreditoPT"/>
    <partnerLink name="VaidarFechaVencimiento_PS" partnerLinkType="ns51:VaidarFechaVencimiento_PS" partnerRole="ValidarFechaVencimientoPT"/>
    <partnerLink name="ConsultarFLEXCUBE_SB" partnerLinkType="ns54:ConsultarFLEXCUBE_SB" partnerRole="ConsultarFLEXCUBE_PT"/>
    <partnerLink name="ConsultarLineaCreditoByIdLineaCredito_SB" partnerLinkType="ns50:ConsultarLineaCreditoByIdLineaCredito_SB" partnerRole="ConsultarLineaCreditoByIdLineaCreditoPT"/>
    <partnerLink name="ValidarFechaVencimiento_SB" partnerLinkType="ns51:ValidarFechaVencimiento_SB" partnerRole="ValidarFechaVencimientoPT"/>
    <partnerLink name="ConsultarOperacionById" partnerLinkType="ns55:ConsultarOperacionById" partnerRole="ConsultarOperacionById12Port"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:requestValidarReglasDesembolsoMessage"/>
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="setInstanceVar" type="xsd:string"/>
    <variable name="outConsultarInformacionReglaById" messageType="ns2:responseConsultarInformacionReglaByIdMessage"/>
    <variable name="inValidarProgramacion" messageType="ns25:requestValidarProgramacionMessage"/>
    <variable name="outValidarProgramacion" messageType="ns25:responseValidarProgramacionMessage"/>
    <variable name="inValidarMora" messageType="ns24:requestValidarMoraMessage"/>
    <variable name="outValidarMora" messageType="ns24:responseValidarMoraMessage"/>
    <variable name="outConsultarReglasDesembolso" messageType="ns27:responseConsultarReglasDesembolsoMessage"/>
    <variable name="consultarReglasDesembolsoAux" messageType="ns27:responseConsultarReglasDesembolsoMessage"/>
    <variable name="outCrearActualizarReglasDesembolso" messageType="ns28:responseCrearActualizarReglasDesembolsoMessage"/>
    <variable name="inValidarSCR" messageType="ns23:requestValidarSCRMessage"/>
    <variable name="outValidarSCR" messageType="ns23:responseValidarSCRMessage"/>
    <variable name="outputVariableProgramacion" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outvariableLAFT" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outvariableSCR" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outputVariableMora" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outValidarLimites" messageType="ns35:replyMessage"/>
    <variable name="outvariableLimites" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outValidarLimitePrograma" messageType="ns37:responseValidarLimiteProgramaBPELMessage"/>
    <variable name="outCrearBitacoraTotalLC" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outvariableTotalLC" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outValidarLimitesPorcentajeLinea" messageType="ns36:responseLimitePorcentajeLineaMessage"/>
    <variable name="outCrearBitacoraLimiteGlobal" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outvariableLimiteGlobal" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outValidarProxHoraCierre" messageType="ns38:ValidarHoraCierreResponseMessage"/>
    <variable name="outCrearBitacoraProxHora" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outvariableProxHoraCierre" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outValidarPreHoraCierre" messageType="ns38:ValidarHoraCierreResponseMessage"/>
    <variable name="outCrearBitacoraPreHora" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outvariablePreviaHoraCierre" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outCrearBitacoraPresentacionF1" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outvariablePresentacionF1" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outValidarComponenteInteres" messageType="ns41:responseValidarPlazoMessage"/>
    <variable name="outCrearBitacoraComponenteInteres" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outCrearBitacoraPeriodoGracia" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outCrearBitacoraPlazoCapitalMaximo" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outValidarPlazoCapitalMinimoMaximoGracia" messageType="ns41:responseValidarPlazoMessage"/>
    <variable name="outCrearBitacoraPlazoCapitalMinimoMaximoGracia" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outvariableValidarComponenteInteres" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outvariableValidarPlazoCapitalMinimoMaximoGracia" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="outValidarPlazoF1" messageType="ns40:replyValidarPlazoF1Message"/>
    <variable name="outValidarCondicionesDesembolso" messageType="ns42:ValidarCondicionesDesembolsoResponseMessage"/>
    <variable name="outCrearBitacoraCondiciones" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outvariableCondiciones" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="activarRegla" type="xsd:boolean"/>
    <variable name="inValidaLimiteDestino" messageType="ns43:requestValidarLimiteDestinoMessage"/>
    <variable name="outValidaLimiteDestino" messageType="ns43:responseValidarLimiteDestinoMessage"/>
    <variable name="inCrearBitacoraLimiteGlobal" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="inCrearBitacoraValidarLimiteDestino" messageType="ns43:requestValidarLimiteDestinoMessage"/>
    <variable name="outCrearBitacoraValidarLimiteDestino" messageType="ns43:responseValidarLimiteDestinoMessage"/>
    <variable name="inCrearBitacora" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outCrearBitacora" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outvariableTotalContratoDesembolso" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="inValidarEstadoFlexcube" messageType="ns44:ValidarEstadoFlexcubeRequestMessage"/>
    <variable name="outValidarEstadoFlexcube" messageType="ns44:ValidarEstadoFlexcubeResponseMessage"/>
    <variable name="outVariableValidacionTempranaFlexcube" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="InValidarMontoMaximoDesembolso" messageType="ns46:ValidarMontoMaximoDesembolsoRequestMessage"/>
    <variable name="OutValidarMontoMaximoDesembolso" messageType="ns46:ValidarMontoMaximoDesembolsoResponseMessage"/>
    <variable name="InConsultaDesemboldoById" messageType="ns47:requestConsultarDesembolsosByIdMessage"/>
    <variable name="OutConsultaDesemboldoById" messageType="ns47:responseConsultarDesembolsosByIdMessage"/>
    <variable name="outVariableValidarMontoMaximoDesembolso" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
    <variable name="inCrearBitacoraValidarMontoMaximoDesembolso" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="outCrearBitacoraValidarMontoMaximoDesembolso" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="inValidaLineaCredito" type="xsd:integer"/>
    <variable name="InvokeConsultaLineaCreditoByID_consultarLineaCreditoByIdLineaCredito_OutputVariable" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoResponseMessage"/>
    <variable name="inconsultarLineaCreditoByIdLineaCredito" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoRequestMessage"/>
    <variable name="OutConsultarLineaCreditoByIdLineaCredito" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoResponseMessage"/>
    <variable name="InConsultaLineaCredito" messageType="ns2:requestConsultarInformacionReglaByIdMessage"/>
    <variable name="OutConsultarLineaCredito_consultarInformacionReglaById_OutputVariable" messageType="ns2:responseConsultarInformacionReglaByIdMessage"/>
    <variable name="InvokeCrearBitacoraValidarFechaVencimiento_SB_crearBitacoraReglasDesembolso_InputVariable" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="InCrearBitacoraValidarFechaVencimiento" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="OutCrearBitacoraValidarFechaVencimiento" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
    <variable name="INConsultarLineaCreditoByIdLineaCredito" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoRequestMessage"/>
    <variable name="INValidarFechaVencimiento_ValidarFechaVencimiento" messageType="ns51:ValidarFechaVencimientoRequestMessage"/>
    <variable name="OutValidarFechaVencimiento_ValidarFechaVencimiento" messageType="ns51:ValidarFechaVencimientoResponseMessage"/>
    <variable name="INLineaCredito_consultarInformacionReglaById_InputVariable" messageType="ns2:requestConsultarInformacionReglaByIdMessage"/>
    <variable name="InConsultaLineaCreditoByID_SB" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoRequestMessage"/>
    <variable name="InConsultarImporteTransito" messageType="ns49:requestConsultarImporteTransitoMessage"/>
    <variable name="outConsultarImporteTransito" messageType="ns49:responseConsultarImporteTransitoMessage"/>
    <variable name="InConsultarLineaCreditoByIdLineaCredito" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoRequestMessage"/>
    <variable name="InConsultarFLEXCUBE" messageType="ns54:requestConsultarFLEXCUBEMessage"/>
    <variable name="OutConsultarFLEXCUBE" messageType="ns54:responseConsultarFLEXCUBEMessage"/>
    <variable name="OutConsultaLineaCreditoByID" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoResponseMessage"/>
    <variable name="InConsultarLineaCreditoByIdLineaCredito2" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoRequestMessage"/>
    <variable name="OutConsultarLineaCreditoByIdLineaCredito2" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoResponseMessage"/>
    <variable name="VarIdProducto" type="xsd:string"/>
    <variable name="VarLineaCredito" type="xsd:string"/>
    <variable name="VarFechaVencimiento" type="xsd:string"/>
    <variable name="InValidaFechaVencimiento_Ok" messageType="ns51:ValidarFechaVencimientoRequestMessage"/>
    <variable name="OutValidaFechaVencimiento_Ok" messageType="ns51:ValidarFechaVencimientoResponseMessage"/>
    <variable name="outVariableValidarFechaVencimiento" messageType="ns1:responseValidarReglasDesembolsoMessage"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <sequence name="FaultAll">
        <assign name="faultAll">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns3:Resultado/ns21:result</to>
          </copy>
          <copy>
            <from>ora:getFaultAsString()</from>
            <to>$outputVariable.response/ns3:Resultado/ns21:message</to>
          </copy>
        </assign>
        <reply name="ReplyFaultAll" variable="outputVariable" partnerLink="validarreglasdesembolso_client" portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in ValidarReglasDesembolso.wsdl) -->
    <receive name="receiveInput" partnerLink="validarreglasdesembolso_client" portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso" variable="inputVariable" createInstance="yes"/>
    <assign name="setTitleInstance">
      <copy>
        <from>oraext:setFlowInstanceTitle(concat("idDesembolso: ",string($inputVariable.request/ns3:idDesembolso)))</from>
        <to>$setInstanceVar</to>
      </copy>
    </assign>
    <scope name="ConsultarInformacionReglaById">
      <variables>
        <variable name="inConsultarInformacionReglaById" messageType="ns2:requestConsultarInformacionReglaByIdMessage"/>
      </variables>
      <sequence name="ConsultarInformacionReglaByIdSequence">
        <if name="IfValidaIdDesembolso">
          <condition>string($inputVariable.request/ns3:idDesembolso) !='' and string($inputVariable.request/ns3:instanciaProceso) != '' and string($inputVariable.request/ns3:TareaReglas/ns4:IdTarea) != ''</condition>
          <empty name="Empty"/>
          <else>
            <documentation>
              <![CDATA[NULL]]>
            </documentation>
            <sequence name="Sequence7">
              <assign name="errorCampoRequerido">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns3:Resultado/ns21:result</to>
                </copy>
                <copy>
                  <from>'Faltan campos requeridos'</from>
                  <to>$outputVariable.response/ns3:Resultado/ns21:message</to>
                </copy>
              </assign>
              <reply name="ReplyError" variable="outputVariable" partnerLink="validarreglasdesembolso_client" portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso"/>
              <exit name="Exit"/>
            </sequence>
          </else>
        </if>
        <assign name="requestConsultarInformacionReglaById">
          <copy>
            <from>$inputVariable.request/ns3:idDesembolso</from>
            <to>$inConsultarInformacionReglaById.request/ns3:idDesembolso</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarInformacionReglaById_SB" bpelx:invokeAsDetail="no" partnerLink="ConsultarInformacionReglaById_SB" portType="ns2:ConsultarInformacionReglaById_PT" operation="consultarInformacionReglaById" inputVariable="inConsultarInformacionReglaById" outputVariable="outConsultarInformacionReglaById"/>
        <assign name="AssignVarIdProducto">
          <copy ignoreMissingFromData="yes">
            <from>$outConsultarInformacionReglaById.response/ns3:Operacion/ns17:producto/ns18:idProducto</from>
            <to>$VarIdProducto</to>
          </copy>
        </assign>
        <if name="IfValidaOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outConsultarInformacionReglaById.response/ns3:Resultado/ns21:result = 'OK'</condition>
          <empty name="Empty"/>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="ConsultarInformacionReglaByIdSequence">
              <invoke name="InvokeConsultarInformacionReglaById_SB" bpelx:invokeAsDetail="no" partnerLink="ConsultarInformacionReglaById_SB" portType="ns2:ConsultarInformacionReglaById_PT" operation="consultarInformacionReglaById" inputVariable="inConsultarInformacionReglaById" outputVariable="outConsultarInformacionReglaById"/>
              <if name="IfValidaOK">
                <documentation>
                  <![CDATA[OK]]>
                </documentation>
                <condition>$outConsultarInformacionReglaById.response/ns3:Resultado/ns21:result = 'OK'</condition>
                <empty name="Empty"/>
                <else>
                  <documentation>
                    <![CDATA[ERROR]]>
                  </documentation>
                  <sequence name="ConsultarInformacionReglaByIdSequence">
                    <assign name="errorConsultarInformacionReglaById">
                      <copy>
                        <from>'OK'</from>
                        <to>$outputVariable.response/ns3:Resultado/ns21:result</to>
                      </copy>
                      <copy>
                        <from>'Error en el servicio ConsultarInformacionReglaById'</from>
                        <to>$outputVariable.response/ns3:Resultado/ns21:message</to>
                      </copy>
                    </assign>
                    <reply name="ReplyError" variable="outputVariable" partnerLink="validarreglasdesembolso_client" portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso"/>
                    <exit name="Exit"/>
                  </sequence>
                </else>
              </if>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ConsultarReglasDesembolso">
      <variables>
        <variable name="inConsultarReglasDesembolso" messageType="ns27:requestConsultarReglasDesembolsoMessage"/>
        <variable name="inCrearActualizarReglasDesembolso" messageType="ns28:requestCrearActualizarReglasDesembolsoMessage"/>
      </variables>
      <sequence name="ConsultarReglasDesembolso">
        <assign name="requestConsultarReglasDesembolso">
          <copy>
            <from>$inputVariable.request/ns3:idDesembolso</from>
            <to>$inConsultarReglasDesembolso.request/ns3:idDesembolso</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarReglasDesembolso_SB" bpelx:invokeAsDetail="no" partnerLink="ConsultarReglasDesembolso_SB" portType="ns27:ConsultarReglasDesembolso_PT" operation="consultarReglasDesembolso" inputVariable="inConsultarReglasDesembolso" outputVariable="outConsultarReglasDesembolso"/>
        <if name="IfValidarOK">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outConsultarReglasDesembolso.response/ns3:Resultado/ns21:result = 'OK'</condition>
          <sequence name="Sequence2">
            <assign name="XQ_ValidarReglasEnTre">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:processXQuery10('../Transformations/XQ_ValidarReglasEnTre.xqy', 'inputVariable.request', $inputVariable.request, 'outConsultarReglasDesembolso.response', $outConsultarReglasDesembolso.response)</from>
                <to variable="consultarReglasDesembolsoAux" part="response"/>
              </copy>
            </assign>
            <if name="IfValidaConsultarReglasDesembolsoAux">
              <documentation>
                <![CDATA[RegistrosAInsertar]]>
              </documentation>
              <condition>count($consultarReglasDesembolsoAux.response/ns3:ReglasEvaluacion)&gt;0</condition>
              <sequence name="Sequence3">
                <assign name="XQ_CrearActualizarReglasDesembolso_Request">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_CrearActualizarReglasDesembolso_Request.xqy', 'inputVariable.request', $inputVariable.request, 'consultarReglasDesembolsoAux.response', $consultarReglasDesembolsoAux.response)</from>
                    <to variable="inCrearActualizarReglasDesembolso" part="request"/>
                  </copy>
                </assign>
                <invoke name="InvokeCrearActualizarReglasDesembolso_SB" bpelx:invokeAsDetail="no" partnerLink="CrearActualizarReglasDesembolso_SB" portType="ns28:CrearActualizarReglasDesembolso" operation="crearActualizarReglasDesembolso" inputVariable="inCrearActualizarReglasDesembolso" outputVariable="outCrearActualizarReglasDesembolso"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearActualizarReglasDesembolso.response/ns3:Resultado/ns21:result = 'OK'</condition>
                  <sequence name="Sequence4">
                    <assign name="XQ_CrearActualizarReglasDesembolsoResponse">
                      <bpelx:annotation>
                        <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                      </bpelx:annotation>
                      <copy>
                        <from>ora:processXQuery10('../Transformations/XQ_CrearActualizarReglasDesembolsoResponse.xqy', 'consultarReglasDesembolsoAux.response', $consultarReglasDesembolsoAux.response, 'outCrearActualizarReglasDesembolso.response', $outCrearActualizarReglasDesembolso.response)</from>
                        <to variable="consultarReglasDesembolsoAux" part="response"/>
                      </copy>
                    </assign>
                    <assign name="XQ_ConsultarReglasDesembolsoResponse_TO_InputVariable">
                      <bpelx:annotation>
                        <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                      </bpelx:annotation>
                      <copy>
                        <from>ora:processXQuery10('../Transformations/XQ_ConsultarReglasDesembolsoResponse_TO_InputVariable.xqy', 'inputVariable.request', $inputVariable.request, 'consultarReglasDesembolsoAux.response', $consultarReglasDesembolsoAux.response, 'outConsultarReglasDesembolso.response', $outConsultarReglasDesembolso.response)</from>
                        <to variable="inputVariable" part="request"/>
                      </copy>
                    </assign>
                  </sequence>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <sequence name="Error">
                      <assign name="errorCrearActualizarReglasDesembolso">
                        <copy>
                          <from>'ERROR'</from>
                          <to>$outputVariable.response/ns3:Resultado/ns21:result</to>
                        </copy>
                        <copy>
                          <from>concat("Error en el servicio CrearActualizarReglasDesembolso ",$outCrearActualizarReglasDesembolso.response/ns3:Resultado/ns21:message)</from>
                          <to>$outputVariable.response/ns3:Resultado/ns21:message</to>
                        </copy>
                      </assign>
                      <reply name="ReplyErrorCrearActualizarReglasDesembolso" variable="outputVariable" partnerLink="validarreglasdesembolso_client" portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso"/>
                      <exit name="Exit"/>
                    </sequence>
                  </else>
                </if>
              </sequence>
              <else>
                <documentation>
                  <![CDATA[SinRegistros]]>
                </documentation>
                <assign name="XQ_ConsultarReglasDesembolso_TO_Input_Response">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ConsultarReglasDesembolso_TO_Input_Response.xqy', 'inputVariable.request', $inputVariable.request, 'outConsultarReglasDesembolso.response', $outConsultarReglasDesembolso.response)</from>
                    <to variable="inputVariable" part="request"/>
                  </copy>
                </assign>
              </else>
            </if>
          </sequence>
          <else>
            <documentation>
              <![CDATA[ERROR]]>
            </documentation>
            <sequence name="Sequence1">
              <assign name="errorConsultarReglasDesembolso">
                <copy>
                  <from>'ERROR'</from>
                  <to>$outputVariable.response/ns3:Resultado/ns21:result</to>
                </copy>
                <copy>
                  <from>concat("Error en  el servicio ConsultarReglasDesembolso ",$outConsultarReglasDesembolso.response/ns3:Resultado/ns21:message)</from>
                  <to>$outputVariable.response/ns3:Resultado/ns21:message</to>
                </copy>
              </assign>
              <reply name="ReplyErrorConsultarReglasDesembolso" variable="outputVariable" partnerLink="validarreglasdesembolso_client" portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso"/>
              <exit name="Exit"/>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <assign name="AssignConsultarLineaCreditoByIdLineaCredito2">
      <copy ignoreMissingFromData="yes">
        <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:idLineaCredito</from>
        <to>$InConsultarLineaCreditoByIdLineaCredito2.request/ns52:idLineaCredito</to>
      </copy>
      <copy ignoreMissingFromData="yes">
        <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:NumeroLineaCredito</from>
        <to>$InConsultarLineaCreditoByIdLineaCredito2.request/ns52:numeroLinea</to>
      </copy>
    </assign>
    <invoke name="InvokeConsultarLineaCreditoByIdLineaCredito" partnerLink="ConsultarLineaCreditoByIdLineaCredito_SB" portType="ns50:ConsultarLineaCreditoByIdLineaCreditoPT" operation="consultarLineaCreditoByIdLineaCredito" inputVariable="InConsultarLineaCreditoByIdLineaCredito2" outputVariable="OutConsultarLineaCreditoByIdLineaCredito2" bpelx:invokeAsDetail="no"/>
    <assign name="XQTransformConsultarFlexcube">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:processXQuery10('../Transformations/Transformation_3.xqy', 'OutConsultarLineaCreditoByIdLineaCredito2.response', $OutConsultarLineaCreditoByIdLineaCredito2.response)</from>
        <to variable="InConsultarFLEXCUBE" part="request"/>
      </copy>
    </assign>
    <assign name="TareaResponse">
      <copy bpelx:insertMissingToData="yes">
        <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
        <to>$outputVariable.response/ns3:TareaReglas/ns4:IdTarea</to>
      </copy>
      <copy>
        <from>$inputVariable.request/ns3:TareaReglas/ns4:Proceso</from>
        <to>$outputVariable.response/ns3:TareaReglas/ns4:Proceso</to>
      </copy>
      <copy ignoreMissingFromData="yes">
        <from>$inputVariable.request/ns3:TareaReglas/ns4:Descripcion</from>
        <to>$outputVariable.response/ns3:TareaReglas/ns4:Descripcion</to>
      </copy>
      <copy ignoreMissingFromData="yes">
        <from>$inputVariable.request/ns3:TareaReglas/ns4:Estatus</from>
        <to>$outputVariable.response/ns3:TareaReglas/ns4:Estatus</to>
      </copy>
    </assign>
    <flow name="FlowTransaccion">
      <sequence name="ValidarFechaVencimiento">
        <scope name="ValidarFechaVencimiento">
          <variables>
            <variable name="estadoValidaFechaVencimineto" type="xsd:string"/>
            <variable name="mensajeValidaFechaVencimineto" type="xsd:string"/>
            <variable name="INConsultarLineaCredito_consultarLineaCreditoByIdLineaCredito" messageType="ns50:ConsultarLineaCreditoByIdLineaCreditoRequestMessage"/>
          </variables>
          <if name="IfIdProductoEs4">
            <documentation>
              <![CDATA[Valida]]>
            </documentation>
            <condition>$VarIdProducto = '4'</condition>
            <sequence name="ValidarFechaVencimiento">
              <if name="IfFechaVenciminento">
                <documentation>
                  <![CDATA[ValidarFechaVencimiento]]>
                </documentation>
                <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDA_FECHA_VENCIMIENTO'])&gt;0</condition>
                <sequence name="Sequence38">
                  <if name="IfValidaReglaExceptuada">
                    <documentation>
                      <![CDATA[ReglaExceptuada]]>
                    </documentation>
                    <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDA_FECHA_VENCIMIENTO']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                    <assign name="estadoMensajeExceptuada">
                      <copy>
                        <from>'EXCEPTUADA'</from>
                        <to>$estadoValidaFechaVencimineto</to>
                      </copy>
                      <copy>
                        <from>'EXCEPTUADA'</from>
                        <to>$mensajeValidaFechaVencimineto</to>
                      </copy>
                      <copy>
                        <from>$estadoValidaFechaVencimineto</from>
                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDA_FECHA_VENCIMIENTO' ]/ns5:Estado/ns6:DescripcionCorta</to>
                      </copy>
                    </assign>
                    <else>
                      <documentation>
                        <![CDATA[ReglaNoExceptuada]]>
                      </documentation>
                      <sequence name="Sequence39">
                        <assign name="ValidaLineaCredito" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                          <copy ignoreMissingFromData="yes">
                            <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:idLineaCredito</from>
                            <to>$InConsultarLineaCreditoByIdLineaCredito.request/ns52:idLineaCredito</to>
                          </copy>
                          <copy ignoreMissingFromData="yes">
                            <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:NumeroLineaCredito</from>
                            <to>$InConsultarLineaCreditoByIdLineaCredito.request/ns52:numeroLinea</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeConsultarLineaCredito" partnerLink="ConsultaLineaCreditoByID_SB" portType="ns50:ConsultarLineaCreditoByIdLineaCreditoPT" operation="consultarLineaCreditoByIdLineaCredito" inputVariable="InConsultarLineaCreditoByIdLineaCredito" outputVariable="OutConsultaLineaCreditoByID" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable" bpelx:invokeAsDetail="no"/>
                        <assign name="AssignConsultaDesembolsoById" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                          <copy ignoreMissingFromData="yes">
                            <from>$inputVariable.request/ns3:idDesembolso</from>
                            <to>$InConsultaDesemboldoById.request/ns3:idContratoDesembolso</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeConsultaDesemboldoById" bpelx:invokeAsDetail="no" partnerLink="ConsultaDesembolsoById_SB" portType="ns47:ConsultarDesembolsosById_PT" operation="ConsultarDesembolsosById" inputVariable="InConsultaDesemboldoById" outputVariable="OutConsultaDesemboldoById" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"/>
                        <assign name="AssignVarLineaCreditoVarFechaVencimiento">
                          <copy ignoreMissingFromData="yes">
                            <from>$OutConsultaLineaCreditoByID.response/ns52:Operacion/ns17:contrato/ns20:LineaCredito/ns8:NumeroLineaCredito</from>
                            <to>$VarLineaCredito</to>
                          </copy>
                          <copy ignoreMissingFromData="yes">
                            <from>substring-before($OutConsultaDesemboldoById.response/ns3:ContratoDesembolso/ns15:fechaVencimiento,'T')</from>
                            <to>$VarFechaVencimiento</to>
                          </copy>
                        </assign>
                        <if name="IfValidaLineaCredito_ValidaFechaVencimiento">
                          <documentation>
                            <![CDATA[ConDatosRequeridosOk]]>
                          </documentation>
                          <condition>string-length($VarLineaCredito) &gt; 0 and string-length($VarFechaVencimiento) &gt; 0</condition>
                          <sequence name="Sequence40">
                            <sequence name="Sequence41">
                              <assign name="ConsultaLineaCredito">
                                <copy ignoreMissingFromData="yes">
                                  <from>$VarLineaCredito</from>
                                  <to>$InValidaFechaVencimiento_Ok.ValidarFechaVencimientoRequest/ns3:lineaVencimiento</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$VarFechaVencimiento</from>
                                  <to>$InValidaFechaVencimiento_Ok.ValidarFechaVencimientoRequest/ns3:fechaVencimiento</to>
                                </copy>
                              </assign>
                              <invoke name="InvokeValidaFechaVencimiento_Ok" bpelx:invokeAsDetail="no" partnerLink="ValidarFechaVencimiento_SB" portType="ns51:ValidarFechaVencimientoPT" operation="ValidarFechaVencimiento" inputVariable="InValidaFechaVencimiento_Ok" outputVariable="OutValidaFechaVencimiento_Ok"/>
                              <if name="If_Valida_Fecha_Vencimiento">
                                <documentation>
                                  <![CDATA[CUMPLIDA]]>
                                </documentation>
                                <condition>$OutValidaFechaVencimiento_Ok.ValidarFechaVencimientoResponse/ns3:resultado/ns21:result = 'OK'</condition>
                                <sequence name="Sequence42">
                                  <assign name="estadoMensajeCumplida">
                                    <copy ignoreMissingFromData="yes">
                                      <from>'CUMPLIDA'</from>
                                      <to>$estadoValidaFechaVencimineto</to>
                                    </copy>
                                    <copy ignoreMissingFromData="yes">
                                      <from>$OutValidaFechaVencimiento_Ok.ValidarFechaVencimientoResponse/ns3:resultado/ns21:message</from>
                                      <to>$mensajeValidaFechaVencimineto</to>
                                    </copy>
                                    <copy ignoreMissingFromData="yes">
                                      <from>$estadoValidaFechaVencimineto</from>
                                      <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDA_FECHA_VENCIMIENTO']/ns5:Estado/ns6:DescripcionCorta</to>
                                    </copy>
                                    <copy ignoreMissingFromData="yes">
                                      <from>$mensajeValidaFechaVencimineto</from>
                                      <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDA_FECHA_VENCIMIENTO']/ns4:Mensaje/ns6:Descripcion</to>
                                    </copy>
                                  </assign>
                                </sequence>
                                <else>
                                  <documentation>
                                    <![CDATA[NO_CUMPLIDA]]>
                                  </documentation>
                                  <sequence name="Sequence43">
                                    <assign name="estadoMensajeNoCumplida">
                                      <copy ignoreMissingFromData="yes">
                                        <from>'NO_CUMPLIDA'</from>
                                        <to>$estadoValidaFechaVencimineto</to>
                                      </copy>
                                      <copy ignoreMissingFromData="yes">
                                        <from>$OutValidaFechaVencimiento_Ok.ValidarFechaVencimientoResponse/ns3:resultado/ns21:message</from>
                                        <to>$mensajeValidaFechaVencimineto</to>
                                      </copy>
                                      <copy ignoreMissingFromData="yes">
                                        <from>$estadoValidaFechaVencimineto</from>
                                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDA_FECHA_VENCIMIENTO']/ns5:Estado/ns6:DescripcionCorta</to>
                                      </copy>
                                      <copy ignoreMissingFromData="yes">
                                        <from>$mensajeValidaFechaVencimineto</from>
                                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDA_FECHA_VENCIMIENTO']/ns4:Mensaje/ns6:Descripcion</to>
                                      </copy>
                                      <copy ignoreMissingFromData="yes">
                                        <from>'FlexCube no se encuentra disponible en estos momentos'</from>
                                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDA_FECHA_VENCIMIENTO']/ns5:Estado/ns6:Descripcion</to>
                                      </copy>
                                    </assign>
                                  </sequence>
                                </else>
                              </if>
                            </sequence>
                            <assign name="RequestBitacora">
                              <copy ignoreMissingFromData="yes">
                                <from>$inputVariable.request/ns3:instanciaProceso</from>
                                <to>$InCrearBitacoraValidarFechaVencimiento.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDA_FECHA_VENCIMIENTO']/ns5:Exceptuado/ns6:Id    </from>
                                <to>$InCrearBitacoraValidarFechaVencimiento.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                                <to>$InCrearBitacoraValidarFechaVencimiento.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$mensajeValidaFechaVencimineto</from>
                                <to>$InCrearBitacoraValidarFechaVencimiento.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$estadoValidaFechaVencimineto</from>
                                <to>$InCrearBitacoraValidarFechaVencimiento.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                              </copy>
                            </assign>
                            <invoke name="InvokeCrearBitacoraValidarFechaVencimiento_SB" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="InCrearBitacoraValidarFechaVencimiento" outputVariable="OutCrearBitacoraValidarFechaVencimiento"/>
                            <if name="IfValidaOK">
                              <documentation>
                                <![CDATA[OK]]>
                              </documentation>
                              <condition>$OutCrearBitacoraValidarFechaVencimiento.response/ns30:Resultado/ns21:result = 'OK'</condition>
                              <empty name="OK"/>
                              <else>
                                <documentation>
                                  <![CDATA[ERROR]]>
                                </documentation>
                                <assign name="errorBitacoraLimiteGlobal">
                                  <copy>
                                    <from>'Error al insertar en la Bitacora' </from>
                                    <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDA_FECHA_VENCIMIENTO']/ns4:Mensaje/ns6:Descripcion</to>
                                  </copy>
                                </assign>
                              </else>
                            </if>
                            <assign name="XQ_ValidarFechaVencimiento">
                              <bpelx:annotation>
                                <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:processXQuery10('../Transformations/XQ_ValidarFechaVencimiento.xqy', 'inputVariable.request', $inputVariable.request)</from>
                                <to variable="outVariableValidarFechaVencimiento" part="response"/>
                              </copy>
                            </assign>
                          </sequence>
                          <else>
                            <documentation>
                              <![CDATA[SinDatosRequeridos]]>
                            </documentation>
                            <assign name="estadoMensajeNoEvaluada">
                              <copy ignoreMissingFromData="yes">
                                <from>'NO_EVALUADA' </from>
                                <to>$estadoValidaFechaVencimineto</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>concat('No se ha podido realizar la evaluacion debido a la falta del siguiente parametro, FechaVencimiento: ', $OutConsultarLineaCredito_consultarInformacionReglaById_OutputVariable.response/ns3:LineaCredito/ns8:FechaVencimiento)</from>
                                <to>$mensajeValidaFechaVencimineto</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$estadoValidaFechaVencimineto</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDA_FECHA_VENCIMIENTO']/ns5:Estado/ns6:DescripcionCorta</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$mensajeValidaFechaVencimineto</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDA_FECHA_VENCIMIENTO']/ns4:Mensaje/ns6:Descripcion</to>
                              </copy>
                            </assign>
                          </else>
                        </if>
                      </sequence>
                    </else>
                  </if>
                </sequence>
                <else>
                  <empty name="SinFechaVencimiento"/>
                </else>
              </if>
            </sequence>
            <else>
              <documentation>
                <![CDATA[NoValidar]]>
              </documentation>
              <empty name="Empty"/>
            </else>
          </if>
        </scope>
      </sequence>
      <sequence name="ValidarMontoMaximoDesembolso">
        <if name="IfIdProductoEs4">
          <condition>$VarIdProducto = '4'</condition>
          <scope name="ValidarMontoMaximoDesembolso">
            <variables>
              <variable name="estadoMontoMaximoDesembolso" type="xsd:string"/>
              <variable name="mensajeMontoMaximoDesembolso" type="xsd:string"/>
              <variable name="VarConsultaDesembolsoById_Importe" type="xsd:string"/>
              <variable name="VarSaldoEnCertificados_Monto" type="xsd:string"/>
              <variable name="VarFlexcubeLineCredito_Saldo" type="xsd:string"/>
              <variable name="VarImporteTransito_Importe" type="xsd:string"/>
            </variables>
            <sequence name="ValidarMontoMaximoDesembolso">
              <if name="IfValidarRegla">
                <documentation>
                  <![CDATA[ValidaMontoMaximoDesembolso]]>
                </documentation>
                <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MONTO_MAXIMO_DESEMBOLSO'])&gt;0</condition>
                <sequence>
                  <if name="IfValidaReglaExceptuada">
                    <documentation>
                      <![CDATA[ReglaExceptuada]]>
                    </documentation>
                    <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MONTO_MAXIMO_DESEMBOLSO']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                    <assign name="estadoMensajeExceptuada">
                      <copy>
                        <from>'EXCEPTUADA'</from>
                        <to>$estadoMontoMaximoDesembolso</to>
                      </copy>
                      <copy>
                        <from>'EXCEPTUADA'</from>
                        <to>$mensajeMontoMaximoDesembolso</to>
                      </copy>
                      <copy>
                        <from>$estadoMontoMaximoDesembolso</from>
                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MONTO_MAXIMO_DESEMBOLSO' ]/ns5:Estado/ns6:DescripcionCorta</to>
                      </copy>
                    </assign>
                    <else>
                      <documentation>
                        <![CDATA[ReglaNoExceptuada]]>
                      </documentation>
                      <sequence name="Sequence30">
                        <assign name="AssignValidarMontoMaximoDesembolso">
                          <copy ignoreMissingFromData="yes">
                            <from>$outConsultarInformacionReglaById.response/ns3:Cliente/ns7:idFacturador</from>
                            <to>$InValidarMontoMaximoDesembolso.ValidarMontoMaximoDesembolsoRequest/ns3:codigoCliente</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeValidarMontoMaximoDesembolso" partnerLink="ValidarMontoMaximoDesembolso_SB" portType="ns46:ValidarMontoMaximoDesembolsoPT" operation="ValidarMontoMaximoDesembolso" inputVariable="InValidarMontoMaximoDesembolso" outputVariable="OutValidarMontoMaximoDesembolso" bpelx:invokeAsDetail="no"/>
                        <if name="IfValidaDatosRequeridos">
                          <documentation>
                            <![CDATA[ConDatosRequeridosOk]]>
                          </documentation>
                          <condition>string-length($OutValidarMontoMaximoDesembolso.ValidarMontoMaximoDesembolsoResponse/ns3:Resultado/ns21:result) &gt; 0 and string-length($OutValidarMontoMaximoDesembolso.ValidarMontoMaximoDesembolsoResponse/ns3:Monto) &gt; 0</condition>
                          <sequence name="Sequence37">
                            <sequence>
                              <assign name="AssignConsultaDesembolsoById">
                                <copy ignoreMissingFromData="yes">
                                  <from>$inputVariable.request/ns3:idDesembolso</from>
                                  <to>$InConsultaDesemboldoById.request/ns3:idContratoDesembolso</to>
                                </copy>
                              </assign>
                              <invoke name="InvokeConsultaDesemboldoById" bpelx:invokeAsDetail="no" partnerLink="ConsultaDesembolsoById_SB" portType="ns47:ConsultarDesembolsosById_PT" operation="ConsultarDesembolsosById" inputVariable="InConsultaDesemboldoById" outputVariable="OutConsultaDesemboldoById"/>
                              <assign name="AssignConsultarFLEXCUBE">
                                <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                                  <from>$OutConsultarLineaCreditoByIdLineaCredito2.response/ns52:Operacion/ns17:contrato/ns20:LineaCredito/ns8:Flexcube/ns8:id</from>
                                  <to>$InConsultarFLEXCUBE.request/ns52:codigoContrato</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>'LINEA'</from>
                                  <to>$InConsultarFLEXCUBE.request/ns52:nivelDetalle</to>
                                </copy>
                              </assign>
                              <invoke name="InvokeConsultarFLEXCUBE" partnerLink="ConsultarFLEXCUBE_SB" portType="ns54:ConsultarFLEXCUBE_PT" operation="ConsultarFLEXCUBE" inputVariable="InConsultarFLEXCUBE" outputVariable="OutConsultarFLEXCUBE" bpelx:invokeAsDetail="no"/>
                              <assign name="AssignInvokeConsultarImporteTransito">
                                <copy ignoreMissingFromData="yes">
                                  <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:idContrato</from>
                                  <to>$InConsultarImporteTransito.request/ns52:LineaCredito/ns8:idContrato</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:idLineaCredito</from>
                                  <to>$InConsultarImporteTransito.request/ns52:LineaCredito/ns8:idLineaCredito</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:NumeroLineaCredito</from>
                                  <to>$InConsultarImporteTransito.request/ns52:LineaCredito/ns8:NumeroLineaCredito</to>
                                </copy>
                              </assign>
                              <invoke name="InvokeConsultarImporteTransito" partnerLink="ConsultarImporteTransito_SB" portType="ns49:ConsultarImporteTransito_PT" operation="ConsultarImporteTransito" inputVariable="InConsultarImporteTransito" outputVariable="outConsultarImporteTransito" bpelx:invokeAsDetail="no"/>
                              <assign name="AssignValOpeValidacionMontoMaximoDesembolso">
                                <copy ignoreMissingFromData="yes">
                                  <from>$OutConsultaDesemboldoById.response/ns3:ContratoDesembolso[1]/ns15:monto[1]/ns9:importe</from>
                                  <to>$VarConsultaDesembolsoById_Importe</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$OutConsultarFLEXCUBE.response/ns52:TipoContrato/ns8:LineaCredito/ns8:saldo</from>
                                  <to>$VarFlexcubeLineCredito_Saldo</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$outConsultarImporteTransito.response/ns52:LineaCredito/ns8:Monto/ns9:importe</from>
                                  <to>$VarImporteTransito_Importe</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$OutValidarMontoMaximoDesembolso.ValidarMontoMaximoDesembolsoResponse/ns3:Monto</from>
                                  <to>$VarSaldoEnCertificados_Monto</to>
                                </copy>
                              </assign>
                              <if name="IfVarFlexcubeLineCredito_Saldo">
                                <condition>string-length($VarFlexcubeLineCredito_Saldo) &gt; 0</condition>
                                <empty name="Empty1"/>
                                <else>
                                  <assign name="AssignFlexcubeLineCredito_Saldo">
                                    <copy>
                                      <from>0</from>
                                      <to>$VarFlexcubeLineCredito_Saldo</to>
                                    </copy>
                                  </assign>
                                </else>
                              </if>
                              <if name="IfValidaMontoDesembolso">
                                <documentation>
                                  <![CDATA[CUMPLIDA]]>
                                </documentation>
                                <condition>($VarSaldoEnCertificados_Monto*8) &gt;= ($VarFlexcubeLineCredito_Saldo+$VarImporteTransito_Importe)</condition>
                                <sequence name="Sequence35">
                                  <assign name="estadoMensajeCumplida">
                                    <copy>
                                      <from>'CUMPLIDA'</from>
                                      <to>$estadoMontoMaximoDesembolso</to>
                                    </copy>
                                    <copy ignoreMissingFromData="yes">
                                      <from>$OutValidarMontoMaximoDesembolso.ValidarMontoMaximoDesembolsoResponse/ns3:Resultado/ns21:message</from>
                                      <to>$mensajeMontoMaximoDesembolso</to>
                                    </copy>
                                    <copy>
                                      <from>$estadoMontoMaximoDesembolso</from>
                                      <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MONTO_MAXIMO_DESEMBOLSO']/ns5:Estado/ns6:DescripcionCorta</to>
                                    </copy>
                                    <copy>
                                      <from>$mensajeMontoMaximoDesembolso</from>
                                      <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MONTO_MAXIMO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</to>
                                    </copy>
                                  </assign>
                                </sequence>
                                <else>
                                  <documentation>
                                    <![CDATA[NO_CUMPLIDA]]>
                                  </documentation>
                                  <sequence name="Sequence36">
                                    <assign name="EstadoMensajeNoCumplida">
                                      <copy>
                                        <from>'NO_CUMPLIDA'</from>
                                        <to>$estadoMontoMaximoDesembolso</to>
                                      </copy>
                                      <copy>
                                        <from>$OutValidarMontoMaximoDesembolso.ValidarMontoMaximoDesembolsoResponse/ns3:Resultado/ns21:message</from>
                                        <to>$mensajeMontoMaximoDesembolso</to>
                                      </copy>
                                      <copy>
                                        <from>$estadoMontoMaximoDesembolso</from>
                                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MONTO_MAXIMO_DESEMBOLSO']/ns5:Estado/ns6:DescripcionCorta</to>
                                      </copy>
                                      <copy>
                                        <from>$mensajeMontoMaximoDesembolso</from>
                                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MONTO_MAXIMO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</to>
                                      </copy>
                                      <copy>
                                        <from>concat('Se excede el monto máximo a desembolsar por USD: ', substring(string(xp20:abs(($VarSaldoEnCertificados_Monto*8) - ($VarFlexcubeLineCredito_Saldo+$VarImporteTransito_Importe))), 0 , oraext:index-within-string(string(xp20:abs(($VarSaldoEnCertificados_Monto*8) - ($VarFlexcubeLineCredito_Saldo+$VarImporteTransito_Importe))),'.' )+4 ), ' . El monto máximo a desembolsar para esta operación equivale a 8 veces el saldo en certificados de depósito, el saldo actual en CDPs es de USD: ',$OutValidarMontoMaximoDesembolso.ValidarMontoMaximoDesembolsoResponse/ns3:Monto)</from>
                                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MONTO_MAXIMO_DESEMBOLSO']/ns5:Estado/ns6:Descripcion</to>
                                      </copy>
                                    </assign>
                                  </sequence>
                                </else>
                              </if>
                            </sequence>
                            <assign name="requestBitacora" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy ignoreMissingFromData="yes">
                                <from>$inputVariable.request/ns3:instanciaProceso</from>
                                <to>$inCrearBitacoraValidarMontoMaximoDesembolso.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MONTO_MAXIMO_DESEMBOLSO']/ns5:Exceptuado/ns6:Id</from>
                                <to>$inCrearBitacoraValidarMontoMaximoDesembolso.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                                <to>$inCrearBitacoraValidarMontoMaximoDesembolso.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$mensajeMontoMaximoDesembolso</from>
                                <to>$inCrearBitacoraValidarMontoMaximoDesembolso.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>$estadoMontoMaximoDesembolso</from>
                                <to>$inCrearBitacoraValidarMontoMaximoDesembolso.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                              </copy>
                            </assign>
                            <invoke name="InvokeCrearBitacoraPresentacionF1" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraValidarMontoMaximoDesembolso" outputVariable="outCrearBitacoraValidarMontoMaximoDesembolso" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable" bpelx:invokeAsDetail="no"/>
                            <if name="IfValidaOK" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <documentation>
                                <![CDATA[OK]]>
                              </documentation>
                              <condition>$outCrearBitacoraValidarMontoMaximoDesembolso.response/ns30:Resultado/ns21:result = 'OK'</condition>
                              <empty name="OK"/>
                              <else>
                                <documentation>
                                  <![CDATA[ERROR]]>
                                </documentation>
                                <assign name="errorBitacoraLimiteGlobal" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <copy>
                                    <from>'Error al insertar en la Bitacora'</from>
                                    <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MONTO_MAXIMO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</to>
                                  </copy>
                                </assign>
                              </else>
                            </if>
                            <assign name="XQ_ResponsePresentacionF1" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                              </bpelx:annotation>
                              <copy>
                                <from>ora:processXQuery10('../Transformations/XQ_ValidarMontoMaximoDesembolso.xqy', 'inputVariable.request', $inputVariable.request)</from>
                                <to variable="outVariableValidarMontoMaximoDesembolso" part="response"/>
                              </copy>
                            </assign>
                          </sequence>
                          <else>
                            <documentation>
                              <![CDATA[SinDatosRequeridos]]>
                            </documentation>
                            <assign name="estadoMensajeNoEvaluada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy>
                                <from>'NO_EVALUADA'</from>
                                <to>$estadoMontoMaximoDesembolso</to>
                              </copy>
                              <copy ignoreMissingFromData="yes">
                                <from>concat('No se ha podido realizar la evaluacion debido a la falta del siguiente parametro,: Monto: ', $OutValidarMontoMaximoDesembolso.ValidarMontoMaximoDesembolsoResponse/ns3:Monto)</from>
                                <to>$mensajeMontoMaximoDesembolso</to>
                              </copy>
                              <copy>
                                <from>$estadoMontoMaximoDesembolso</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MONTO_MAXIMO_DESEMBOLSO']/ns5:Estado/ns6:DescripcionCorta</to>
                              </copy>
                              <copy>
                                <from>$mensajeMontoMaximoDesembolso</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MONTO_MAXIMO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</to>
                              </copy>
                            </assign>
                          </else>
                        </if>
                      </sequence>
                    </else>
                  </if>
                </sequence>
                <else>
                  <empty name="SinMontoMaximoDesembolso" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"/>
                </else>
              </if>
            </sequence>
          </scope>
          <else>
            <empty name="Empty"/>
          </else>
        </if>
      </sequence>
<sequence name="ValidacionTempranaFlexcube">
        <scope name="ValidacionTempranaFlexcube">
          <variables>
            <variable name="inCrearBitacoraValidacionTempranaFlexcube"
                      messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="outCrearBitacoraValidacionTempranaFlexcube"
                      messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="estadoValidacionTemprana" type="xsd:string"/>
            <variable name="mensajeValidacionTemprana" type="xsd:string"/>
            <variable name="inValidarLoanComplejo" messageType="ns45:ValidarLoanComplejoBPELRequestMessage"/>
            <variable name="outValidarLoanComplejo" messageType="ns45:ValidarLoanComplejoBPELResponseMessage"/>
          </variables>
          <sequence>
            <if name="IfValidarRegla">
              <documentation>
                <![CDATA[ValidacionTempranaFlexcube]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE'])&gt;0</condition>
              <if name="IfValidarReglaExceptuada">
                <documentation>
                  <![CDATA[ReglaExceptuada]]>
                </documentation>
                <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                <assign name="estadoMensajeExceptuada">
                  <copy>
                    <from>'EXCEPTUADA'</from>
                    <to>$estadoValidacionTemprana</to>
                  </copy>
                  <copy>
                    <from>'EXCEPTUADA'</from>
                    <to>$mensajeValidacionTemprana</to>
                  </copy>
                  <copy>
                    <from>$estadoValidacionTemprana</from>
                    <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:DescripcionCorta</to>
                  </copy>
                </assign>
                <else>
                  <documentation>
                    <![CDATA[ReglaNoExceptuada]]>
                  </documentation>
                  <sequence name="Sequence31">
                    <invoke name="InvokeValidarEstadoFlexcube" bpelx:invokeAsDetail="no"
                            partnerLink="ValidarEstadoFlexcube_SB" portType="ns44:ValidarEstadoFlexcubePT"
                            operation="ValidarEstadoFlexcube" inputVariable="inValidarEstadoFlexcube"
                            outputVariable="outValidarEstadoFlexcube"/>
                    <if name="IfValidaFlexcube">
                      <documentation>
                        <![CDATA[OK]]>
                      </documentation>
                      <condition>$outValidarEstadoFlexcube.ValidarEstadoFlexcubeResponse/ns44:Resultado/ns21:result = 'OK'</condition>
                      <sequence name="Sequence32">
                        <assign name="AssignValidarLoanComplejo">
                          <copy>
                            <from>$inputVariable.request/ns3:idDesembolso</from>
                            <to>$inValidarLoanComplejo.ValidarLoanComplejoBPELRequest/ns3:idContratoDesembolso</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeValidarLoanComplejo" bpelx:invokeAsDetail="no"
                                partnerLink="ValidarLoanComplejo_SB" portType="ns45:ValidarLoanComplejo_PT"
                                operation="ValidarLoanComplejoBPEL" inputVariable="inValidarLoanComplejo"
                                outputVariable="outValidarLoanComplejo"/>
                        <if name="IfValidaOk">
                          <documentation>
                            <![CDATA[OK]]>
                          </documentation>
                          <condition>$outValidarLoanComplejo.ValidarLoanComplejoBPELResponse/ns3:Resultado/ns21:result = 'OK'</condition>
                          <if name="IfValidaEstado">
                            <documentation>
                              <![CDATA[CUMPLIDA]]>
                            </documentation>
                            <condition>$outValidarLoanComplejo.ValidarLoanComplejoBPELResponse/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                            <assign name="EstadoMensajeCumplida">
                              <copy>
                                <from>'CUMPLIDA'</from>
                                <to>$estadoValidacionTemprana</to>
                              </copy>
                              <copy>
                                <from>$outValidarLoanComplejo.ValidarLoanComplejoBPELResponse/ns3:Resultado/ns21:message</from>
                                <to>$mensajeValidacionTemprana</to>
                              </copy>
                              <copy>
                                <from>$estadoValidacionTemprana</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:DescripcionCorta</to>
                              </copy>
                              <copy>
                                <from>$mensajeValidacionTemprana</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:Descripcion</to>
                              </copy>
                            </assign>
                            <elseif>
                              <documentation>
                                <![CDATA[NO_CUMPLIDA]]>
                              </documentation>
                              <condition>$outValidarLoanComplejo.ValidarLoanComplejoBPELResponse/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition><sequence name="Sequence33"><assign name="EstadoMensajeNoCumplida"
                                                                                                                  xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
      
      
   <copy>
         <from>'NO_CUMPLIDA'</from>
         <to>$estadoValidacionTemprana</to>
      </copy><copy>
         <from>$outValidarLoanComplejo.ValidarLoanComplejoBPELResponse/ns3:Resultado/ns21:message</from>
         <to>$mensajeValidacionTemprana</to>
      </copy><copy>
         <from>$estadoValidacionTemprana</from>
         <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:DescripcionCorta</to>
      </copy><copy>
         <from>$mensajeValidacionTemprana</from>
         <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:Descripcion</to>
      </copy></assign></sequence></elseif>
                            <else>
                              <documentation>
                                <![CDATA[NO_EVALUADA]]>
                              </documentation><sequence name="Sequence34"><assign name="EstadoMensajeNoEvaluada"
                                                                                                                  xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
      
      
   <copy>
         <from>'NO_EVALUADA'</from>
         <to>$estadoValidacionTemprana</to>
      </copy><copy>
         <from>$outValidarLoanComplejo.ValidarLoanComplejoBPELResponse/ns3:Resultado/ns21:message</from>
         <to>$mensajeValidacionTemprana</to>
      </copy><copy>
         <from>$estadoValidacionTemprana</from>
         <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:DescripcionCorta</to>
      </copy><copy>
         <from>$mensajeValidacionTemprana</from>
         <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:Descripcion</to>
      </copy></assign></sequence></else>
                          </if>
                          <else>
                            <documentation>
                              <![CDATA[ERROR]]>
                            </documentation>
                            <assign name="EstadoMensajeError">
                              <copy>
                                <from>'ERROR'</from>
                                <to>$estadoValidacionTemprana</to>
                              </copy>
                              <copy>
                                <from>$outValidarLoanComplejo.ValidarLoanComplejoBPELResponse/ns3:Resultado/ns21:message</from>
                                <to>$mensajeValidacionTemprana</to>
                              </copy>
                              <copy>
                                <from>$estadoValidacionTemprana</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:DescripcionCorta</to>
                              </copy>
                              <copy>
                                <from>$mensajeValidacionTemprana</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:Descripcion</to>
                              </copy>
                            </assign>
                          </else>
                        </if>
                        <assign name="requestBitacora">
                          <copy>
                            <from>$inputVariable.request/ns3:instanciaProceso</from>
                            <to>$inCrearBitacoraValidacionTempranaFlexcube.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                          </copy>
                          <copy>
                            <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Exceptuado/ns6:Id</from>
                            <to>$inCrearBitacoraValidacionTempranaFlexcube.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                          </copy>
                          <copy>
                            <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                            <to>$inCrearBitacoraValidacionTempranaFlexcube.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                          </copy>
                          <copy>
                            <from>$mensajeValidacionTemprana</from>
                            <to>$inCrearBitacoraValidacionTempranaFlexcube.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                          </copy>
                          <copy>
                            <from>$estadoValidacionTemprana</from>
                            <to>$inCrearBitacoraValidacionTempranaFlexcube.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeCrearBitacoraValidacionTemprana_SB"
                                partnerLink="CrearBitacoraReglasDesembolso_SB"
                                portType="ns29:CrearBitacoraReglasDesembolso_PT"
                                operation="crearBitacoraReglasDesembolso"
                                inputVariable="inCrearBitacoraValidacionTempranaFlexcube"
                                outputVariable="outCrearBitacoraValidacionTempranaFlexcube" bpelx:invokeAsDetail="no"/>
                        <if name="IfValidaOk">
                          <documentation>
                            <![CDATA[OK]]>
                          </documentation>
                          <condition>$outCrearBitacoraValidacionTempranaFlexcube.response/ns30:Resultado/ns21:result = 'OK'</condition>
                          <empty name="Continua"/>
                          <else>
                            <documentation>
                              <![CDATA[ERROR]]>
                            </documentation>
                            <assign name="errorBitacora">
                              <copy>
                                <from>'Error al insertar en la bitacora'</from>
                                <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'VALIDACION_TEMPRANA_FLEXCUBE']/ns4:Mensaje/ns6:Descripcion</to>
                              </copy>
                            </assign>
                          </else>
                        </if>
                        <assign name="XQ_ResponseValidacionTempranaFlexcube">
                          <bpelx:annotation>
                            <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                          </bpelx:annotation>
                          <copy>
                            <from>ora:processXQuery10('../Transformations/XQ_ResponseValidacionTempranaFlexcube.xqy', 'inputVariable.request', $inputVariable.request)</from>
                            <to variable="outVariableValidacionTempranaFlexcube" part="response"/>
                          </copy>
                        </assign>
                      </sequence>
                      <else>
                        <documentation>
                          <![CDATA[ErrorFlexcube]]>
                        </documentation>
                        <assign name="estadoMensajeFlexcube">
                          <copy>
                            <from>'ERROR_FLEXCUBE'</from>
                            <to>$estadoValidacionTemprana</to>
                          </copy>
                          <copy>
                            <from>'ERROR_FLEXCUBE'</from>
                            <to>$mensajeValidacionTemprana</to>
                          </copy>
                          <copy>
                            <from>$estadoValidacionTemprana</from>
                            <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='VALIDACION_TEMPRANA_FLEXCUBE']/ns5:Estado/ns6:DescripcionCorta</to>
                          </copy>
                        </assign>
                      </else>
                    </if>
                  </sequence>
                </else>
              </if>
              <else>
                <empty name="SinReglaTempranaFlexcube"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="SequenceValidarTotalContrato">
        <scope name="Scope2">
          <variables>
            <variable name="estadoTotalContratoDesembolso" type="xsd:string"/>
            <variable name="mensajeTotalContratoDesembolso" type="xsd:string"/>
            <variable name="inBitacoraReglasDesembolso" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <if name="IfValidarRegla">
            <documentation>
              <![CDATA[ValidaTotalContratoDesembolso]]>
            </documentation>
            <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='TOTAL_CONTRATO_DESEMBOLSO'])&gt;0</condition>
            <sequence name="Sequence22">
              <if name="IfValidaReglaExceptuada">
                <documentation>
                  <![CDATA[ReglaExceptuada]]>
                </documentation>
                <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                <assign name="estadoMensajeExceptuada">
                  <copy bpelx:insertMissingToData="yes">
                    <from>'EXCEPTUADA'</from>
                    <to>$estadoTotalContratoDesembolso</to>
                  </copy>
                  <copy bpelx:insertMissingToData="yes">
                    <from>'EXCEPTUADA'</from>
                    <to>$mensajeTotalContratoDesembolso</to>
                  </copy>
                  <extensionAssignOperation>
                    <bpelx:append>
                      <bpelx:from>$estadoTotalContratoDesembolso</bpelx:from>
                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO' ]/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                    </bpelx:append>
                  </extensionAssignOperation>
                </assign>
                <else>
                  <documentation>
                    <![CDATA[ReglaNoExceptuada]]>
                  </documentation>
                  <sequence name="Sequence23">
                    <invoke name="InvokeValidarEstadoFlexcube" bpelx:invokeAsDetail="no" partnerLink="ValidarEstadoFlexcube_SB" portType="ns44:ValidarEstadoFlexcubePT" operation="ValidarEstadoFlexcube" inputVariable="inValidarEstadoFlexcube" outputVariable="outValidarEstadoFlexcube"/>
                    <if name="IfValidaFlexcube">
                      <documentation>
                        <![CDATA[OK]]>
                      </documentation>
                      <condition>$outValidarEstadoFlexcube.ValidarEstadoFlexcubeResponse/ns44:Resultado/ns21:result = 'OK'</condition>
                      <sequence name="Sequence24">
                        <assign name="requestValidarLimiteDestino">
                          <copy ignoreMissingFromData="yes">
                            <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:idLineaCredito</from>
                            <to>$inValidaLimiteDestino.request/ns3:LineaCredito/ns8:idLineaCredito</to>
                          </copy>
                          <copy ignoreMissingFromData="yes">
                            <from>$inputVariable.request/ns3:idDesembolso</from>
                            <to>$inValidaLimiteDestino.request/ns3:LineaCredito/ns8:ContratoDesembolso/ns15:idDesembolso</to>
                          </copy>
                        </assign>
                        <invoke name="InvokeValidaLimiteDestino" bpelx:invokeAsDetail="no" partnerLink="ValidaLimiteDestino_SB" portType="ns43:ValidarLimiteDestinoPT" operation="validarLimiteDestino" inputVariable="inValidaLimiteDestino" outputVariable="outValidaLimiteDestino"/>
                        <if name="IfValidaOK">
                          <documentation>
                            <![CDATA[OK]]>
                          </documentation>
                          <condition>$outValidaLimiteDestino.response/ns3:Resultado/ns21:result = 'OK'</condition>
                          <if name="IfValidaEstado">
                            <documentation>
                              <![CDATA[CUMPLIDA]]>
                            </documentation>
                            <condition>$outValidaLimiteDestino.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                            <assign name="estadoMensajeCumplida">
                              <copy>
                                <from>'CUMPLIDA'</from>
                                <to>$estadoTotalContratoDesembolso</to>
                              </copy>
                              <copy>
                                <from>$outValidaLimiteDestino.response/ns3:Resultado/ns21:message</from>
                                <to>$mensajeTotalContratoDesembolso</to>
                              </copy>
                              <extensionAssignOperation>
                                <bpelx:append>
                                  <bpelx:from>$estadoTotalContratoDesembolso</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                              <extensionAssignOperation>
                                <bpelx:append>
                                  <bpelx:from>$mensajeTotalContratoDesembolso</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                            </assign>
                            <elseif>
                              <documentation>
                                <![CDATA[NO_CUMPLIDA]]>
                              </documentation>
                              <condition>$outValidaLimiteDestino.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                              <assign name="estadoMensajeNoCumplida">
                                <copy>
                                  <from>'NO_CUMPLIDA'</from>
                                  <to>$estadoTotalContratoDesembolso</to>
                                </copy>
                                <copy>
                                  <from>$outValidaLimiteDestino.response/ns3:Resultado/ns21:message</from>
                                  <to>$mensajeTotalContratoDesembolso</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$estadoTotalContratoDesembolso</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$mensajeTotalContratoDesembolso</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </elseif>
                            <else>
                              <documentation>
                                <![CDATA[NO_EVALUADA]]>
                              </documentation>
                              <assign name="estadoMensajeNoEvaluada">
                                <copy>
                                  <from>'NO_EVALUADA'</from>
                                  <to>$estadoTotalContratoDesembolso</to>
                                </copy>
                                <copy>
                                  <from>$outValidaLimiteDestino.response/ns3:Resultado/ns21:message</from>
                                  <to>$mensajeTotalContratoDesembolso</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$estadoTotalContratoDesembolso</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$mensajeTotalContratoDesembolso</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </else>
                          </if>
                          <else>
                            <documentation>
                              <![CDATA[ERROR]]>
                            </documentation>
                            <assign name="estadoMensajeError">
                              <copy>
                                <from>'ERROR'</from>
                                <to>$estadoTotalContratoDesembolso</to>
                              </copy>
                              <copy>
                                <from>$outValidaLimiteDestino.response/ns3:Resultado/ns21:message</from>
                                <to>$mensajeTotalContratoDesembolso</to>
                              </copy>
                              <extensionAssignOperation>
                                <bpelx:append>
                                  <bpelx:from>$estadoTotalContratoDesembolso</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                              <extensionAssignOperation>
                                <bpelx:append>
                                  <bpelx:from>  $mensajeTotalContratoDesembolso</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                            </assign>
                          </else>
                        </if>
                      </sequence>
                      <else>
                        <documentation>
                          <![CDATA[ErrorFlexcube]]>
                        </documentation>
                        <assign name="estadoMensajeFlexcube">
                          <copy ignoreMissingFromData="no" bpelx:insertMissingToData="yes">
                            <from>'ERROR_FLEXCUBE'</from>
                            <to>$estadoTotalContratoDesembolso</to>
                          </copy>
                          <copy bpelx:insertMissingToData="yes">
                            <from>'ERROR_FLEXCUBE'</from>
                            <to>$mensajeTotalContratoDesembolso</to>
                          </copy>
                          <copy>
                            <from>$estadoTotalContratoDesembolso</from>
                            <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO' ]/ns5:Estado/ns6:DescripcionCorta</to>
                          </copy>
                        </assign>
                      </else>
                    </if>
                  </sequence>
                </else>
              </if>
              <assign name="requestBitacora">
                <copy>
                  <from>$inputVariable.request/ns3:instanciaProceso</from>
                  <to>$inCrearBitacora.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                </copy>
                <copy>
                  <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion ='TOTAL_CONTRATO_DESEMBOLSO']/ns5:Exceptuado/ns6:Id</from>
                  <to>$inCrearBitacora.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                </copy>
                <copy>
                  <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                  <to>$inCrearBitacora.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                </copy>
                <copy>
                  <from>$mensajeTotalContratoDesembolso</from>
                  <to>$inCrearBitacora.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                </copy>
                <copy>
                  <from>$estadoTotalContratoDesembolso</from>
                  <to>$inCrearBitacora.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                </copy>
              </assign>
              <invoke name="InvokeCrearBitacora" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacora" outputVariable="outCrearBitacora"/>
              <if name="IfOK">
                <documentation>
                  <![CDATA[OK]]>
                </documentation>
                <condition>$outCrearBitacora.response/ns30:Resultado/ns21:result = 'OK'</condition>
                <empty name="Empty"/>
                <else>
                  <documentation>
                    <![CDATA[ERROR]]>
                  </documentation>
                  <assign name="errorBitacoraLimiteGlobal">
                    <copy>
                      <from>'Error al insertar en la Bitacora'</from>
                      <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_CONTRATO_DESEMBOLSO']/ns4:Mensaje/ns6:Descripcion</to>
                    </copy>
                  </assign>
                </else>
              </if>
              <assign name="XQ_ResponseValidarLimiteDestino">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:processXQuery10('../Transformations/XQ_ResponseValidarLimiteDestino.xqy', 'inputVariable.request', $inputVariable.request)</from>
                  <to variable="outvariableTotalContratoDesembolso" part="response"/>
                </copy>
              </assign>
            </sequence>
            <else>
              <empty name="SinTotalContratoDesembolso"/>
            </else>
          </if>
        </scope>
      </sequence>
      <sequence name="ValidarCondiciones">
        <scope name="ValidarCondiciones" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
          <variables>
            <variable name="estadoCondiciones" type="xsd:string"/>
            <variable name="mensajeCondiciones" type="xsd:string"/>
            <variable name="inCrearBitacoraCondiciones" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="inValidarCondicionesDesembolso" messageType="ns42:ValidarCondicionesDesembolsoRequestMessage"/>
          </variables>
          <sequence name="ValidarCondiciones">
            <if name="IfValidaRegla">
              <documentation>
                <![CDATA[ValidarCondiciones]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='CONDICIONES'])&gt;0</condition>
              <sequence>
                <if name="IfValidaReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoMensajeExceptuada">
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoCondiciones</to>
                    </copy>
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajeCondiciones</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from>$estadoCondiciones</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence name="Sequence17">
                      <assign name="requestValidarCondiciones">
                        <copy ignoreMissingFromData="yes">
                          <from>$inputVariable.request/ns3:idDesembolso</from>
                          <to>$inValidarCondicionesDesembolso.request/ns3:idDesembolso</to>
                        </copy>
                        <copy>
                          <from>false()</from>
                          <to>$activarRegla</to>
                        </copy>
                      </assign>
                      <invoke name="InvokeValidarCondicionesDesembolso_SB" partnerLink="ValidarCondicionesDesembolso_SB" portType="ns42:ValidarCondicionesDesembolsoPT" operation="ValidarCondicionesDesembolso" inputVariable="inValidarCondicionesDesembolso" outputVariable="outValidarCondicionesDesembolso" bpelx:invokeAsDetail="no"/>
                      <if name="IfValidaOK">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outValidarCondicionesDesembolso.response/ns3:Resultado/ns21:result = 'OK'</condition>
                        <if name="IfValidaEstado">
                          <documentation>
                            <![CDATA[CUMPLIDA]]>
                          </documentation>
                          <condition>$outValidarCondicionesDesembolso.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                          <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                              <from>'CUMPLIDA'</from>
                              <to>$estadoCondiciones</to>
                            </copy>
                            <copy>
                              <from>$outValidarCondicionesDesembolso.response/ns3:Resultado/ns21:message</from>
                              <to>$mensajeCondiciones</to>
                            </copy>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoCondiciones</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='CONDICIONES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajeCondiciones</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                          <elseif>
                            <documentation>
                              <![CDATA[NO_CUMPLIDA]]>
                            </documentation>
                            <condition>$outValidarCondicionesDesembolso.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                            <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy>
                                <from>'NO_CUMPLIDA'</from>
                                <to>$estadoCondiciones</to>
                              </copy>
                              <copy>
                                <from>$outValidarLimitePrograma.response/ns3:Resultado/ns21:message</from>
                                <to>$mensajeCondiciones</to>
                              </copy>
                              <extensionAssignOperation>
                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:from>$estadoCondiciones</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='CONDICIONES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                              <extensionAssignOperation>
                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:from>$mensajeCondiciones</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                            </assign>
                          </elseif>
                          <else>
                            <documentation>
                              <![CDATA[NO_EVALUADA]]>
                            </documentation>
                            <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy>
                                <from>'NO_EVALUADA'</from>
                                <to>$estadoCondiciones</to>
                              </copy>
                              <copy>
                                <from>$outValidarCondicionesDesembolso.response/ns3:Resultado/ns21:message</from>
                                <to>$mensajeCondiciones</to>
                              </copy>
                              <extensionAssignOperation>
                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:from>$estadoCondiciones</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='CONDICIONES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                              <extensionAssignOperation>
                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:from>$mensajeCondiciones</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                            </assign>
                          </else>
                        </if>
                        <else>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                              <from>'ERROR'</from>
                              <to>$estadoCondiciones</to>
                            </copy>
                            <copy>
                              <from>$outValidarCondicionesDesembolso.response/ns3:Resultado/ns21:message</from>
                              <to>$mensajeCondiciones</to>
                            </copy>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoCondiciones</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajeCondiciones</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraTotalLC">
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraCondiciones.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraCondiciones.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraCondiciones.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <copy>
                    <from>$mensajeCondiciones</from>
                    <to>$inCrearBitacoraCondiciones.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                  </copy>
                  <copy>
                    <from>$estadoCondiciones</from>
                    <to>$inCrearBitacoraCondiciones.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                  </copy>
                </assign>
                <invoke name="InvokeCrearBitacoraTotalLC" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraCondiciones" outputVariable="outCrearBitacoraCondiciones" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraCondiciones.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="OK"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacoraCondiciones" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                      <copy>
                        <from>'Error al insertar en la Bitacora'</from>
                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'CONDICIONES']/ns4:Mensaje/ns6:Descripcion</to>
                      </copy>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponseCondiciones">
                  <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseCondiciones.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outvariableCondiciones" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaTotalLC"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarPlazosCapitalMinimoMaximoGracia">
        <scope name="ValidarPlazosCapitalMinimoMaximoGracia" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
          <variables>
            <variable name="estadoPlazoCapitalMinimoMaximoGracia" type="xsd:string"/>
            <variable name="mensajePlazoCapitalMinimoMaximoGracia" type="xsd:string"/>
            <variable name="inValidarPlazoCapitalMinimoMaximoGracia" messageType="ns41:requestValidarPlazoMessage"/>
            <variable name="inCrearBitacoraPlazoCapitalMinimoMaximoGracia" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <sequence name="ValidarPlazosCapitalMinimoMaximoGracia">
            <if name="IfValidaRegla">
              <documentation>
                <![CDATA[ValidarPlazosCapitalMinimoMaximoGracia]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PLAZO_CAPITAL_MINIMO'])&gt;0 or count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PLAZO_CAPITAL_MAXIMO'])&gt;0 or count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PERIODO_GRACIA'])&gt;0</condition>
              <sequence>
                <sequence name="SequenceValidarPlazosCapitalMinimoMaximoGracia">
                  <assign name="requestValidarPlazoCapitalMinimoMaximoGracia">
                    <copy ignoreMissingFromData="yes">
                      <from>$inputVariable.request/ns3:idDesembolso</from>
                      <to>$inValidarPlazoCapitalMinimoMaximoGracia.request/ns3:idDesembolso</to>
                    </copy>
                    <copy>
                      <from>'GRACIA'</from>
                      <to>$inValidarPlazoCapitalMinimoMaximoGracia.request/ns3:TipoLimite/ns9:value</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeValidarPlazoCapitalMinimoMaximoGracia" bpelx:invokeAsDetail="no" partnerLink="ValidarPlazo_SB" portType="ns41:ValidarPlazo_PT" operation="ValidarPlazo" inputVariable="inValidarPlazoCapitalMinimoMaximoGracia" outputVariable="outValidarPlazoCapitalMinimoMaximoGracia"/>
                          <if name="IfResultadoValidarPlazo">
          <documentation>
            <![CDATA[OK]]>
          </documentation>
          <condition>$outValidarPlazoCapitalMinimoMaximoGracia.response/ns3:Resultado/ns21:result = 'OK'</condition>
          <empty name="Continua"/>
          <else>
            <documentation>
              <![CDATA[ERROR Retry]]>
            </documentation>
            <sequence name="SequenceError">
			  <invoke name="InvokeValidarPlazoCapitalMinimoMaximoGracia" bpelx:invokeAsDetail="no"
                partnerLink="ValidarPlazo_SB" portType="ns41:ValidarPlazo_PT" operation="ValidarPlazo"
                inputVariable="inValidarPlazoCapitalMinimoMaximoGracia"
                outputVariable="outValidarPlazoCapitalMinimoMaximoGracia"/>
              <if name="IfResultadoValidarPlazo">
                <documentation>
                  <![CDATA[OK]]>
                </documentation>
                <condition>$outValidarPlazoCapitalMinimoMaximoGracia.response/ns3:Resultado/ns21:result = 'OK'</condition>
                <empty name="Continua"/>
                <else>
                  <documentation>
                    <![CDATA[ERROR]]>
                  </documentation>
                  <sequence name="SequenceError">
                    <assign name="AssignError">
                                <copy>
                                  <from>'ERROR'</from>
                                  <to>$outputVariable.response/ns3:Resultado/ns21:result</to>
                                </copy>
                                <copy>
                                  <from>concat('Ocurrio el siguiente problema en ValidarPlazoCapitalMinimoMaximoGracia: ',$outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:Resultado/ns21:message)</from>
                                  <to>$outputVariable.response/ns3:Resultado/ns21:message</to>
                                </copy>
                              </assign>
                    <reply name="ReplyError" variable="outputVariable" partnerLink="validarreglasdesembolso_client"
                           portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso"/>
                    <exit name="ExitError"/>
                </sequence>
                </else>
              </if>
            </sequence>
          </else>
        </if>
                </sequence>
                <assign name="XQ_ResponsePlazoCapitalMinimoMaximoGracia">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponsePlazoCapitalMinimoMaximoGracia.xqy', 'inputVariable.request', $inputVariable.request, 'outValidarPlazoCapitalMinimoMaximoGracia.response', $outValidarPlazoCapitalMinimoMaximoGracia.response)</from>
                    <to variable="outvariableValidarPlazoCapitalMinimoMaximoGracia" part="response"/>
                  </copy>
                </assign>
                <forEach parallel="no" counterName="ForEachMinimoMaximoGraciaCounter" name="ForEachCapitalMinimoMaximoGraciaBitacora">
                  <startCounterValue>1</startCounterValue>
                  <finalCounterValue>count($outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:TareaReglas/ns4:ReglasEvaluacion)</finalCounterValue>
                  <scope name="ScopeForEachCapitalMinimoMaximoGraciaBitacora">
                    <sequence name="SequenceForEachCapitalMinimoMaximoGraciaBitacora">
                      <if name="IfValidaRequestBitacora">
                        <documentation/>
                        <condition>$outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:TareaReglas/ns4:ReglasEvaluacion[$ForEachMinimoMaximoGraciaCounter]/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                        <assign name="requestCrearBitacoraExeptuada">
                          <copy>
                            <from>$inputVariable.request/ns3:instanciaProceso</from>
                            <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                          </copy>
                          <copy>
                            <from>$outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:TareaReglas/ns4:ReglasEvaluacion[$ForEachMinimoMaximoGraciaCounter]/ns5:Exceptuado/ns6:Id</from>
                            <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                          </copy>
                          <copy>
                            <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                            <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                          </copy>
                          <copy>
                            <from>'EXCEPTUADA'</from>
                            <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                          </copy>
                          <copy>
                            <from>'EXCEPTUADA'</from>
                            <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                          </copy>
                        </assign>
                        <elseif>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <condition>$outValidarPlazoCapitalMinimoMaximoGracia.response/ns3:Resultado/ns21:result != 'OK'</condition>
                          <assign name="requestCrearBitacoraError">
                            <copy>
                              <from>$inputVariable.request/ns3:instanciaProceso</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                            </copy>
                            <copy>
                              <from>$outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:TareaReglas/ns4:ReglasEvaluacion[$ForEachMinimoMaximoGraciaCounter]/ns5:Exceptuado/ns6:Id</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                            </copy>
                            <copy>
                              <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                            </copy>
                            <copy>
                              <from>'ERROR'</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                            </copy>
                            <copy>
                              <from>$outValidarPlazoCapitalMinimoMaximoGracia.response/ns3:Resultado/ns21:message</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                            </copy>
                          </assign>
                        </elseif>
                        <else>
                          <assign name="requestCrearBitacoraPlazoCapitalMinimoMaximoGracia">
                            <copy>
                              <from>$inputVariable.request/ns3:instanciaProceso</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                            </copy>
                            <copy>
                              <from>$outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:TareaReglas/ns4:ReglasEvaluacion[$ForEachMinimoMaximoGraciaCounter]/ns5:Exceptuado/ns6:Id</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                            </copy>
                            <copy>
                              <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                            </copy>
                            <copy>
                              <from>$outValidarPlazoCapitalMinimoMaximoGracia.response/ns3:Resultado/ns21:message</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                            </copy>
                            <copy>
                              <from>$outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:TareaReglas/ns4:ReglasEvaluacion[$ForEachMinimoMaximoGraciaCounter]/ns5:Estado/ns6:DescripcionCorta</from>
                              <to>$inCrearBitacoraPlazoCapitalMinimoMaximoGracia.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                            </copy>
                          </assign>
                        </else>
                      </if>
                      <invoke name="InvokeCrearBitacoraPlazoCapitalMinimoMaximoGracia" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraPlazoCapitalMinimoMaximoGracia" outputVariable="outCrearBitacoraPlazoCapitalMinimoMaximoGracia"/>
                      <if name="IfValidaOK">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outCrearBitacoraPlazoCapitalMinimoMaximoGracia.response/ns30:Resultado/ns21:result = 'OK'</condition>
                        <empty name="OK"/>
                        <else>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <assign name="errorBitacoraPlazoCapitalMinimoMaximoGracia" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy bpelx:insertMissingToData="yes">
                              <from>concat($outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:TareaReglas/ns4:ReglasEvaluacion[$ForEachMinimoMaximoGraciaCounter]/ns4:Mensaje/ns6:Descripcion, ', Error al insertar en la Bitacora')</from>
                              <to>$outvariableValidarPlazoCapitalMinimoMaximoGracia.response/ns3:TareaReglas/ns4:ReglasEvaluacion[$ForEachMinimoMaximoGraciaCounter]/ns4:Mensaje/ns6:Descripcion</to>
                            </copy>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </scope>
                </forEach>
              </sequence>
              <else>
                <empty name="SinReglaPlazoCapitalMinimoMaximoGracia"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarComponenteInteres">
        <scope name="ValidarComponenteInteres" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
          <variables>
            <variable name="estadoComponenteInteres" type="xsd:string"/>
            <variable name="mensajeComponenteInteres" type="xsd:string"/>
            <variable name="inValidarComponenteInteres" messageType="ns41:requestValidarPlazoMessage"/>
            <variable name="inCrearBitacoraComponenteInteres" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <sequence name="ValidarComponenteInteres">
            <if name="IfValidaRegla">
              <documentation>
                <![CDATA[ValidarComponenteInteres]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='COMPONENTE_INTERES'])&gt;0</condition>
              <sequence>
                <if name="IfValidaReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoMensajeExceptuada">
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoComponenteInteres</to>
                    </copy>
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajeComponenteInteres</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append>
                        <bpelx:from>$estadoComponenteInteres</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence name="Sequence17">
                      <assign name="requestValidarComponenteInteres">
                        <copy ignoreMissingFromData="yes">
                          <from>$inputVariable.request/ns3:idDesembolso</from>
                          <to>$inValidarComponenteInteres.request/ns3:idDesembolso</to>
                        </copy>
                        <copy>
                          <from>'COMPONENTE'</from>
                          <to>$inValidarComponenteInteres.request/ns3:TipoLimite/ns9:value</to>
                        </copy>
                      </assign>
                      <invoke name="InvokeValidarComponenteInteres" partnerLink="ValidarPlazo_SB"
                              portType="ns41:ValidarPlazo_PT" operation="ValidarPlazo"
                              inputVariable="inValidarComponenteInteres" outputVariable="outValidarComponenteInteres"
                              bpelx:invokeAsDetail="no"/>
                      <if name="IfResultadoValidarComponenteInteres">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outValidarComponenteInteres.response/ns3:Resultado/ns21:result = 'OK'</condition>
                        <empty name="Continua"/>
                        <else>
                          <documentation>
                            <![CDATA[ERROR Retry]]>
                          </documentation>
                          <sequence name="SequenceError">
                            <invoke name="InvokeValidarComponenteInteres" bpelx:invokeAsDetail="no"
                                    partnerLink="ValidarPlazo_SB" portType="ns41:ValidarPlazo_PT"
                                    operation="ValidarPlazo" inputVariable="inValidarComponenteInteres"
                                    outputVariable="outValidarComponenteInteres"/>
                            <if name="IfResultadoValidarComponenteInteres">
                              <documentation>
                                <![CDATA[OK]]>
                              </documentation>
                              <condition>$outValidarComponenteInteres.response/ns3:Resultado/ns21:result = 'OK'</condition>
                              <empty name="Continua"/>
                              <else>
                                <documentation>
                                  <![CDATA[ERROR]]>
                                </documentation>
                                <sequence name="SequenceError">
                                  <assign name="estadoMensajeError"
                                          xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                    <copy>
                                      <from>'ERROR'</from>
                                      <to>$estadoComponenteInteres</to>
                                    </copy>
                                    <copy>
                              <from>$outValidarComponenteInteres.response/ns3:Resultado/ns21:message</from>
                              <to>$mensajeComponenteInteres</to>
                                    </copy>
                                    <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                        <bpelx:from>$estadoComponenteInteres</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                    <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                        <bpelx:from>$mensajeComponenteInteres</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                  </assign>
                                  <assign name="AssignError">
                                    <copy>
                                      <from>'ERROR'</from>
                                      <to>$outputVariable.response/ns3:Resultado/ns21:result</to>
                                    </copy>
                                    <copy>
                                      <from>concat('Ocurrio el siguiente problema en consultarSolicitudDesembolso: ',$outValidarComponenteInteres.response/ns3:Resultado/ns21:message)</from>
                                      <to>$outputVariable.response/ns3:Resultado/ns21:message</to>
                                    </copy>
                                  </assign>
                                  <reply name="ReplyError" variable="outputVariable"
                                         partnerLink="validarreglasdesembolso_client"
                                         portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso"/>
                                  <exit name="ExitError"/>
                                </sequence>
                              </else>
                            </if>
                          </sequence>
                        </else>
                      </if>
                        <if name="IfValidaEstado">
                          <documentation>
                            <![CDATA[CUMPLIDA]]>
                            </documentation>
                          <condition>$outValidarComponenteInteres.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                          <assign name="estadoMensajeCumplida"
                                  xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                              <from>'CUMPLIDA'</from>
                              <to>$estadoComponenteInteres</to>
                            </copy>
                            <copy>
                              <from>$outValidarComponenteInteres.response/ns3:Resultado/ns21:message</from>
                              <to>$mensajeComponenteInteres</to>
                            </copy>
                            <extensionAssignOperation>
                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoComponenteInteres</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='COMPONENTE_INTERES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajeComponenteInteres</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                          <elseif>
                            <documentation>
                              <![CDATA[NO_CUMPLIDA]]>
                            </documentation>
                            <condition>$outValidarComponenteInteres.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                            <assign name="estadoMensajeCumplida"
                                    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy>
                                <from>'NO_CUMPLIDA'</from>
                                <to>$estadoComponenteInteres</to>
                              </copy>
                              <copy>
                                <from>$outValidarComponenteInteres.response/ns3:Resultado/ns21:message</from>
                                <to>$mensajeComponenteInteres</to>
                              </copy>
                              <extensionAssignOperation>
                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:from>$estadoComponenteInteres</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='COMPONENTE_INTERES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                              <extensionAssignOperation>
                                <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:from>$mensajeComponenteInteres</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                            </assign>
                          </elseif>
                          <else>
                            <documentation>
                              <![CDATA[NO_EVALUADA]]>
                            </documentation>
                            <assign name="estadoMensajeCumplida"
                                    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                                <from>'NO_EVALUADA'</from>
                                <to>$estadoComponenteInteres</to>
                              </copy>
                              <copy>
                                <from>'Faltan Parámetros'</from>
                                <to>$mensajeComponenteInteres</to>
                              </copy>
                              <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:from>$estadoComponenteInteres</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='COMPONENTE_INTERES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                              <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                  <bpelx:from>$mensajeComponenteInteres</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                            </assign>
                          </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraComponenteInteres">
               
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraComponenteInteres.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraComponenteInteres.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraComponenteInteres.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <copy>
                    <from>$mensajeComponenteInteres</from>
                    <to>$inCrearBitacoraComponenteInteres.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                  </copy>
                  <copy>
                    <from>$estadoComponenteInteres</from>
                    <to>$inCrearBitacoraComponenteInteres.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                  </copy>
                </assign>
                <invoke name="InvokeCrearBitacoraComponenteInteres" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraComponenteInteres" outputVariable="outCrearBitacoraComponenteInteres" bpelx:invokeAsDetail="no"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraComponenteInteres.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="OK"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacoraComponenteInteres" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                      <copy>
                        <from>'Error al insertar en la Bitacora'</from>
                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'COMPONENTE_INTERES']/ns4:Mensaje/ns6:Descripcion</to>
                      </copy>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponseComponenteInteres">
                  <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseComponenteInteres.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outvariableValidarComponenteInteres" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaComponenteInteres"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarPresentacionF1">
        <scope name="ValidarPresentacionF1" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
          <variables>
            <variable name="estadoPresentacionF1" type="xsd:string"/>
            <variable name="mensajePresentacionF1" type="xsd:string"/>
            <variable name="inValidarLimitesPorcentajeLinea" messageType="ns36:requestLimitePorcentajeLineaMessage"/>
            <variable name="inCrearBitacoraPresentacionF1" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="inValidarPlazoF1" messageType="ns40:requestValidarPlazoF1Message"/>
          </variables>
          <sequence name="ValidarPresentacionF1">
            <if name="IfValidaRegla">
              <documentation>
                <![CDATA[ValidarPresentacionF1]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PRESENTACION_F1'])&gt;0 and $outConsultarInformacionReglaById.response/ns3:Desembolso/ns15:modalidadFinan/ns6:Id!=1</condition>
              <sequence>
                <if name="IfValidaReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoMensajeExceptuada">
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoPresentacionF1</to>
                    </copy>
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajePresentacionF1</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from>$estadoPresentacionF1</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence name="ReglaNoExceptuada">
                      <if name="IfValidaDatosRequeridos">
                        <documentation>
                          <![CDATA[ConDatosRequeridos]]>
                        </documentation>
                        <condition>string-length($outConsultarInformacionReglaById.response/ns3:Desembolso/ns15:Programa/ns16:LineaFinanciera/ns6:codigoExterno) &gt; 0 and string-length($outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:NumeroLineaCredito) &gt; 0</condition>
                        <sequence>
                          <assign name="requestValidarPlazoF1">
                            <copy ignoreMissingFromData="yes">
                              <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:NumeroLineaCredito</from>
                              <to>$inValidarPlazoF1.request/ns3:LineaCredito/ns8:NumeroLineaCredito</to>
                            </copy>
                            <copy ignoreMissingFromData="yes">
                              <from>$outConsultarInformacionReglaById.response/ns3:Desembolso/ns15:Programa/ns16:LineaFinanciera/ns6:codigoExterno</from>
                              <to>$inValidarPlazoF1.request/ns3:LineaCredito/ns8:ContratoDesembolso/ns15:Programa/ns16:LineaFinanciera/ns6:codigoExterno</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeValidarPlazoF1_SB" partnerLink="ValidarPlazoF1_SB" portType="ns40:ValidarPlazoF1_PT" operation="ValidarPlazoF1" inputVariable="inValidarPlazoF1" outputVariable="outValidarPlazoF1" bpelx:invokeAsDetail="no"/>
                          <if name="IfValidaOK">
                            <documentation>
                              <![CDATA[OK]]>
                            </documentation>
                            <condition>$outValidarPlazoF1.response/ns3:Resultado/ns21:result = 'OK'</condition>
                            <if name="IfValidaEstado">
                              <documentation>
                                <![CDATA[CUMPLIDA]]>
                              </documentation>
                              <condition>$outValidarPlazoF1.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                              <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'CUMPLIDA'</from>
                                  <to>$estadoPresentacionF1</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$outValidarPlazoF1.response/ns3:Resultado/ns21:message</from>
                                  <to>$mensajePresentacionF1</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$estadoPresentacionF1</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PRESENTACION_F1']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$mensajePresentacionF1</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                              <elseif>
                                <documentation>
                                  <![CDATA[NO_CUMPLIDA]]>
                                </documentation>
                                <condition>$outValidarPlazoF1.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                                <assign name="estadoMensajeNoCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <copy>
                                    <from>'NO_CUMPLIDA'</from>
                                    <to>$estadoPresentacionF1</to>
                                  </copy>
                                  <copy ignoreMissingFromData="yes">
                                    <from>$outValidarPlazoF1.response/ns3:Resultado/ns21:message</from>
                                    <to>$mensajePresentacionF1</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$estadoPresentacionF1</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PRESENTACION_F1']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$mensajePresentacionF1</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </elseif>
                              <else>
                                <documentation>
                                  <![CDATA[NO_EVALUADA]]>
                                </documentation>
                                <assign name="estadoMensajeNoEvaluada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <copy>
                                    <from>'NO_EVALUADA'</from>
                                    <to>$estadoPresentacionF1</to>
                                  </copy>
                                  <copy ignoreMissingFromData="yes">
                                    <from>$outValidarPlazoF1.response/ns3:Resultado/ns21:message</from>
                                    <to>$mensajePresentacionF1</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$estadoPresentacionF1</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PRESENTACION_F1']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$mensajePresentacionF1</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </else>
                            </if>
                            <else>
                              <documentation>
                                <![CDATA[ERROR]]>
                              </documentation>
                              <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'ERROR'</from>
                                  <to>$estadoPresentacionF1</to>
                                </copy>
                                <copy>
                                  <from>$outValidarPlazoF1.response/ns3:Resultado/ns21:message</from>
                                  <to>$mensajePresentacionF1</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$estadoPresentacionF1</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$mensajePresentacionF1</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </else>
                          </if>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[SinDatosRequeridos]]>
                          </documentation>
                          <assign name="estadoMensajeNoEvaluada">
                            <copy>
                              <from>'NO_EVALUADA'</from>
                              <to>$estadoPresentacionF1</to>
                            </copy>
                            <copy>
                              <from>concat('No se ha podido realizar la evaluacion debido a la falta de uno de los siguientes parametros, NumeroLinea: ',$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:NumeroLineaCredito,' ProgramaOperacion: ',$outConsultarInformacionReglaById.response/ns3:Desembolso/ns15:Programa/ns16:LineaFinanciera/ns6:codigoExterno)</from>
                              <to>$mensajePresentacionF1</to>
                            </copy>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoPresentacionF1</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PRESENTACION_F1']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajePresentacionF1</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraLimiteGlobal">
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraPresentacionF1.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraPresentacionF1.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraPresentacionF1.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <copy>
                    <from>$mensajePresentacionF1</from>
                    <to>$inCrearBitacoraPresentacionF1.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                  </copy>
                  <copy>
                    <from>$estadoPresentacionF1</from>
                    <to>$inCrearBitacoraPresentacionF1.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                  </copy>
                </assign>
                <invoke name="InvokeCrearBitacoraPresentacionF1" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraPresentacionF1" outputVariable="outCrearBitacoraPresentacionF1" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraPresentacionF1.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="OK"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacoraLimiteGlobal" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                      <copy>
                        <from>'Error al insertar en la Bitacora'</from>
                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PRESENTACION_F1']/ns4:Mensaje/ns6:Descripcion</to>
                      </copy>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponsePresentacionF1">
                  <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponsePresentacionF1.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outvariablePresentacionF1" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaPresentacionF1"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarPreviaHoraCierre">
        <scope name="ValidarPreviaHoraCierre" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
          <variables>
            <variable name="estadoPreHora" type="xsd:string"/>
            <variable name="mensajePreHora" type="xsd:string"/>
            <variable name="inValidarPreHoraCierre" messageType="ns38:ValidarHoraCierreRequestMessage"/>
            <variable name="inCrearBitacoraPreHora" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <if name="IfValidaRegla">
            <documentation>
              <![CDATA[ValidarPreviaHoraCierre]]>
            </documentation>
            <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PREVIA_HORA_CIERRE_MONEDA'])&gt;0</condition>
            <sequence name="Sequence21">
              <if name="IfValidaReglaExceptuada">
                <documentation>
                  <![CDATA[ReglaExceptuada]]>
                </documentation>
                <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                <assign name="estadoMensajeExceptuada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <copy>
                    <from>'EXCEPTUADA'</from>
                    <to>$estadoPreHora</to>
                  </copy>
                  <copy>
                    <from>'EXCEPTUADA'</from>
                    <to>$mensajePreHora</to>
                  </copy>
                  <extensionAssignOperation>
                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                      <bpelx:from>$estadoPreHora</bpelx:from>
                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                    </bpelx:append>
                  </extensionAssignOperation>
                </assign>
                <else>
                  <documentation>
                    <![CDATA[ReglaNoExceptuada]]>
                  </documentation>
                  <sequence name="Sequence19">
                    <assign name="requestValidarHoraCierre">
                      <copy>
                        <from>'PREVIA_HORA_CIERRE_MONEDA'</from>
                        <to>$inValidarPreHoraCierre.request/ns3:Regla/ns5:Transaccion</to>
                      </copy>
                      <copy ignoreMissingFromData="yes">
                        <from>$inputVariable.request/ns3:idDesembolso</from>
                        <to>$inValidarPreHoraCierre.request/ns3:Regla/ns5:DetalleRegla/ns11:id</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeValidarHoraCierre_SB" partnerLink="ValidarHoraCierre_SB" portType="ns38:ValidarHoraCierrePT" operation="ValidarHoraCierre" inputVariable="inValidarPreHoraCierre" outputVariable="outValidarPreHoraCierre" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                    <if name="IfValidaOK">
                      <documentation>
                        <![CDATA[OK]]>
                      </documentation>
                      <condition>$outValidarPreHoraCierre.response/ns3:Resultado/ns21:result = 'OK'</condition>
                      <if name="IfValidarEstado">
                        <documentation>
                          <![CDATA[CUMPLIDA]]>
                        </documentation>
                        <condition>$outValidarPreHoraCierre.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                        <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                          <copy>
                            <from>'CUMPLIDA'</from>
                            <to>$estadoPreHora</to>
                          </copy>
                          <copy>
                            <from>$outValidarPreHoraCierre.response/ns3:Resultado/ns21:message</from>
                            <to>$mensajePreHora</to>
                          </copy>
                          <extensionAssignOperation>
                            <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <bpelx:from>$estadoPreHora</bpelx:from>
                              <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PREVIA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                            </bpelx:append>
                          </extensionAssignOperation>
                          <extensionAssignOperation>
                            <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <bpelx:from>$mensajePreHora</bpelx:from>
                              <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                            </bpelx:append>
                          </extensionAssignOperation>
                        </assign>
                        <elseif>
                          <documentation>
                            <![CDATA[NO_CUMPLIDA]]>
                          </documentation>
                          <condition>$outValidarPreHoraCierre.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                          <assign name="estadoMensajeNoCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                              <from>'NO_CUMPLIDA'</from>
                              <to>$estadoPreHora</to>
                            </copy>
                            <copy>
                              <from>$outValidarPreHoraCierre.response/ns3:Resultado/ns21:message</from>
                              <to>$mensajePreHora</to>
                            </copy>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoPreHora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PREVIA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajePreHora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                        </elseif>
                        <else>
                          <documentation>
                            <![CDATA[NO_EVALUADA]]>
                          </documentation>
                          <assign name="estadoMensajeNoEvaluada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                              <from>'NO_EVALUADA'</from>
                              <to>$estadoPreHora</to>
                            </copy>
                            <copy>
                              <from>$outValidarPreHoraCierre.response/ns3:Resultado/ns21:message</from>
                              <to>$mensajePreHora</to>
                            </copy>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoPreHora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PREVIA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajePreHora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                        </else>
                      </if>
                      <else>
                        <documentation>
                          <![CDATA[ERROR]]>
                        </documentation>
                        <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                          <copy>
                            <from>'ERROR'</from>
                            <to>$estadoPreHora</to>
                          </copy>
                          <copy>
                            <from>$outValidarPreHoraCierre.response/ns3:Resultado/ns21:message</from>
                            <to>$mensajePreHora</to>
                          </copy>
                          <extensionAssignOperation>
                            <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <bpelx:from>$estadoPreHora</bpelx:from>
                              <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                            </bpelx:append>
                          </extensionAssignOperation>
                          <extensionAssignOperation>
                            <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <bpelx:from>$mensajePreHora</bpelx:from>
                              <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                            </bpelx:append>
                          </extensionAssignOperation>
                        </assign>
                      </else>
                    </if>
                  </sequence>
                </else>
              </if>
              <assign name="requestCrearBitacoraProxHora">
                <copy>
                  <from>$inputVariable.request/ns3:instanciaProceso</from>
                  <to>$inCrearBitacoraPreHora.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                </copy>
                <copy>
                  <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns5:Exceptuado/ns6:Id</from>
                  <to>$inCrearBitacoraPreHora.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                </copy>
                <copy>
                  <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                  <to>$inCrearBitacoraPreHora.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                </copy>
                <copy>
                  <from>$mensajePreHora</from>
                  <to>$inCrearBitacoraPreHora.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                </copy>
                <copy>
                  <from>$estadoPreHora</from>
                  <to>$inCrearBitacoraPreHora.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                </copy>
              </assign>
              <invoke name="InvokeCrearBitacoraPreHora_SB" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraPreHora" outputVariable="outCrearBitacoraPreHora" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
              <if name="IfValidaOK">
                <documentation>
                  <![CDATA[OK]]>
                </documentation>
                <condition>$outCrearBitacoraPreHora.response/ns30:Resultado/ns21:result = 'OK'</condition>
                <empty name="OK"/>
                <else>
                  <documentation>
                    <![CDATA[ERROR]]>
                  </documentation>
                  <assign name="errorBitacoraProxHora" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                    <copy>
                      <from>'Error al insertar en la Bitacora'</from>
                      <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PREVIA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</to>
                    </copy>
                  </assign>
                </else>
              </if>
              <assign name="XQ_ResponsePreviaHoraCierre">
                <bpelx:annotation xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                  <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:processXQuery10('../Transformations/XQ_ResponsePreviaHoraCierre.xqy', 'inputVariable.request', $inputVariable.request)</from>
                  <to variable="outvariablePreviaHoraCierre" part="response"/>
                </copy>
              </assign>
            </sequence>
            <else>
              <sequence name="Sequence20">
                <empty name="SinReglaProximaHoraCierre"/>
              </sequence>
            </else>
          </if>
        </scope>
      </sequence>
      <sequence name="ValidarProximaHoraCierre">
        <scope name="ValidarProximaHoraCierre">
          <variables>
            <variable name="estadoProxHora" type="xsd:string"/>
            <variable name="mensajeProxHora" type="xsd:string"/>
            <variable name="inValidarProxHoraCierre" messageType="ns38:ValidarHoraCierreRequestMessage"/>
            <variable name="inCrearBitacoraProxHora" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <if name="IfValidaRegla">
            <documentation>
              <![CDATA[ValidarProximaHoraCierre]]>
            </documentation>
            <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PROXIMA_HORA_CIERRE_MONEDA'])&gt;0</condition>
            <sequence name="Sequence21">
              <if name="IfValidaReglaExceptuada">
                <documentation>
                  <![CDATA[ReglaExceptuada]]>
                </documentation>
                <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                <assign name="estadoMensajeExceptuada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                  <copy>
                    <from>'EXCEPTUADA'</from>
                    <to>$estadoProxHora</to>
                  </copy>
                  <copy>
                    <from>'EXCEPTUADA'</from>
                    <to>$mensajeProxHora</to>
                  </copy>
                  <extensionAssignOperation>
                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                      <bpelx:from>$estadoProxHora</bpelx:from>
                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                    </bpelx:append>
                  </extensionAssignOperation>
                </assign>
                <else>
                  <documentation>
                    <![CDATA[ReglaNoExceptuada]]>
                  </documentation>
                  <sequence name="Sequence19">
                    <assign name="requestValidarHoraCierre">
                      <copy>
                        <from>'PROXIMA_HORA_CIERRE_MONEDA'</from>
                        <to>$inValidarProxHoraCierre.request/ns3:Regla/ns5:Transaccion</to>
                      </copy>
                      <copy ignoreMissingFromData="yes">
                        <from>$inputVariable.request/ns3:idDesembolso</from>
                        <to>$inValidarProxHoraCierre.request/ns3:Regla/ns5:DetalleRegla/ns11:id</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeValidarHoraCierre_SB" partnerLink="ValidarHoraCierre_SB" portType="ns38:ValidarHoraCierrePT" operation="ValidarHoraCierre" inputVariable="inValidarProxHoraCierre" outputVariable="outValidarProxHoraCierre" bpelx:invokeAsDetail="no"/>
                    <if name="IfValidaOK">
                      <documentation>
                        <![CDATA[OK]]>
                      </documentation>
                      <condition>$outValidarProxHoraCierre.response/ns3:Resultado/ns21:result = 'OK'</condition>
                      <if name="IfValidarEstado">
                        <documentation>
                          <![CDATA[CUMPLIDA]]>
                        </documentation>
                        <condition>$outValidarProxHoraCierre.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                        <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                          <copy>
                            <from>'CUMPLIDA'</from>
                            <to>$estadoProxHora</to>
                          </copy>
                          <copy>
                            <from>$outValidarProxHoraCierre.response/ns3:Resultado/ns21:message</from>
                            <to>$mensajeProxHora</to>
                          </copy>
                          <extensionAssignOperation>
                            <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <bpelx:from>$estadoProxHora</bpelx:from>
                              <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PROXIMA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                            </bpelx:append>
                          </extensionAssignOperation>
                          <extensionAssignOperation>
                            <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <bpelx:from>$mensajeProxHora</bpelx:from>
                              <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                            </bpelx:append>
                          </extensionAssignOperation>
                        </assign>
                        <elseif>
                          <documentation>
                            <![CDATA[NO_CUMPLIDA]]>
                          </documentation>
                          <condition>$outValidarProxHoraCierre.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                          <assign name="estadoMensajeNoCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                              <from>'NO_CUMPLIDA'</from>
                              <to>$estadoProxHora</to>
                            </copy>
                            <copy>
                              <from>$outValidarProxHoraCierre.response/ns3:Resultado/ns21:message</from>
                              <to>$mensajeProxHora</to>
                            </copy>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoProxHora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PROXIMA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajeProxHora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                        </elseif>
                        <else>
                          <documentation>
                            <![CDATA[NO_EVALUADA]]>
                          </documentation>
                          <assign name="estadoMensajeNoEvaluada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy>
                              <from>'NO_EVALUADA'</from>
                              <to>$estadoProxHora</to>
                            </copy>
                            <copy>
                              <from>$outValidarProxHoraCierre.response/ns3:Resultado/ns21:message</from>
                              <to>$mensajeProxHora</to>
                            </copy>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoProxHora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PROXIMA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajeProxHora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                        </else>
                      </if>
                      <else>
                        <documentation>
                          <![CDATA[ERROR]]>
                        </documentation>
                        <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                          <copy>
                            <from>'ERROR'</from>
                            <to>$estadoProxHora</to>
                          </copy>
                          <copy>
                            <from>$outValidarProxHoraCierre.response/ns3:Resultado/ns21:message</from>
                            <to>$mensajeProxHora</to>
                          </copy>
                          <extensionAssignOperation>
                            <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <bpelx:from>$estadoProxHora</bpelx:from>
                              <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                            </bpelx:append>
                          </extensionAssignOperation>
                          <extensionAssignOperation>
                            <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <bpelx:from>$mensajeProxHora</bpelx:from>
                              <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                            </bpelx:append>
                          </extensionAssignOperation>
                        </assign>
                      </else>
                    </if>
                  </sequence>
                </else>
              </if>
              <assign name="requestCrearBitacoraProxHora">
                <copy>
                  <from>$inputVariable.request/ns3:instanciaProceso</from>
                  <to>$inCrearBitacoraProxHora.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                </copy>
                <copy ignoreMissingFromData="yes">
                  <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns5:Exceptuado/ns6:Id</from>
                  <to>$inCrearBitacoraProxHora.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                </copy>
                <copy>
                  <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                  <to>$inCrearBitacoraProxHora.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                </copy>
                <copy>
                  <from>$mensajeProxHora</from>
                  <to>$inCrearBitacoraProxHora.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                </copy>
                <copy>
                  <from>$estadoProxHora</from>
                  <to>$inCrearBitacoraProxHora.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                </copy>
              </assign>
              <invoke name="InvokeCrearBitacoraProxHora_SB" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraProxHora" outputVariable="outCrearBitacoraProxHora"/>
              <if name="IfValidaOK">
                <documentation>
                  <![CDATA[OK]]>
                </documentation>
                <condition>$outCrearBitacoraProxHora.response/ns30:Resultado/ns21:result = 'OK'</condition>
                <empty name="OK"/>
                <else>
                  <documentation>
                    <![CDATA[ERROR]]>
                  </documentation>
                  <assign name="errorBitacoraProxHora" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                    <copy>
                      <from>'Error al insertar en la Bitacora'</from>
                      <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROXIMA_HORA_CIERRE_MONEDA']/ns4:Mensaje/ns6:Descripcion</to>
                    </copy>
                  </assign>
                </else>
              </if>
              <assign name="XQ_ResponseProximaHoraCierre">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:processXQuery10('../Transformations/XQ_ResponseProximaHoraCierre.xqy', 'inputVariable.request', $inputVariable.request)</from>
                  <to variable="outvariableProxHoraCierre" part="response"/>
                </copy>
              </assign>
            </sequence>
            <else>
              <sequence name="Sequence20">
                <empty name="SinReglaProximaHoraCierre"/>
              </sequence>
            </else>
          </if>
        </scope>
      </sequence>
      <sequence name="ValidarLimiteGlobal">
        <scope name="ValidarLimiteGlobal" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
          <variables>
            <variable name="estadoLimiteGlobal" type="xsd:string"/>
            <variable name="mensajeLimiteGlobal" type="xsd:string"/>
            <variable name="inValidarLimitesPorcentajeLinea" messageType="ns36:requestLimitePorcentajeLineaMessage"/>
            <variable name="inCrearBitacoraLimiteGlobal" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <sequence name="Sequence18">
            <if name="IfValidaRegla">
              <documentation>
                <![CDATA[ValidarLimiteGlobal]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LIMITE_GLOBAL'])&gt;0</condition>
              <sequence>
                <if name="IfValidaReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoMensajeExceptuada">
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoLimiteGlobal</to>
                    </copy>
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajeLimiteGlobal</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from>$estadoLimiteGlobal</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence name="Sequence17">
                      <invoke name="InvokeValidarEstadoFlexcube" bpelx:invokeAsDetail="no" partnerLink="ValidarEstadoFlexcube_SB" portType="ns44:ValidarEstadoFlexcubePT" operation="ValidarEstadoFlexcube" inputVariable="inValidarEstadoFlexcube" outputVariable="outValidarEstadoFlexcube"/>
                      <if name="IfValidaFlexcube">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outValidarEstadoFlexcube.ValidarEstadoFlexcubeResponse/ns44:Resultado/ns21:result = 'OK'</condition>
                        <sequence name="Sequence25">
                          <assign name="requestValidarLimitePrograma">
                            <copy ignoreMissingFromData="yes">
                              <from>$outConsultarInformacionReglaById.response/ns3:LineaCredito/ns8:idLineaCredito</from>
                              <to>$inValidarLimitesPorcentajeLinea.request/ns3:LineaCredito/ns8:idLineaCredito</to>
                            </copy>
                            <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.request/ns3:idDesembolso</from>
                              <to>$inValidarLimitesPorcentajeLinea.request/ns3:LineaCredito/ns8:ContratoDesembolso/ns15:idDesembolso</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeValidarLimitesPorcentajeLinea_SB" partnerLink="ValidarLimitesPorcentajeLinea_SB" portType="ns36:LimitePorcentajeLinea_PT" operation="LimitePorcentajeLinea" inputVariable="inValidarLimitesPorcentajeLinea" outputVariable="outValidarLimitesPorcentajeLinea" bpelx:invokeAsDetail="no"/>
                          <if name="IfValidaOK">
                            <documentation>
                              <![CDATA[OK]]>
                            </documentation>
                            <condition>$outValidarLimitesPorcentajeLinea.response/ns3:Resultado/ns21:result = 'OK'</condition>
                            <if name="IfValidaEstado">
                              <documentation>
                                <![CDATA[CUMPLIDA]]>
                              </documentation>
                              <condition>$outValidarLimitesPorcentajeLinea.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                              <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'CUMPLIDA'</from>
                                  <to>$estadoLimiteGlobal</to>
                                </copy>
                                <copy>
                                  <from>$outValidarLimitesPorcentajeLinea.response/ns3:Resultado/ns21:message</from>
                                  <to>$mensajeLimiteGlobal</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$estadoLimiteGlobal</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LIMITE_GLOBAL']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$mensajeLimiteGlobal</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                              <elseif>
                                <documentation>
                                  <![CDATA[NO_CUMPLIDA]]>
                                </documentation>
                                <condition>$outValidarLimitesPorcentajeLinea.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                                <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <copy>
                                    <from>'NO_CUMPLIDA'</from>
                                    <to>$estadoLimiteGlobal</to>
                                  </copy>
                                  <copy>
                                    <from>$outValidarLimitesPorcentajeLinea.response/ns3:Resultado/ns21:message</from>
                                    <to>$mensajeLimiteGlobal</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$estadoLimiteGlobal</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LIMITE_GLOBAL']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$mensajeLimiteGlobal</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </elseif>
                              <else>
                                <documentation>
                                  <![CDATA[NO_EVALUADA]]>
                                </documentation>
                                <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <copy>
                                    <from>'NO_EVALUADA'</from>
                                    <to>$estadoLimiteGlobal</to>
                                  </copy>
                                  <copy>
                                    <from>$outValidarLimitesPorcentajeLinea.response/ns3:Resultado/ns21:message</from>
                                    <to>$mensajeLimiteGlobal</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$estadoLimiteGlobal</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LIMITE_GLOBAL']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$mensajeLimiteGlobal</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </else>
                            </if>
                            <else>
                              <documentation>
                                <![CDATA[ERROR]]>
                              </documentation>
                              <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'ERROR'</from>
                                  <to>$estadoLimiteGlobal</to>
                                </copy>
                                <copy>
                                  <from>$outValidarLimitesPorcentajeLinea.response/ns3:Resultado/ns21:message</from>
                                  <to>$mensajeLimiteGlobal</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$estadoLimiteGlobal</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$mensajeLimiteGlobal</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </else>
                          </if>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <assign name="estadoMensajeFlexcube">
                            <copy bpelx:insertMissingToData="yes">
                              <from>'ERROR_FLEXCUBE'</from>
                              <to>$estadoLimiteGlobal</to>
                            </copy>
                            <copy bpelx:insertMissingToData="yes">
                              <from>'ERROR_FLEXCUBE'</from>
                              <to>$mensajeLimiteGlobal</to>
                            </copy>
                            <copy>
                              <from>$estadoLimiteGlobal</from>
                              <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns5:Estado/ns6:DescripcionCorta</to>
                            </copy>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraLimiteGlobal">
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraLimiteGlobal.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraLimiteGlobal.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraLimiteGlobal.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <copy>
                    <from>$mensajeLimiteGlobal</from>
                    <to>$inCrearBitacoraLimiteGlobal.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                  </copy>
                  <copy>
                    <from>$estadoLimiteGlobal</from>
                    <to>$inCrearBitacoraLimiteGlobal.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                  </copy>
                </assign>
                <invoke name="InvokeCrearBitacoraLimiteGlobal" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraLimiteGlobal" outputVariable="outCrearBitacoraLimiteGlobal" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" bpelx:invokeAsDetail="no"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraLimiteGlobal.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="OK"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacoraLimiteGlobal" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                      <copy>
                        <from>'Error al insertar en la Bitacora'</from>
                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITE_GLOBAL']/ns4:Mensaje/ns6:Descripcion</to>
                      </copy>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponseLimiteGlobal">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseLimiteGlobal.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outvariableLimiteGlobal" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaLimiteGlobal"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarTotalLineaCredito">
        <scope name="ValidarTotalLineaCredito">
          <variables>
            <variable name="estadoTotalLC" type="xsd:string"/>
            <variable name="mensajeTotalLC" type="xsd:string"/>
            <variable name="inValidarLimitePrograma" messageType="ns37:requestValidarLimiteProgramaBPELMessage"/>
            <variable name="inCrearBitacoraTotalLC" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <sequence name="Sequence18">
            <if name="IfValidaRegla">
              <documentation>
                <![CDATA[ValidarTotalLineaCredito]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='TOTAL_LINEA_CREDITO'])&gt;0</condition>
              <sequence>
                <if name="IfValidaReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoMensajeExceptuada">
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoTotalLC</to>
                    </copy>
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajeTotalLC</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append>
                        <bpelx:from>$estadoTotalLC</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence name="Sequence17">
                      <invoke name="InvokeValidarEstadoFlexcube" bpelx:invokeAsDetail="no" partnerLink="ValidarEstadoFlexcube_SB" portType="ns44:ValidarEstadoFlexcubePT" operation="ValidarEstadoFlexcube" inputVariable="inValidarEstadoFlexcube" outputVariable="outValidarEstadoFlexcube"/>
                      <if name="IfValidarFlexcube">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outValidarEstadoFlexcube.ValidarEstadoFlexcubeResponse/ns44:Resultado/ns21:result = 'OK'</condition>
                        <sequence name="Sequence26">
                          <assign name="requestValidarLimitePrograma">
                            <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.request/ns3:idDesembolso</from>
                              <to>$inValidarLimitePrograma.request/ns3:ContratoDesembolso/ns15:idDesembolso</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeValidarLimitePrograma_SB" bpelx:invokeAsDetail="no" partnerLink="ValidarLmitePrograma_SB" portType="ns37:ValidarLimitePrograma_PT" operation="ValidarLimitePrograma" inputVariable="inValidarLimitePrograma" outputVariable="outValidarLimitePrograma"/>
                          <if name="IfValidaOK">
                            <documentation>
                              <![CDATA[OK]]>
                            </documentation>
                            <condition>$outValidarLimitePrograma.response/ns3:Resultado/ns21:result = 'OK'</condition>
                            <if name="IfValidaEstado">
                              <documentation>
                                <![CDATA[CUMPLIDA]]>
                              </documentation>
                              <condition>$outValidarLimitePrograma.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                              <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'CUMPLIDA'</from>
                                  <to>$estadoTotalLC</to>
                                </copy>
                                <copy>
                                  <from>$outValidarLimitePrograma.response/ns3:Resultado/ns21:message</from>
                                  <to>$mensajeTotalLC</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$estadoTotalLC</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='TOTAL_LINEA_CREDITO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$mensajeTotalLC</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                              <elseif>
                                <documentation>
                                  <![CDATA[NO_CUMPLIDA]]>
                                </documentation>
                                <condition>$outValidarLimitePrograma.response/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                                <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <copy>
                                    <from>'NO_CUMPLIDA'</from>
                                    <to>$estadoTotalLC</to>
                                  </copy>
                                  <copy>
                                    <from>$outValidarLimitePrograma.response/ns3:Resultado/ns21:message</from>
                                    <to>$mensajeTotalLC</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$estadoTotalLC</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='TOTAL_LINEA_CREDITO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$mensajeTotalLC</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </elseif>
                              <else>
                                <documentation>
                                  <![CDATA[NO_EVALUADA]]>
                                </documentation>
                                <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <copy>
                                    <from>'NO_EVALUADA'</from>
                                    <to>$estadoTotalLC</to>
                                  </copy>
                                  <copy>
                                    <from>$outValidarLimitePrograma.response/ns3:Resultado/ns21:message</from>
                                    <to>$mensajeTotalLC</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$estadoTotalLC</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='TOTAL_LINEA_CREDITO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                      <bpelx:from>$mensajeTotalLC</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </else>
                            </if>
                            <else>
                              <documentation>
                                <![CDATA[ERROR]]>
                              </documentation>
                              <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'ERROR'</from>
                                  <to>$estadoTotalLC</to>
                                </copy>
                                <copy>
                                  <from>$outValidarLimites.ValidarLimitesResponseMessage/ns3:Resultado/ns21:message</from>
                                  <to>$mensajeTotalLC</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$estadoTotalLC</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$mensajeTotalLC</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </else>
                          </if>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <assign name="estadoMensajeFlexcube">
                            <copy>
                              <from>'ERROR_FLEXCUBE'</from>
                              <to>$estadoTotalLC</to>
                            </copy>
                            <copy>
                              <from>'ERROR_FLEXCUBE'</from>
                              <to>$mensajeTotalLC</to>
                            </copy>
                            <copy>
                              <from>$estadoTotalLC</from>
                              <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns5:Estado/ns6:DescripcionCorta</to>
                            </copy>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraTotalLC">
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraTotalLC.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraTotalLC.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraTotalLC.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <copy>
                    <from>$mensajeTotalLC</from>
                    <to>$inCrearBitacoraTotalLC.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                  </copy>
                  <copy>
                    <from>$estadoTotalLC</from>
                    <to>$inCrearBitacoraTotalLC.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                  </copy>
                </assign>
                <invoke name="InvokeCrearBitacoraTotalLC" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraTotalLC" outputVariable="outCrearBitacoraTotalLC"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraTotalLC.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="OK"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacoraTotalLC" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                      <copy>
                        <from>'Error al insertar en la Bitacora'</from>
                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'TOTAL_LINEA_CREDITO']/ns4:Mensaje/ns6:Descripcion</to>
                      </copy>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponseTotalLC">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseTotalLC.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outvariableTotalLC" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaTotalLC"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarLimites">
        <scope name="ValidarLimites">
          <variables>
            <variable name="inValidarLimites" messageType="ns35:requestMessage"/>
            <variable name="estadoLimites" type="xsd:string"/>
            <variable name="mensajeLimites" type="xsd:string"/>
            <variable name="inCrearBitacoraLimite" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="outCrearBitacoraLimite" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <sequence name="Sequence13">
            <if name="IfValidarRegla">
              <documentation>
                <![CDATA[ValidarLimites]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LIMITES'])&gt;0</condition>
              <sequence>
                <if name="IfValidaReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoMensajeExceptuada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                    <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoLimites</to>
                    </copy>
                    <copy bpelx:insertMissingToData="yes">
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajeLimites</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <bpelx:from>$estadoLimites</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence>
                      <invoke name="InvokeValidarEstadoFlexcube" bpelx:invokeAsDetail="no" partnerLink="ValidarEstadoFlexcube_SB" portType="ns44:ValidarEstadoFlexcubePT" operation="ValidarEstadoFlexcube" inputVariable="inValidarEstadoFlexcube" outputVariable="outValidarEstadoFlexcube"/>
                      <if name="IfValidarFlexcube">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outValidarEstadoFlexcube.ValidarEstadoFlexcubeResponse/ns44:Resultado/ns21:result = 'OK'</condition>
                        <sequence name="Sequence27">
                          <assign name="requestValidarLimites">
                            <copy ignoreMissingFromData="yes">
                              <from>$outConsultarInformacionReglaById.response/ns3:Desembolso/ns15:idDesembolso</from>
                              <to>$inValidarLimites.ValidarLimitesRequestMessage/ns3:idDesembolso</to>
                            </copy>
                            <copy ignoreMissingFromData="yes">
                              <from>$outConsultarInformacionReglaById.response/ns3:Operacion/ns17:idOperacion</from>
                              <to>$inValidarLimites.ValidarLimitesRequestMessage/ns3:idOperacion</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeValidarLimites_SB" bpelx:invokeAsDetail="no" partnerLink="ValidarLimites_SB" portType="ns35:ValidarLimites_ptt" operation="ValidarLimites" inputVariable="inValidarLimites" outputVariable="outValidarLimites"/>
                          <if name="IfValidaOK">
                            <documentation>
                              <![CDATA[OK]]>
                            </documentation>
                            <condition>$outValidarLimites.ValidarLimitesResponseMessage/ns3:Resultado/ns21:result = 'OK'</condition>
                            <if name="IfValidaEstado">
                              <documentation>
                                <![CDATA[NO_CUMPLIDA]]>
                              </documentation>
                              <condition>$outValidarLimites.ValidarLimitesResponseMessage/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'NO_CUMPLIDA'</condition>
                              <assign name="estadoMensajeNoCumplida">
                                <copy>
                                  <from>'NO_CUMPLIDA'</from>
                                  <to>$estadoLimites</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$outValidarLimites.ValidarLimitesResponseMessage/ns3:Regla/ns5:DetalleRegla[ns11:estatus = 'FALSE'][1]/ns11:descripcion</from>
                                  <to>$mensajeLimites</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$estadoLimites</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LIMITES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$mensajeLimites</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                              <elseif>
                                <documentation>
                                  <![CDATA[CUMPLIDA]]>
                                </documentation>
                                <condition>$outValidarLimites.ValidarLimitesResponseMessage/ns3:Regla/ns5:Estado/ns6:DescripcionCorta = 'CUMPLIDA'</condition>
                                <sequence name="Sequence15">
                                  <assign name="estadoMensajeCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                    <copy>
                                      <from>'CUMPLIDA'</from>
                                      <to>$estadoLimites</to>
                                    </copy>
                                    <copy>
                                      <from>$outValidarLimites.ValidarLimitesResponseMessage/ns3:Regla/ns5:DetalleRegla[ns11:estatus = 'TRUE'][1]/ns11:descripcion</from>
                                      <to>$mensajeLimites</to>
                                    </copy>
                                    <extensionAssignOperation>
                                      <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                        <bpelx:from>$estadoLimites</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LIMITES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                    <extensionAssignOperation>
                                      <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                        <bpelx:from>$mensajeLimites</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                  </assign>
                                </sequence>
                              </elseif>
                              <else>
                                <documentation>
                                  <![CDATA[NO_EVALUADA]]>
                                </documentation>
                                <sequence name="Sequence16">
                                  <assign name="estadoMensajeNoEvaluda" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                    <copy>
                                      <from>'NO_EVALUADA'</from>
                                      <to>$estadoLimites</to>
                                    </copy>
                                    <copy>
                                      <from>$outValidarLimites.ValidarLimitesResponseMessage/ns3:Resultado/ns21:message</from>
                                      <to>$mensajeLimites</to>
                                    </copy>
                                    <extensionAssignOperation>
                                      <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                        <bpelx:from>$estadoLimites</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LIMITES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                    <extensionAssignOperation>
                                      <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                        <bpelx:from>$mensajeLimites</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                  </assign>
                                </sequence>
                              </else>
                            </if>
                            <else>
                              <documentation>
                                <![CDATA[ERROR]]>
                              </documentation>
                              <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'ERROR'</from>
                                  <to>$estadoLimites</to>
                                </copy>
                                <copy>
                                  <from>$outValidarLimites.ValidarLimitesResponseMessage/ns3:Resultado/ns21:message</from>
                                  <to>$mensajeLimites</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$estadoLimites</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                    <bpelx:from>$mensajeLimites</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </else>
                          </if>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <assign name="estadoMensajeFlexcube">
                            <copy bpelx:insertMissingToData="yes">
                              <from>'ERROR_FLEXCUBE'</from>
                              <to>$estadoLimites</to>
                            </copy>
                            <copy bpelx:insertMissingToData="yes">
                              <from>'ERROR_FLEXCUBE'</from>
                              <to>$mensajeLimites</to>
                            </copy>
                            <copy>
                              <from>$estadoLimites</from>
                              <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns5:Estado/ns6:DescripcionCorta</to>
                            </copy>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraLimites">
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraLimite.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraLimite.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraLimite.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <copy>
                    <from>$mensajeLimites</from>
                    <to>$inCrearBitacoraLimite.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                  </copy>
                  <copy>
                    <from>$estadoLimites</from>
                    <to>$inCrearBitacoraLimite.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                  </copy>
                </assign>
                <invoke name="InvokeCrearBitacoraLimite" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraLimite" outputVariable="outCrearBitacoraLimite"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraLimite.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="OK"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacoraLimites">
                      <copy>
                        <from>'Error al insertar en la Bitacora'</from>
                        <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LIMITES']/ns4:Mensaje/ns6:Descripcion</to>
                      </copy>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponseLimites">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseLimites.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outvariableLimites" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <documentation/>
                <empty name="SinReglaLimites"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarGarantias">
        <scope name="ValidarGarantias">
          <empty name="ValidarGarantias"/>
        </scope>
      </sequence>
      <sequence name="ValidarProgramacion">
        <scope name="ValidarProgramacion">
          <variables>
            <variable name="estadoProgramacion" type="xsd:string"/>
            <variable name="mensajeProgramacion" type="xsd:string"/>
            <variable name="inCrearBitacoraProgramacion" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="outCrearBitacoraProgramacion" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <sequence name="ValidarProgramacion">
            <if name="IfValidarRegla">
              <documentation>
                <![CDATA[ValidarProgramacion]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION'])&gt;0</condition>
              <sequence>
                <if name="IfValidaReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoMensajeExceptuada">
                    <copy bpelx:insertMissingToData="yes">
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoProgramacion</to>
                    </copy>
                    <copy bpelx:insertMissingToData="yes">
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajeProgramacion</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append>
                        <bpelx:from>$estadoProgramacion</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence>
                      <invoke name="InvokeValidarEstadoFlexcube" bpelx:invokeAsDetail="no" partnerLink="ValidarEstadoFlexcube_SB" portType="ns44:ValidarEstadoFlexcubePT" operation="ValidarEstadoFlexcube" inputVariable="inValidarEstadoFlexcube" outputVariable="outValidarEstadoFlexcube"/>
                      <if name="IfValidarFlexcube">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outValidarEstadoFlexcube.ValidarEstadoFlexcubeResponse/ns44:Resultado/ns21:result = 'OK'</condition>
                        <sequence name="Sequence28">
                          <assign name="requestValidarProgramacion">
                            <copy ignoreMissingFromData="yes">
                              <from>$inputVariable.request/ns3:idDesembolso</from>
                              <to>$inValidarProgramacion.request/ns3:idDesembolso</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeValidarProgramacion_SB" bpelx:invokeAsDetail="no" partnerLink="ValidarProgramacion_SB" portType="ns25:ValidarProgramacion_PT" operation="ValidarProgramacion" inputVariable="inValidarProgramacion" outputVariable="outValidarProgramacion"/>
                          <if name="IfValidaOK">
                            <documentation>
                              <![CDATA[OK]]>
                            </documentation>
                            <condition>$outValidarProgramacion.response/ns3:Resultado/ns21:result = 'OK'</condition>
                            <if name="IfValidaProgramado">
                              <documentation>
                                <![CDATA[true]]>
                              </documentation>
                              <condition>string($outValidarProgramacion.response/ns3:ContratoDesembolso/ns15:programado) = 'true'</condition>
                              <assign name="estadoMensajeCumplida">
                                <copy>
                                  <from>'CUMPLIDA'</from>
                                  <to>$estadoProgramacion</to>
                                </copy>
                                <copy>
                                  <from>concat("Evaluado: ",string($outValidarProgramacion.response/ns3:ContratoDesembolso/ns15:programado)," Importe: ",$outValidarProgramacion.response/ns3:ContratoDesembolso/ns15:monto[ns9:tipo/ns6:DescripcionCorta = 'EVALUADO_PROGRAMACION']/ns9:importe)</from>
                                  <to>$mensajeProgramacion</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$estadoProgramacion</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$mensajeProgramacion</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                              <elseif>
                                <documentation>
                                  <![CDATA[NO_APLICA]]>
                                </documentation>
                                <condition>$outValidarProgramacion.response/ns3:Resultado/ns21:message = 'NO_APLICA'</condition>
                                <assign name="estadoMensajeNoAplica">
                                  <copy>
                                    <from>'NO_APLICA'</from>
                                    <to>$estadoProgramacion</to>
                                  </copy>
                                  <copy>
                                    <from>concat("Programado: ",string($outValidarProgramacion.response/ns3:ContratoDesembolso/ns15:programado)," Fondo: ",string($outValidarProgramacion.response/ns3:ContratoDesembolso/ns15:condicionesFinancieras/ns15:fondo/ns6:Id))</from>
                                    <to>$mensajeProgramacion</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append>
                                      <bpelx:from>$estadoProgramacion</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PROGRAMACION']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append>
                                      <bpelx:from>$mensajeProgramacion</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PROGRAMACION']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </elseif>
                              <else>
                                <documentation>
                                  <![CDATA[false]]>
                                </documentation>
                                <assign name="estadoMensajeNoCumplida" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                  <copy>
                                    <from>'NO_CUMPLIDA'</from>
                                    <to>$estadoProgramacion</to>
                                  </copy>
                                  <copy>
                                    <from>concat("Evaluado: ",string($outValidarProgramacion.response/ns3:ContratoDesembolso/ns15:programado)," Importe: ",$outValidarProgramacion.response/ns3:ContratoDesembolso/ns15:monto[ns9:tipo/ns6:DescripcionCorta = 'EVALUADO_PROGRAMACION']/ns9:importe)</from>
                                    <to>$mensajeProgramacion</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append>
                                      <bpelx:from>$estadoProgramacion</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='PROGRAMACION']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append>
                                      <bpelx:from>$mensajeProgramacion</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion= 'PROGRAMACION']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </else>
                            </if>
                            <else>
                              <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'ERROR'</from>
                                  <to>$estadoProgramacion</to>
                                </copy>
                                <copy>
                                  <from>$outValidarProgramacion.response/ns3:Resultado/ns21:message</from>
                                  <to>$mensajeProgramacion</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$estadoProgramacion</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$mensajeProgramacion</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </else>
                          </if>
                        </sequence>
                        <else>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <assign name="estadoMensajeFlexcube">
                            <copy bpelx:insertMissingToData="yes">
                              <from>'ERROR_FLEXCUBE'</from>
                              <to>$estadoProgramacion</to>
                            </copy>
                            <copy bpelx:insertMissingToData="yes">
                              <from>'ERROR_FLEXCUBE'</from>
                              <to>$mensajeProgramacion</to>
                            </copy>
                            <copy>
                              <from>$estadoProgramacion</from>
                              <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns5:Estado/ns6:DescripcionCorta</to>
                            </copy>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraProgramacion">
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraProgramacion.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraProgramacion.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraProgramacion.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <copy>
                    <from>$mensajeProgramacion</from>
                    <to>$inCrearBitacoraProgramacion.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                  </copy>
                  <copy>
                    <from>$estadoProgramacion</from>
                    <to>$inCrearBitacoraProgramacion.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                  </copy>
                </assign>
                <invoke name="InvokeCrearBitacora" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraProgramacion" outputVariable="outCrearBitacoraProgramacion" bpelx:invokeAsDetail="no"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraProgramacion.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="Empty"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacora">
                      <extensionAssignOperation>
                        <bpelx:append>
                          <bpelx:from>'Error al Insertar en la Bitacora'</bpelx:from>
                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'PROGRAMACION']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                        </bpelx:append>
                      </extensionAssignOperation>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponseProgramacion">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseProgramacion.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outputVariableProgramacion" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaProgramacion"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarLAFT">
        <scope name="ValidarLAFT">
          <variables>
            <variable name="estadoLAFT" type="xsd:string"/>
            <variable name="mensajeLAFT" type="xsd:string"/>
            <variable name="inValidarLAFT" messageType="ns32:requestConsultarDeclaracionJuradaByIdOperacionMessage"/>
            <variable name="outValidarLAFT" messageType="ns32:responseConsultarDeclaracionJuradaByIdOperacionMessage"/>
            <variable name="inCrearBitacoraLAFT" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="outCrearBitacoraLAFT" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <sequence name="ValidarLAFT">
            <if name="IfValidarRegla">
              <documentation>
                <![CDATA[ValidarLAFT]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT'])&gt;0</condition>
              <sequence>
                <if name="IfValidarReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoExceptuada">
                    <copy bpelx:insertMissingToData="yes">
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoLAFT</to>
                    </copy>
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajeLAFT</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append>
                        <bpelx:from>$estadoLAFT</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence name="ReglaNoExceptuada">
                      <if name="IfPosibleValidar">
                        <documentation>
                          <![CDATA[Validar]]>
                        </documentation>
                        <condition>string($outConsultarInformacionReglaById.response/ns3:Operacion/ns17:idOperacion) != ''</condition>
                        <sequence>
                          <assign name="requestValidarLAFT">
                            <copy ignoreMissingFromData="yes">
                              <from>$outConsultarInformacionReglaById.response/ns3:Operacion/ns17:idOperacion</from>
                              <to>$inValidarLAFT.request/ns33:idOperacion</to>
                            </copy>
                            <copy ignoreMissingFromData="yes" bpelx:insertMissingToData="yes">
                              <from>true()</from>
                              <to>$inValidarLAFT.request/ns33:excluirEnProceso</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeValidarLAFT_SB" bpelx:invokeAsDetail="no" partnerLink="DeclaracionService_SB" portType="ns32:DeclaracionJuradaPT" operation="consultarDeclaracionJurada" inputVariable="inValidarLAFT" outputVariable="outValidarLAFT"/>
                          <if name="IfValidaOK">
                            <documentation>
                              <![CDATA[OK]]>
                            </documentation>
                            <condition>$outValidarLAFT.response/ns33:Resultado/ns21:result = 'OK'</condition>
                            <if name="IfValidaEdoNoObjecion">
                              <documentation>
                                <![CDATA[Aplica]]>
                              </documentation>
                              <condition>string($outValidarLAFT.response/ns33:DeclaracionJurada/ns19:estadoDeclaracion/ns19:EstadoNoObjecion) = 'true'</condition>
                              <assign name="estadoMensajeCumplida">
                                <copy>
                                  <from>'CUMPLIDA'</from>
                                  <to>$estadoLAFT</to>
                                </copy>
                                <copy>
                                  <from>concat("EstadoNoObjecion: ",string($outValidarLAFT.response/ns33:DeclaracionJurada/ns19:estadoDeclaracion/ns19:EstadoNoObjecion)," NombreEstadoNoObjecion: ",$outValidarLAFT.response/ns33:DeclaracionJurada/ns19:estadoDeclaracion/ns19:nombreEstadoNoObjecion)</from>
                                  <to>$mensajeLAFT</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$estadoLAFT</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$mensajeLAFT</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                              <else>
                                <documentation>
                                  <![CDATA[NoAplica]]>
                                </documentation>
                                <assign name="estadoMensajeNoCumplida">
                                  <copy>
                                    <from>'NO_CUMPLIDA'</from>
                                    <to>$estadoLAFT</to>
                                  </copy>
                                  <copy>
                                    <from>concat("EstadoNoObjecion: ",string($outValidarLAFT.response/ns33:DeclaracionJurada/ns19:estadoDeclaracion/ns19:EstadoNoObjecion)," NombreEstadoNoObjecion: ",$outValidarLAFT.response/ns33:DeclaracionJurada/ns19:estadoDeclaracion/ns19:nombreEstadoNoObjecion)</from>
                                    <to>$mensajeLAFT</to>
                                  </copy>
                                  <extensionAssignOperation>
                                    <bpelx:append>
                                      <bpelx:from>$estadoLAFT</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                  <extensionAssignOperation>
                                    <bpelx:append>
                                      <bpelx:from>$mensajeLAFT</bpelx:from>
                                      <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                    </bpelx:append>
                                  </extensionAssignOperation>
                                </assign>
                              </else>
                            </if>
                            <else>
                              <documentation>
                                <![CDATA[ERROR]]>
                              </documentation>
                              <assign name="estadoMensajeError" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                <copy>
                                  <from>'ERROR'</from>
                                  <to>$estadoLAFT</to>
                                </copy>
                                <copy>
                                  <from>$outValidarLAFT.response/ns33:Resultado/ns21:message</from>
                                  <to>$mensajeLAFT</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$estadoLAFT</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LAFT']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$mensajeLAFT</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'LAFT']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </else>
                          </if>
                        </sequence>
                        <else>
                          <sequence name="Sequence9">
                            <assign name="estadoNoEvaluada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                              <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <from>'NO_EVALUADA'</from>
                                <to>$estadoLAFT</to>
                              </copy>
                              <copy>
                                <from>'Id Operación es requerido'</from>
                                <to>$mensajeLAFT</to>
                              </copy>
                              <extensionAssignOperation>
                                <bpelx:append>
                                  <bpelx:from>$estadoLAFT</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                              <extensionAssignOperation>
                                <bpelx:append>
                                  <bpelx:from>$mensajeLAFT</bpelx:from>
                                  <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                </bpelx:append>
                              </extensionAssignOperation>
                            </assign>
                          </sequence>
                        </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraLAFT">
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraLAFT.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraLAFT.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraLAFT.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <copy>
                    <from>$mensajeLAFT</from>
                    <to>$inCrearBitacoraLAFT.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                  </copy>
                  <copy>
                    <from>$estadoLAFT</from>
                    <to>$inCrearBitacoraLAFT.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                  </copy>
                </assign>
                <invoke name="InvokeCrearBitacoraLAFT_SB" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraLAFT" outputVariable="outCrearBitacoraLAFT"/>
                <if name="IfValidaOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraLAFT.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="Empty"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacora">
                      <extensionAssignOperation>
                        <bpelx:append>
                          <bpelx:from>'Error al Insertar en la Bitacora'</bpelx:from>
                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='LAFT']/ns5:Estado/ns6:Descripcion</bpelx:to>
                        </bpelx:append>
                      </extensionAssignOperation>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponseLAFT">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseLAFT.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outvariableLAFT" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaLAFT"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarSCR">
        <scope name="ValidarSCR">
          <variables>
            <variable name="estadoSCR" type="xsd:string"/>
            <variable name="mensajeSCR" type="xsd:string"/>
            <variable name="inCrearBitacoraSCR" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="outCrearBitacoraSCR" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="inputvariableSCR" messageType="ns1:requestValidarReglasDesembolsoMessage"/>
            <variable name="inConsultarOperacionById" messageType="ns55:requestConsultarOperacionMessage"/>
            <variable name="outConsultarOperacionById" messageType="ns55:responseConsultarOperacionMessage"/>
          </variables>
          <sequence name="Sequence6">
            <if name="IfValidarRegla">
              <documentation>
                <![CDATA[ValidarSCR]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'SCR'])&gt;0</condition>
              <sequence>
                <if name="IfPosibleVaildar">
                  <documentation>
                    <![CDATA[Validar]]>
                  </documentation>
                  <condition>string($outConsultarInformacionReglaById.response/ns3:Operacion/ns17:idOperacion) != ''</condition>
                  <sequence>
                    <assign name="AssignConsultarOperacionById">
                      <copy>
                        <from>$outConsultarInformacionReglaById.response/ns3:Operacion/ns17:idOperacion</from>
                        <to>$inConsultarOperacionById.request/ns56:idOperacion</to>
                      </copy>
                      <copy>
                        <from>'OPERACION'</from>
                        <to>$inConsultarOperacionById.request/ns56:nivelDetalle</to>
                      </copy>
                      <copy>
                        <from>false()</from>
                        <to>$inConsultarOperacionById.request/ns56:infoDetalleCliente</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeConsultarOperacionById" bpelx:invokeAsDetail="no" partnerLink="ConsultarOperacionById" portType="ns55:ConsultarOperacionById12Port" operation="ConsultarOperacionById" inputVariable="inConsultarOperacionById" outputVariable="outConsultarOperacionById"/>
                    <if name="IfOperacionSoberana">
                      <documentation>
                        <![CDATA[PublicoSoberana]]>
                      </documentation>
                      <condition>($outConsultarOperacionById.response/ns56:Operacion/ns17:tipoGarantia/ns6:Id = 2 or $outConsultarOperacionById.response/ns56:Operacion/ns17:tipoGarantia/ns6:Id = 1000) and $outConsultarOperacionById.response/ns56:Operacion/ns17:sectorInstitucional/ns6:Id = 1</condition>
                      <assign name="AssignSCRCumplido">
                        <copy>
                          <from>'CUMPLIDA'</from>
                          <to>$inputvariableSCR.request/ns3:TareaReglas/ns4:ReglasEvaluacion/ns5:Estado/ns6:DescripcionCorta</to>
                        </copy>
                        <copy>
                          <from>'La Operacion es publica con tipo de garantia Soberana o no Aplica, regla cumplida por defecto en este caso'</from>
                          <to>$inputvariableSCR.request/ns3:TareaReglas/ns4:ReglasEvaluacion/ns4:Mensaje/ns6:Descripcion</to>
                        </copy>
                        <copy>
                          <from>$inputvariableSCR.request/ns3:TareaReglas/ns4:ReglasEvaluacion/ns5:Estado/ns6:DescripcionCorta</from>
                          <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns5:Estado/ns6:DescripcionCorta</to>
                        </copy>
                        <copy>
                          <from>$inputvariableSCR.request/ns3:TareaReglas/ns4:ReglasEvaluacion/ns4:Mensaje/ns6:Descripcion</from>
                          <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns4:Mensaje/ns6:Descripcion</to>
                        </copy>
                      </assign>
                      <else>
                        <documentation>
                          <![CDATA[NoSoberana]]>
                        </documentation>
                        <sequence>
                          <assign name="requestValidarSCR">
                            <copy ignoreMissingFromData="yes">
                              <from>$outConsultarInformacionReglaById.response/ns3:Operacion/ns17:idOperacion</from>
                              <to>$inValidarSCR.request/ns26:idOperacion</to>
                            </copy>
                          </assign>
                          <invoke name="InvokeValidarSCR_SB" bpelx:invokeAsDetail="no" partnerLink="ValidarSCR_SB" portType="ns23:ValidarSCR_PT" operation="validarSCR" inputVariable="inValidarSCR" outputVariable="outValidarSCR"/>
                          <if name="IfValidarOK">
                            <documentation>
                              <![CDATA[OK]]>
                            </documentation>
                            <condition>$outValidarSCR.response/ns26:Resultado/ns21:result = 'OK'</condition>
                            <sequence name="Sequence5">
                              <assign name="XQ_ValidarSCR">
                                <bpelx:annotation>
                                  <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                                </bpelx:annotation>
                                <copy>
                                  <from>ora:processXQuery10('../Transformations/XQ_ValidarSCR.xqy', 'inputVariable.request', $inputVariable.request, 'outValidarSCR.response', $outValidarSCR.response)</from>
                                  <to variable="inputvariableSCR" part="request"/>
                                </copy>
                              </assign>
                              <assign name="AssignValidacionSCR">
                                <extensionAssignOperation>
                                  <bpelx:copyList>
                                    <bpelx:from>$inputvariableSCR.request/ns3:TareaReglas/ns4:ReglasEvaluacion/ns5:Estado</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns5:Estado</bpelx:to>
                                  </bpelx:copyList>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:copyList>
                                    <bpelx:from>$inputvariableSCR.request/ns3:TareaReglas/ns4:ReglasEvaluacion/ns4:Mensaje</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns4:Mensaje</bpelx:to>
                                  </bpelx:copyList>
                                </extensionAssignOperation>
                              </assign>
                            </sequence>
                            <else>
                              <documentation>
                                <![CDATA[ERROR]]>
                              </documentation>
                              <assign name="estadoMensajeError">
                                <copy>
                                  <from>'ERROR'</from>
                                  <to>$estadoSCR</to>
                                </copy>
                                <copy>
                                  <from>$outValidarSCR.response/ns26:Resultado/ns21:message</from>
                                  <to>$mensajeSCR</to>
                                </copy>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$estadoSCR</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                                <extensionAssignOperation>
                                  <bpelx:append>
                                    <bpelx:from>$mensajeSCR</bpelx:from>
                                    <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                  </bpelx:append>
                                </extensionAssignOperation>
                              </assign>
                            </else>
                          </if>
                        </sequence>
                      </else>
                    </if>
                  </sequence>
                  <else>
                    <assign name="estadoNoEvaluada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                      <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                        <from>'NO_EVALUADA'</from>
                        <to>$estadoSCR</to>
                      </copy>
                      <copy>
                        <from>'Id Operación es requerido'</from>
                        <to>$mensajeSCR</to>
                      </copy>
                      <extensionAssignOperation>
                        <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                          <bpelx:from>$estadoSCR</bpelx:from>
                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                        </bpelx:append>
                      </extensionAssignOperation>
                      <extensionAssignOperation>
                        <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                          <bpelx:from>$mensajeSCR</bpelx:from>
                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                        </bpelx:append>
                      </extensionAssignOperation>
                    </assign>
                  </else>
                </if>
                <forEach parallel="no" counterName="counter" name="ForEachSCR">
                  <startCounterValue>1</startCounterValue>
                  <finalCounterValue>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'])</finalCounterValue>
                  <scope name="Scope1">
                    <sequence>
                      <assign name="requestCrearBitacoraSCR">
                        <copy>
                          <from>$inputVariable.request/ns3:instanciaProceso</from>
                          <to>$inCrearBitacoraSCR.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                        </copy>
                        <copy>
                          <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][$counter]/ns5:Exceptuado/ns6:Id</from>
                          <to>$inCrearBitacoraSCR.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                        </copy>
                        <copy>
                          <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                          <to>$inCrearBitacoraSCR.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                        </copy>
                        <copy>
                          <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'SCR'][1]/ns4:Mensaje/ns6:Descripcion</from>
                          <to>$inCrearBitacoraSCR.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</to>
                        </copy>
                        <copy>
                          <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][1]/ns5:Estado/ns6:DescripcionCorta</from>
                          <to>$inCrearBitacoraSCR.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</to>
                        </copy>
                      </assign>
                      <invoke name="InvokeCrearBitacoraSCR" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraSCR" outputVariable="outCrearBitacoraSCR"/>
                      <if name="IfValidaOK" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                        <documentation>
                          <![CDATA[OK]]>
                        </documentation>
                        <condition>$outCrearBitacoraSCR.response/ns30:Resultado/ns21:result = 'OK'</condition>
                        <empty name="Empty"/>
                        <else>
                          <documentation>
                            <![CDATA[ERROR]]>
                          </documentation>
                          <assign name="errorBitacora">
                            <extensionAssignOperation>
                              <bpelx:append>
                                <bpelx:from>'Error al Insertar en la Bitacora'</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='SCR'][$counter]/ns5:Estado/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </scope>
                </forEach>
                <assign name="XQ_ResponseSCR">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseSCR.xqy', 'inputVariable.request', $inputVariable.request, 'inputvariableSCR.request', $inputvariableSCR.request)</from>
                    <to variable="outvariableSCR" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaSCR"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <sequence name="ValidarMora">
        <scope name="ValidarMora">
          <variables>
            <variable name="estadoMora" type="xsd:string"/>
            <variable name="mensajeMora" type="xsd:string"/>
            <variable name="inCrearBitacoraMora" messageType="ns29:requestCrearBitacoraReglasDesembolsoMessage"/>
            <variable name="outCrearBitacoraMora" messageType="ns29:responseCrearBitacoraReglasDesembolsoMessage"/>
          </variables>
          <sequence name="ValidarMora">
            <if name="IfValidarRegla">
              <documentation>
                <![CDATA[ValidarMora]]>
              </documentation>
              <condition>count($inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA'])&gt;0</condition>
              <sequence>
                <if name="IfValidaReglaExceptuada">
                  <documentation>
                    <![CDATA[ReglaExceptuada]]>
                  </documentation>
                  <condition>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MORA']/ns5:Exceptuado/ns6:estatus = 'true'</condition>
                  <assign name="estadoMensajeExceptuada">
                    <copy bpelx:insertMissingToData="yes">
                      <from>'EXCEPTUADA'</from>
                      <to>$estadoMora</to>
                    </copy>
                    <copy>
                      <from>'EXCEPTUADA'</from>
                      <to>$mensajeMora</to>
                    </copy>
                    <extensionAssignOperation>
                      <bpelx:append>
                        <bpelx:from>$estadoMora</bpelx:from>
                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MORA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                    <extensionAssignOperation>
                      <bpelx:append>
                        <bpelx:from>$mensajeMora</bpelx:from>
                        <bpelx:to>$outputVariableMora.response/ns3:TareaReglas/ns4:ReglasEvaluacion/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                      </bpelx:append>
                    </extensionAssignOperation>
                  </assign>
                  <else>
                    <documentation>
                      <![CDATA[ReglaNoExceptuada]]>
                    </documentation>
                    <sequence>
                      <if name="IfPosibleValidar">
                        <documentation>
                          <![CDATA[Validar]]>
                        </documentation>
                        <condition>string($outConsultarInformacionReglaById.response/ns3:Cliente/ns7:idCliente) != ''</condition>
                        <sequence>
                          <invoke name="InvokeValidarEstadoFlexcube" bpelx:invokeAsDetail="no" partnerLink="ValidarEstadoFlexcube_SB" portType="ns44:ValidarEstadoFlexcubePT" operation="ValidarEstadoFlexcube" inputVariable="inValidarEstadoFlexcube" outputVariable="outValidarEstadoFlexcube"/>
                          <if name="IfValidarFlexcube">
                            <documentation>
                              <![CDATA[OK]]>
                            </documentation>
                            <condition>$outValidarEstadoFlexcube.ValidarEstadoFlexcubeResponse/ns44:Resultado/ns21:result = 'OK'</condition>
                            <sequence name="Sequence29">
                              <assign name="requestValidarMora">
                                <copy ignoreMissingFromData="yes">
                                  <from>$outConsultarInformacionReglaById.response/ns3:Cliente/ns7:idCliente</from>
                                  <to>$inValidarMora.request/ns7:idCliente</to>
                                </copy>
                                <copy ignoreMissingFromData="yes">
                                  <from>$outConsultarInformacionReglaById.response/ns3:Cliente/ns7:idFacturador</from>
                                  <to>$inValidarMora.request/ns7:idFacturador</to>
                                </copy>
                              </assign>
                              <invoke name="InvokeValidarMora_SB" bpelx:invokeAsDetail="no" partnerLink="ValidarMora_SB" portType="ns24:ValidarMora_PT" operation="ValidarMora" inputVariable="inValidarMora" outputVariable="outValidarMora"/>
                              <if name="IfValidaOK">
                                <documentation>
                                  <![CDATA[OK]]>
                                </documentation>
                                <condition>$outValidarMora.response/ns26:Resultado/ns21:result = 'OK'</condition>
                                <if name="IfValidaRegla">
                                  <documentation>
                                    <![CDATA[SinMora]]>
                                  </documentation>
                                  <condition>string($outValidarMora.response/ns26:Cliente/ns7:enMora) = 'false'</condition>
                                  <assign name="estadoMensajeCumplida">
                                    <copy bpelx:insertMissingToData="yes">
                                      <from>'CUMPLIDA'</from>
                                      <to>$estadoMora</to>
                                    </copy>
                                    <copy bpelx:insertMissingToData="yes">
                                      <from>concat("enMora: ",$outValidarMora.response/ns26:Cliente/ns7:enMora)</from>
                                      <to>$mensajeMora</to>
                                    </copy>
                                    <extensionAssignOperation>
                                      <bpelx:append>
                                        <bpelx:from>$estadoMora</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                    <extensionAssignOperation>
                                      <bpelx:append>
                                        <bpelx:from>$mensajeMora</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                  </assign>
                                  <elseif>
                                    <documentation>
                                      <![CDATA[MoraTecnica_SectorPublico]]>
                                    </documentation>
                                    <condition>$outValidarMora.response/ns26:Cliente/ns7:enMora = 'true' and ($outValidarMora.response/ns26:Cliente/ns7:mora/ns7:tipo/ns6:DescripcionCorta = 'TECNICA' or $outValidarMora.response/ns26:Cliente/ns7:mora/ns7:tipo/ns6:DescripcionCorta = 'SECTOR PUBLICO')</condition>
                                    <assign name="estadoMensajeCumplida">
                                      <copy>
                                        <from>'CUMPLIDA'</from>
                                        <to>$estadoMora</to>
                                      </copy>
                                      <copy bpelx:insertMissingToData="yes">
                                        <from>concat("EnMora: ",string($outValidarMora.response/ns26:Cliente/ns7:enMora)," Importe: ",string($outValidarMora.response/ns26:Cliente/ns7:mora/ns7:monto))</from>
                                        <to>$mensajeMora</to>
                                      </copy>
                                      <extensionAssignOperation>
                                        <bpelx:append>
                                          <bpelx:from>$estadoMora</bpelx:from>
                                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                        </bpelx:append>
                                      </extensionAssignOperation>
                                      <extensionAssignOperation>
                                        <bpelx:append>
                                          <bpelx:from>$mensajeMora</bpelx:from>
                                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                        </bpelx:append>
                                      </extensionAssignOperation>
                                    </assign>
                                  </elseif>
                                  <else>
                                    <assign name="estadoMensajeNoCumplida">
                                      <copy>
                                        <from>'NO_CUMPLIDA'</from>
                                        <to>$estadoMora</to>
                                      </copy>
                                      <copy bpelx:insertMissingToData="yes">
                                        <from>concat("EnMora: ",string($outValidarMora.response/ns26:Cliente/ns7:enMora)," Dias: ",string($outValidarMora.response/ns26:Cliente/ns7:mora/ns7:dias)," Sector: ",$outValidarMora.response/ns26:Cliente/ns7:sector/ns6:DescripcionCorta)</from>
                                        <to>$mensajeMora</to>
                                      </copy>
                                      <extensionAssignOperation>
                                        <bpelx:append>
                                          <bpelx:from>$estadoMora</bpelx:from>
                                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MORA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                                        </bpelx:append>
                                      </extensionAssignOperation>
                                      <extensionAssignOperation>
                                        <bpelx:append>
                                          <bpelx:from>$mensajeMora</bpelx:from>
                                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MORA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                        </bpelx:append>
                                      </extensionAssignOperation>
                                    </assign>
                                  </else>
                                </if>
                                <else>
                                  <documentation>
                                    <![CDATA[ERROR]]>
                                  </documentation>
                                  <assign name="estadoMensajeERROR" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                                    <copy>
                                      <from>'ERROR'</from>
                                      <to>$estadoMora</to>
                                    </copy>
                                    <copy>
                                      <from>$outValidarMora.response/ns26:Resultado/ns21:message</from>
                                      <to>$mensajeMora</to>
                                    </copy>
                                    <extensionAssignOperation>
                                      <bpelx:append>
                                        <bpelx:from>$estadoMora</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MORA']/ns5:Estado/ns6:Descripcion</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                    <extensionAssignOperation>
                                      <bpelx:append>
                                        <bpelx:from>$mensajeMora</bpelx:from>
                                        <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MORA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                                      </bpelx:append>
                                    </extensionAssignOperation>
                                  </assign>
                                </else>
                              </if>
                            </sequence>
                            <else>
                              <documentation>
                                <![CDATA[ERROR]]>
                              </documentation>
                              <assign name="estadoMensajeFlexcube">
                                <copy bpelx:insertMissingToData="yes">
                                  <from>'ERROR_FLEXCUBE'</from>
                                  <to>$estadoMora</to>
                                </copy>
                                <copy bpelx:insertMissingToData="yes">
                                  <from>'ERROR_FLEXCUBE'</from>
                                  <to>$mensajeMora</to>
                                </copy>
                                <copy>
                                  <from>$estadoMora</from>
                                  <to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion = 'MORA']/ns5:Estado/ns6:DescripcionCorta</to>
                                </copy>
                              </assign>
                            </else>
                          </if>
                        </sequence>
                        <else>
                          <assign name="estadoNoEvaluada" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
                            <copy bpelx:insertMissingToData="yes" xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                              <from>'NO_EVALUADA'</from>
                              <to>$estadoMora</to>
                            </copy>
                            <copy>
                              <from>'Id Cliente es requerido'</from>
                              <to>$mensajeMora</to>
                            </copy>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$estadoMora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA']/ns5:Estado/ns6:DescripcionCorta</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                            <extensionAssignOperation>
                              <bpelx:append xmlns:bpelx="http://schemas.oracle.com/bpel/extension">
                                <bpelx:from>$mensajeMora</bpelx:from>
                                <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                              </bpelx:append>
                            </extensionAssignOperation>
                          </assign>
                        </else>
                      </if>
                    </sequence>
                  </else>
                </if>
                <assign name="requestCrearBitacoraMora">
                  <copy>
                    <from>$inputVariable.request/ns3:instanciaProceso</from>
                    <to>$inCrearBitacoraMora.request/ns30:BitacoraReglasDesembolso/ns31:InstanciaProceso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA']/ns5:Exceptuado/ns6:Id</from>
                    <to>$inCrearBitacoraMora.request/ns30:BitacoraReglasDesembolso/ns31:IdTreReglaDesembolso</to>
                  </copy>
                  <copy>
                    <from>$inputVariable.request/ns3:TareaReglas/ns4:IdTarea</from>
                    <to>$inCrearBitacoraMora.request/ns30:BitacoraReglasDesembolso/ns31:IdTarea</to>
                  </copy>
                  <extensionAssignOperation>
                    <bpelx:append ignoreMissingFromData="no">
                      <bpelx:from>$mensajeMora</bpelx:from>
                      <bpelx:to>$inCrearBitacoraMora.request/ns30:BitacoraReglasDesembolso/ns31:Descripcion</bpelx:to>
                    </bpelx:append>
                  </extensionAssignOperation>
                  <extensionAssignOperation>
                    <bpelx:append>
                      <bpelx:from>$estadoMora</bpelx:from>
                      <bpelx:to>$inCrearBitacoraMora.request/ns30:BitacoraReglasDesembolso/ns31:Estatus</bpelx:to>
                    </bpelx:append>
                  </extensionAssignOperation>
                </assign>
                <invoke name="InvokeCrearBitacoraMora_SB" bpelx:invokeAsDetail="no" partnerLink="CrearBitacoraReglasDesembolso_SB" portType="ns29:CrearBitacoraReglasDesembolso_PT" operation="crearBitacoraReglasDesembolso" inputVariable="inCrearBitacoraMora" outputVariable="outCrearBitacoraMora"/>
                <if name="IfValidarOK">
                  <documentation>
                    <![CDATA[OK]]>
                  </documentation>
                  <condition>$outCrearBitacoraMora.response/ns30:Resultado/ns21:result = 'OK'</condition>
                  <empty name="Empty"/>
                  <else>
                    <documentation>
                      <![CDATA[ERROR]]>
                    </documentation>
                    <assign name="errorBitacora">
                      <extensionAssignOperation>
                        <bpelx:append>
                          <bpelx:from>'Error al insertar en Bitacora'</bpelx:from>
                          <bpelx:to>$inputVariable.request/ns3:TareaReglas/ns4:ReglasEvaluacion[ns5:Transaccion='MORA']/ns4:Mensaje/ns6:Descripcion</bpelx:to>
                        </bpelx:append>
                      </extensionAssignOperation>
                    </assign>
                  </else>
                </if>
                <assign name="XQ_ResponseMora">
                  <bpelx:annotation>
                    <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                  </bpelx:annotation>
                  <copy>
                    <from>ora:processXQuery10('../Transformations/XQ_ResponseMora.xqy', 'inputVariable.request', $inputVariable.request)</from>
                    <to variable="outputVariableMora" part="response"/>
                  </copy>
                </assign>
              </sequence>
              <else>
                <empty name="SinReglaMora"/>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
    </flow>
    <assign name="XQ_ResponseValidarReglasDesembolso">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:processXQuery10('../Transformations/XQ_ResponseValidarReglasDesembolso.xqy', 'outputVariable.response', $outputVariable.response, 'outputVariableProgramacion.response', $outputVariableProgramacion.response, 'outvariableLAFT.response', $outvariableLAFT.response, 'outvariableSCR.response', $outvariableSCR.response, 'outputVariableMora.response', $outputVariableMora.response, 'outvariableLimites.response', $outvariableLimites.response, 'outvariableTotalLC.response', $outvariableTotalLC.response, 'outvariableLimiteGlobal.response', $outvariableLimiteGlobal.response, 'outvariableProxHoraCierre.response', $outvariableProxHoraCierre.response, 'outvariablePreviaHoraCierre.response', $outvariablePreviaHoraCierre.response, 'outvariablePresentacionF1.response', $outvariablePresentacionF1.response, 'outvariableValidarComponenteInteres.response', $outvariableValidarComponenteInteres.response, 'outvariableValidarPlazoCapitalMinimoMaximoGracia.response', $outvariableValidarPlazoCapitalMinimoMaximoGracia.response, 'outvariableCondiciones.response', $outvariableCondiciones.response, 'outvariableTotalContratoDesembolso.response', $outvariableTotalContratoDesembolso.response, 'outVariableValidacionTempranaFlexcube.response', $outVariableValidacionTempranaFlexcube.response, 'outVariableValidarMontoMaximoDesembolso.response', $outVariableValidarMontoMaximoDesembolso.response, 'outVariableValidarFechaVencimiento.response', $outVariableValidarFechaVencimiento.response)</from>
        <to variable="outputVariable" part="response"/>
      </copy>
    </assign>
     <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="validarreglasdesembolso_client" portType="ns1:ValidarReglasDesembolso_PT" operation="validarReglasDesembolso" variable="outputVariable"/>
  </sequence>
</process>