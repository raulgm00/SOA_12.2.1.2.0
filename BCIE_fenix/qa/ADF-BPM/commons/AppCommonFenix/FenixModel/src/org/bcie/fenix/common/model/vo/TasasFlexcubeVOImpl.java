package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TasasFlexcubeVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 19 16:58:10 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TasasFlexcubeVOImpl extends ViewObjectImpl implements TasasFlexcubeVO {
    
    private static ADFLogger logger = null;
    
    
    /**
     * This is the default constructor (do not remove).
     */
    public TasasFlexcubeVOImpl() {
        if (logger == null) {
                    logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    
    public BigDecimal obtenerTasa(String codigo,String codigoMoneda, Timestamp fechaCalculo){
            logger.log(ADFLogger.WARNING,"Into obtenerTasa.");
            logger.log(ADFLogger.WARNING,"Parameter value codigo : " + codigo);
            logger.log(ADFLogger.WARNING,"Parameter value codigoMoneda : " + codigoMoneda);
            logger.log(ADFLogger.WARNING,"Parameter value fechaCalculo : " + fechaCalculo);
            BigDecimal tasa = null;
            try {
                ViewCriteria criteria =this.getViewCriteriaManager().getViewCriteria("ConsultarPorCodigoCriteria");
                criteria.ensureVariableManager().setVariableValue("VarCodigo", codigo);
                criteria.ensureVariableManager().setVariableValue("VarCodigoMoneda", codigoMoneda);
                criteria.ensureVariableManager().setVariableValue("varFechaEfectiva", fechaCalculo);
                this.applyViewCriteria(criteria);
                this.executeQuery();
                logger.warning("Query obtenerTasa : "+this.getQuery());
                logger.warning("Numero de rows :" + this.getEstimatedRowCount());
                if(null != this.getRowAtRangeIndex(0)){
                    Row rowTasasFlexCubeVO = this.getRowAtRangeIndex(0);
                    tasa = (null != rowTasasFlexCubeVO.getAttribute(TasasFlexcubeVORowImpl.VALORACTUAL)) 
                            ? (BigDecimal)rowTasasFlexCubeVO.getAttribute(TasasFlexcubeVORowImpl.VALORACTUAL) : null;
                }
            }catch(Exception ex){
                logger.severe("Error en obtenerTasa : ",ex);
            }finally{
                //This takes care of removing the applied VC.
                this.getViewCriteriaManager().removeApplyViewCriteriaName("ConsultarPorCodigoCriteria");
            }
            logger.log(ADFLogger.WARNING,"obtenerTasa  return : " + tasa);
            return tasa;
        }
        
        public Timestamp obtenerFechaEfectiva(String codigo,String codigoMoneda, Timestamp fechaCalculo){
            logger.log(ADFLogger.WARNING,"Into obtenerFechaEfectiva.");
            logger.log(ADFLogger.WARNING,"Parameter value codigo : " + codigo);
            logger.log(ADFLogger.WARNING,"Parameter value codigoMoneda : " + codigoMoneda);
            logger.log(ADFLogger.WARNING,"Parameter value fechaCalculo : " + fechaCalculo);
            Timestamp fechaEfectiva = null;
            try {
                ViewCriteria criteria =this.getViewCriteriaManager().getViewCriteria("ConsultarPorCodigoCriteria");
                criteria.ensureVariableManager().setVariableValue("VarCodigo", codigo);
                criteria.ensureVariableManager().setVariableValue("VarCodigoMoneda", codigoMoneda);
                criteria.ensureVariableManager().setVariableValue("varFechaEfectiva", fechaCalculo);
                this.applyViewCriteria(criteria);
                this.executeQuery();
                logger.warning("Query obtenerFechaEfectiva : "+this.getQuery());
                logger.warning("Numero de rows :" + this.getEstimatedRowCount());
                if(null != this.getRowAtRangeIndex(0)){
                    Row rowTasasFlexCubeVO = this.getRowAtRangeIndex(0);
                    fechaEfectiva = (null != rowTasasFlexCubeVO.getAttribute(TasasFlexcubeVORowImpl.FECHAEFECTIVA)) 
                            ? (Timestamp)rowTasasFlexCubeVO.getAttribute(TasasFlexcubeVORowImpl.FECHAEFECTIVA) : null;
                }
            }catch(Exception ex){
                logger.severe("Error en obtenerFechaEfectiva",ex);
            }finally{
                //This takes care of removing the applied VC.
                this.getViewCriteriaManager().removeApplyViewCriteriaName("ConsultarPorCodigoCriteria");
            }
            logger.log(ADFLogger.WARNING,"obtenerFechaEfectiva  return : " + fechaEfectiva);
            return fechaEfectiva;
        }

    /**
     * Returns the variable value for VarCodigo.
     * @return variable value for VarCodigo
     */
    public String getVarCodigo() {
        return (String) ensureVariableManager().getVariableValue("VarCodigo");
    }

    /**
     * Sets <code>value</code> for variable VarCodigo.
     * @param value value to bind as VarCodigo
     */
    public void setVarCodigo(String value) {
        ensureVariableManager().setVariableValue("VarCodigo", value);
    }

    /**
     * Returns the variable value for VarCodigoMoneda.
     * @return variable value for VarCodigoMoneda
     */
    public String getVarCodigoMoneda() {
        return (String) ensureVariableManager().getVariableValue("VarCodigoMoneda");
    }

    /**
     * Sets <code>value</code> for variable VarCodigoMoneda.
     * @param value value to bind as VarCodigoMoneda
     */
    public void setVarCodigoMoneda(String value) {
        ensureVariableManager().setVariableValue("VarCodigoMoneda", value);
    }

    /**
     * Returns the variable value for varFechaEfectiva.
     * @return variable value for varFechaEfectiva
     */
    public Timestamp getvarFechaEfectiva() {
        return (Timestamp) ensureVariableManager().getVariableValue("varFechaEfectiva");
    }

    /**
     * Sets <code>value</code> for variable varFechaEfectiva.
     * @param value value to bind as varFechaEfectiva
     */
    public void setvarFechaEfectiva(Timestamp value) {
        ensureVariableManager().setVariableValue("varFechaEfectiva", value);
    }
}

