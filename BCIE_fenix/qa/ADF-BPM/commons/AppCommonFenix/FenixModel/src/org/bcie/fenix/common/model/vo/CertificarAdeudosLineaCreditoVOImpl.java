package org.bcie.fenix.common.model.vo;

import com.bcie.xmlns.operacionservice.Operacion12BndQSService;

import com.bcie.xmlns.operacionservice.Operacion12Port;

import java.sql.ResultSet;

import java.util.Date;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.server.QueryCollection;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;

import org.bcie.atributobo.NivelType;
import org.bcie.contratobo.Contrato;
import org.bcie.fenix.common.model.FenixModelConstants;
import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.am.common.FenixAM;
import org.bcie.fenix.common.model.utils.IWsdlLocation;
import org.bcie.fenix.common.model.utils.ModelUtils;
import org.bcie.fenix.common.model.vo.common.CertificarAdeudosLineaCreditoVO;
import org.bcie.lineacreditomo.ConsultarLineaCreditoRequestType;
import org.bcie.lineacreditomo.ConsultarLineaCreditoResponseType;
import org.bcie.operacionbo.Operacion;
import org.bcie.operacionmo.ConsultarOperacionByIdOperacionRequestType;
import org.bcie.operacionmo.ConsultarOperacionResponseType;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 25 10:36:32 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CertificarAdeudosLineaCreditoVOImpl extends ViewObjectImpl implements CertificarAdeudosLineaCreditoVO {
    private static ADFLogger logger = null;
    private FenixAM fenixAM;
    private static String NIVEL_DETALLE = "LINEA";
    /**
     * This is the default constructor (do not remove).
     */
    public CertificarAdeudosLineaCreditoVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    public void mapConsultarLineaCreditoByIdOperacion(List<Operacion> operaciones){
        
        try{
            logger.log(ADFLogger.WARNING, "INTO mapConsultarLineaCreditoByIdOperacion");
            Row rowCertificarAdeudos = null;
            
            for(Operacion operacion: operaciones){
                
                for(org.bcie.contratobo.Contrato contrato: operacion.getContrato()){
                    
                    if(contrato.getLineaCredito() != null &&
                       contrato.getLineaCredito().size() > 0){
                        
                        for(org.bcie.lineacreditobo.LineaCredito lineaCredito : contrato.getLineaCredito()){
                            
                            rowCertificarAdeudos = this.createRow();
                            
                            if(lineaCredito.getIdLineaCredito() != null &&
                               lineaCredito.getIdLineaCredito() > 0){
                                
                                rowCertificarAdeudos.setAttribute(CertificarAdeudosLineaCreditoVORowImpl.IDLINEACREDITO, lineaCredito.getIdLineaCredito());
                            }else{
                                logger.severe("No se recibio Id de Linea no recibido");
                            }
                            
                            if(lineaCredito.getNumeroLineaCredito() != null){
                                
                                rowCertificarAdeudos.setAttribute(CertificarAdeudosLineaCreditoVORowImpl.NUMEROLINEACREDITO, lineaCredito.getNumeroLineaCredito());
                            }else{
                                logger.severe("No se recibio Numero de Linea no recibido");
                            }
                            
                            if(lineaCredito.getDescripcion() != null){
                                rowCertificarAdeudos.setAttribute(CertificarAdeudosLineaCreditoVORowImpl.DESCRIPCIONLINEACREDITO, lineaCredito.getDescripcion());
                            }else{
                                logger.severe("No se recibio Descripcion de la linea de credito");
                            }
                            
                            if(lineaCredito.getAtributos() != null &&
                               lineaCredito.getAtributos().size() > 0){
                                
                                if(lineaCredito.getAtributos().get(0).getValue() != null){
                                    
                                    rowCertificarAdeudos.setAttribute(CertificarAdeudosLineaCreditoVORowImpl.INFORMEADEUDO,lineaCredito.getAtributos().get(0).getValue());    
                                }else{
                                    logger.severe("Valor del atributo no recibido, este valor corresponde a la URL del Informe");
                                }
                            }else{
                                logger.severe("Lista de atributos de la Linea no recibidos");
                            }
                            
                            this.insertRow(rowCertificarAdeudos);     
                        }
                    }else{
                        logger.severe("No se obtuvo lista de Lineas de credito");
                    }
                }
            }
        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Error en mapConsultarLineaCreditoByIdOperacion " + e.getClass() + ":" + e.getMessage());
            JboException ex = new JboException(e);
            throw ex;
        }
    }
    
    public void consultarLineaCreditoByIdOperacion(String idOperacion){
            try{
            logger.log(ADFLogger.WARNING,"INTO consultarLineaCreditoByIdOperacion");

            FenixAMImpl fenixAM = null;
            fenixAM = (FenixAMImpl)this.getRootApplicationModule();
                
            String wsdl = fenixAM.getWsdl(IWsdlLocation.OPERACION);
            com.bcie.xmlns.operacionservice.Operacion12BndQSService operacion12BndQSService = IWsdlLocation.Service.getInstance(
                                                            Operacion12BndQSService.class, wsdl);
            
            Operacion12Port operacion12Port = operacion12BndQSService.getOperacion12BndQSPort();
            ConsultarOperacionByIdOperacionRequestType request = new ConsultarOperacionByIdOperacionRequestType();
            request.setIdOperacion(Long.parseLong(idOperacion));
            request.setNivelDetalle(NivelType.LINEA);
            
            Date horaInicio = ModelUtils.logStartWS(logger, request, FenixModelConstants.WSC_CONSULTAR_CONTRATO_OPERACION);
            ConsultarOperacionResponseType response = operacion12Port.consultarOperacionByIdOperacion(request);
            ModelUtils.logEndWS(logger, response, FenixModelConstants.WSC_CONSULTAR_CONTRATO_OPERACION, horaInicio);
            this.mapConsultarLineaCreditoByIdOperacion(response.getOperacion());
              
            }catch(Exception e){
                logger.log(ADFLogger.WARNING,"ConsultarOperacionResponseType Operacion is  null, no mapping information.");
                logger.log(ADFLogger.ERROR, "Error en consultarLineaCreditoByIdOperacion " + e.getClass() + ":" + e.getMessage());
            JboException ex = new JboException(e);
            throw ex;
            }
        }
    
    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }
}

