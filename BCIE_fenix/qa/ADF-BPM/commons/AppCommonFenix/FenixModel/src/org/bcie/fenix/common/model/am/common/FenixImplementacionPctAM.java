package org.bcie.fenix.common.model.am.common;

import java.sql.Timestamp;

import java.util.List;
import java.util.Map;

import oracle.jbo.ApplicationModule;

import oracle.jbo.Row;

import org.bcie.contratobo.Contrato;
import org.bcie.lineacreditobo.LineaCredito;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 25 16:52:45 CST 2016
// ---------------------------------------------------------------------
public interface FenixImplementacionPctAM extends ApplicationModule {


    Long llenarFormularioImplementacion();

    Long insertarFormularioImplementacion(Long idOperacion);

    void actualizarFormularioImplementacionDatosInicio();

    void actualizarFormularioImplementacionObservacion();

    void agregarParticipante(Long idLote);

    void crearAdjudicatario(Long idImplementacion, Long idParticipante, String nombreParticipante,
                            Integer idCatPaisParticipante);
    void actualizarFormularioImplementacionInicioAdquisicion();

    Long llenarFormularioLoteImplementacion();

    void agregarLote(Long idImplementacion);

    void actualizarLoteImplementacionAM();

    void actualizarAdjudicatarioImplementacion();

    void actualizarConcursanteImplementacion();

    void actualizarFormularioImplementacionRegistrarResultadoAdquisicion(Long idLoteImplementacion);


    void inicializarRegistrarDatosLineaCredito();

    void filtrarProducto(Integer idProducto, String isRevolvente);

    void actualizarLineaCredito(String idOperacion);

    Integer obtenerContratoPorLote(Long idOperacion, String instanciaProceso);


    Map AplicarEnvioCobroService(Long idOperacion, Long idSolicitud);

    Map ObtenerFactibilidadService(Long idOperacion);

    Boolean obtenerFechaLimiteRecepcionPropuesta(String idImplementacion);

    void consultarLineaCredito(String idOperacion, Integer idContrato);

    void consultarLineaCreditoByIdLineaCredito(String idOperacion, Long idLineaCredito, Integer idProducto,
                                               String idTarea, Integer idContrato);

    void mappingConsultarLineaCredito(List<Contrato> contratos, List<LineaCredito> listaLineaCreditoAsociada);

    void mappingConsultarLineaCredito(List<Contrato> contratos, Long idLineaCredito, Integer idProducto, String idTarea,
                                      List<LineaCredito> listaLineaCreditoAsociada);


    Map buscarCondicionFinancieraPorIdContrato(Long idOperacion);

    Boolean validaspreadVariable(String idProductolex);

    boolean propagarLineaCredito(String loginUsuario);
}

