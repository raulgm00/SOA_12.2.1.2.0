package org.bcie.fenix.common.model.vo;

import java.util.HashMap;
import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.adf.share.logging.ADFLoggerConstants;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.JustificacionCierreFiedeicomisoVO;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 05 10:39:05 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JustificacionCierreFiedeicomisoVOImpl extends ViewObjectImpl implements JustificacionCierreFiedeicomisoVO {
    /**
     * This is the default constructor (do not remove).
     */
    
    private static ADFLogger logger = null;
    
    public JustificacionCierreFiedeicomisoVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    /**
    ???? * Se crea metodo para guardar la justificacion 
           en la columna Justificacion_Cierre de la tabla Operacion 
    ???? * @param idOperacion, justificacion
    ???? * @since 05/08/2016
    ???? * @by José Hernández Cruz
    ???? */  
    public Boolean agregarJustificacion(String idOperacion,String justificacion /*String numeroCustodiaDocCierre*/){
        logger.log(ADFLogger.WARNING, "Inside agregarJustificacion." );
        Boolean resultado = null;
        Row rowOJustificacion = null;
        rowOJustificacion = this.getRow(new Key(new Object[] {new oracle.jbo.domain.Number (Integer.parseInt(idOperacion))}));
        try{
        if(rowOJustificacion != null){
            logger.log(ADFLogger.WARNING, "Row diferente a null.");
            rowOJustificacion.setAttribute("JustificacionCierre", justificacion);
            getDBTransaction().commit();
            resultado = Boolean.TRUE;
        }else{
            System.out.println("rowOJustificacion is null.");
            resultado = Boolean.FALSE;
        }
        }catch(Exception ex){
            resultado = Boolean.FALSE;
            logger.log(ADFLogger.ERROR, "Error al agregar la justificacion para cierre." + ex.getClass() + ":" + ex.getMessage());
        }
        
        return resultado;
        //this.executeQuery();
    }
    
    /**
    ???? * Se crea metodo para guardar El numero de custodia de cierre 
           en la columna Justificacion_Cierre de la tabla Operacion 
    ???? * @param idOperacion, justificacion
    ???? * @since 05/08/2016
    ???? * @by José Hernández Cruz
    ???? */  
    public Boolean agregarNumeroCustodia(String idOperacion, String numeroCustodiaDocCierre){
        logger.log(ADFLogger.WARNING, "Inside agregarJustificacion." );
        Boolean resultado = null;
        Row rowOJustificacion = null;
        rowOJustificacion = this.getRow(new Key(new Object[] {new oracle.jbo.domain.Number (Integer.parseInt(idOperacion))}));
        try{
        if(rowOJustificacion != null){
            logger.log(ADFLogger.WARNING, "Row diferente a null.");
           rowOJustificacion.setAttribute("NumeroCustodiaDocCierre", numeroCustodiaDocCierre);
            getDBTransaction().commit();
            resultado = Boolean.TRUE;
        }else{
            System.out.println("rowOJustificacion is null.");
            resultado = Boolean.FALSE;
        }
        }catch(Exception ex){
            resultado = Boolean.FALSE;
            logger.log(ADFLogger.ERROR, "Error al agregar la justificacion para cierre." + ex.getClass() + ":" + ex.getMessage());
        }
        
        return resultado;
        //this.executeQuery();
    }
    /**
    ???? * Se crea metodo para obtener la justificacion 
           de la columna Justificacion_Cierre de la tabla Operacion 
    ???? * @param idOperacion, justificacion
    ???? * @since 05/08/2016
    ???? * @by José Hernández Cruz
    ???? */ 
    public Map obtenerJustificacion(String idOperacion){
        logger.log(ADFLogger.TRACE, "Inisde VOImpl obtenerJustificacion.");
        HashMap map = new HashMap();
        Row rowJustificacion = this.getRow(new Key(new Object[] {new oracle.jbo.domain.Number (Integer.parseInt(idOperacion))}));
        logger.log(ADFLogger.TRACE, "Valor Operacion." + idOperacion);
        try{
        if(rowJustificacion != null){
            logger.log(ADFLogger.TRACE, "Inisde rowjustificacion no es null.");
            map.put("justificacion", (String)rowJustificacion.getAttribute(JustificacionCierreFiedeicomisoVORowImpl.JUSTIFICACIONCIERRE));
            map.put("numeroCustodiaDocCierre", (String)rowJustificacion.getAttribute(JustificacionCierreFiedeicomisoVORowImpl.NUMEROCUSTODIADOCCIERRE));
            logger.log(ADFLogger.TRACE, "Valor del HashMap : " + map);
        }
        }catch(Exception ex){
            logger.log(ADFLogger.TRACE, "Error al obtener la justificacion" + ex.getClass() + ":" + ex.getMessage());
        }
        return map;
    }
}

