package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Dec 13 23:34:26 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CatFondoContableVOImpl extends ViewObjectImpl {
    
    private static ADFLogger logger = null;
    
    public CatFondoContableVOImpl() {
        
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
        
    }
    
    
    
    public String recuperarDescripcionFondoByIdFondo(String idFondo){
        logger.warning("*Inf, inicia metodo recuperarDescripcionFondoByIdFondo");
        
         String fondo = "";
         Row filaRecuperada = null;        
         ViewCriteria criteria = null;
            
            if(idFondo == null){
                logger.warning("*** El parametro idFondo es requerido para la busqueda");            
                return null;
              }             
           
            try{      
                executeQuery();//se recarga la vo 
                
                criteria = getViewCriteriaManager().getViewCriteria("recuperarFondoByIdFondoVc");
                criteria.ensureVariableManager().setVariableValue("pIdFondo", idFondo);
                applyViewCriteria(criteria);
                executeQuery();
            
                logger.warning("*Inf, numero de coincidencias: "+getEstimatedRowCount()); 
            
                if(getEstimatedRowCount() > 0){               
                    setCurrentRow(first());
                    filaRecuperada = getCurrentRow();
                    logger.warning("*Inf, id Fondo ->"+idFondo+" Descripcion recuperada"+filaRecuperada.getAttribute("CodeDesc"));
                  
                    fondo = filaRecuperada.getAttribute("CodeDesc") == null  ? null
                          : (String) filaRecuperada.getAttribute("CodeDesc");
                    
                }else{                
                     logger.warning("*Inf, Important!, No se pudo recuperar una descripcion para el Fondo");
                    }
                
            }catch(Exception e){
                logger.log(ADFLogger.WARNING, "*** Error al Fondo  ->" + e);
            }finally{
               getViewCriteriaManager().removeApplyViewCriteriaName("recuperarFondoByIdFondoVc");
            }
        
        logger.warning("*Inf, termina metodo recuperarDescripcionFondoByIdFondo");
        return fondo;
        }
    
    

    /**
     * Returns the variable value for pIdFondo.
     * @return variable value for pIdFondo
     */
    public String getpIdFondo() {
        return (String) ensureVariableManager().getVariableValue("pIdFondo");
    }

    /**
     * Sets <code>value</code> for variable pIdFondo.
     * @param value value to bind as pIdFondo
     */
    public void setpIdFondo(String value) {
        ensureVariableManager().setVariableValue("pIdFondo", value);
    }
}

