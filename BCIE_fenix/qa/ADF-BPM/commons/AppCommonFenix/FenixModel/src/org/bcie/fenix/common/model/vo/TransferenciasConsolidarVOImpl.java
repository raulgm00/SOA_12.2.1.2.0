package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TransferenciasConsolidarVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 26 11:40:43 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransferenciasConsolidarVOImpl extends ViewObjectImpl implements TransferenciasConsolidarVO {
     
    private static ADFLogger logger = null;
     
    public TransferenciasConsolidarVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }


    public Boolean validarTransferenciasAplicadas(){
    logger.warning("*inf, Inicia metodo validarTransferenciasAplicadas");
         Boolean resultado=Boolean.TRUE;
             
            ViewCriteria criteriaByAccion = null;
            criteriaByAccion=this.getViewCriteriaManager().getViewCriteria("TransferenciasConsolidadasVOCriteria");
            
            this.applyViewCriteria(criteriaByAccion);
            this.executeQuery();
            
            logger.warning("*inf, numero de transferencias que no cuantan con BHQ : "+ this.getEstimatedRowCount());
                                
            if(this.getEstimatedRowCount() > 0) {
                logger.warning("*inf, Impotante! no todas las transferencias an sido aplicadas");
                resultado=Boolean.FALSE;
            }else{
                logger.warning("*inf, ok se ha valiado que todas las transferencias tienen BHQ");
            }
                                       
                    // Removemos criteria del VO
            this.getViewCriteriaManager().removeApplyViewCriteriaName("TransferenciasConsolidadasVOCriteria");
            this.executeQuery();
            
        
        logger.warning("*inf, Inicia metodo validarTransferenciasAplicadas");    
      return resultado;    
    }
    
    public Boolean validarTransferenciasAplicadasPorContrato(Long idContrato) {
        logger.warning("Entrando en validarTransferenciasAplicadasPorContrato.");
        logger.warning("idContrato: " + idContrato);
        Boolean resultado = Boolean.TRUE;

        ViewCriteria viewCriteria = getViewCriteriaManager().getViewCriteria("TransferenciasConsolidadasVOCriteria");
        viewCriteria.ensureVariableManager().setVariableValue("pIdContrato", idContrato);
        applyViewCriteria(viewCriteria);
        executeQuery();

        logger.warning("*inf, numero de transferencias que no cuantan con BHQ : " + getEstimatedRowCount());

        if (getEstimatedRowCount() > 0) {
            logger.warning("Error no todas las transferencias han sido aplicadas");
            resultado = Boolean.FALSE;
        } else {
            logger.warning("OK todas las transferencias han sido aplicadas");
        }

        getViewCriteriaManager().removeApplyViewCriteriaName("TransferenciasConsolidadasVOCriteria");
        executeQuery();

        return resultado;
    }

    /**
     * Returns the bind variable value for pIdSolicitud.
     * @return bind variable value for pIdSolicitud
     */
    public Long getpIdSolicitud() {
        return (Long) getNamedWhereClauseParam("pIdSolicitud");
    }

    /**
     * Sets <code>value</code> for bind variable pIdSolicitud.
     * @param value value to bind as pIdSolicitud
     */
    public void setpIdSolicitud(Long value) {
        setNamedWhereClauseParam("pIdSolicitud", value);
    }

    /**
     * Returns the variable value for pIdContrato.
     * @return variable value for pIdContrato
     */
    public Long getpIdContrato() {
        return (Long) ensureVariableManager().getVariableValue("pIdContrato");
    }

    /**
     * Sets <code>value</code> for variable pIdContrato.
     * @param value value to bind as pIdContrato
     */
    public void setpIdContrato(Long value) {
        ensureVariableManager().setVariableValue("pIdContrato", value);
    }
}

