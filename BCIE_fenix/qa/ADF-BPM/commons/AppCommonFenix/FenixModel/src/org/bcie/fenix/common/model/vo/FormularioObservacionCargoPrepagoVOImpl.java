package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.FormularioObservacionCargoPrepagoVO;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 08 18:11:09 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FormularioObservacionCargoPrepagoVOImpl extends ViewObjectImpl implements FormularioObservacionCargoPrepagoVO {
    /**
     * This is the default constructor (do not remove).
     */
    
    private static ADFLogger logger = null;
    public FormularioObservacionCargoPrepagoVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void crearRowFormularioObservacionCargoPrepago(Long idPrepago,Integer idTcaRolBpm,Integer idTcaTareaBpm,
                                                          String loginUsuario,String nomUsuario){
        logger.log(ADFLogger.WARNING, "INTO crearRowFormularioObservacionCargoPrepago.");
        this.clearCache();
        Row row = this.createRow();
        try {
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.ID, new Integer(1));
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.IDPREPAGO, idPrepago);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.IDTCAROLBPM, idTcaRolBpm);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.IDTCATAREABPM, idTcaTareaBpm);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.LOGINUSUARIO, loginUsuario);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.NOMBREUSUARIO, nomUsuario);
            row.setNewRowState(Row.STATUS_INITIALIZED);
            this.insertRowAtRangeIndex(0, row);
            this.setCurrentRow(row); // Se asigna row como current (Fila actual)
        } catch (Exception e) {
            logger.log(ADFLogger.ERROR, "Error en crearRowFormularioObservacionCargoPrepago.", e);
        }
    }
    public void crearRowFormularioObservacionCargoPrepagoDatosCompletos(Long idCargoPrepago, Long idObservacion, Integer aplicaCargoAdicional,BigDecimal montoCargo,Integer idTcaTipoMoneda,
                                                                        String observacion,Long idPrepago,Integer idTcaRolBpm,
                                                                        Integer idTcaTareaBpm,String loginUsuario,String nomUsuario){
        logger.log(ADFLogger.WARNING, "INTO crearRowFormularioObservacionCargoPrepagoDatosCompletos.");
        this.clearCache();
        Row row = this.createRow();
        try {
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.ID, new Integer(1));
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.IDCARGOPREPAGO, idCargoPrepago);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.IDOBSERVACION, idObservacion);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.APLICACARGOADICIONAL, aplicaCargoAdicional);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.DETERMINARMONTO, montoCargo);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.TIPOMONEDA, idTcaTipoMoneda);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.OBSERVACION, observacion);

            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.IDPREPAGO, idPrepago);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.IDTCAROLBPM, idTcaRolBpm);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.IDTCATAREABPM, idTcaTareaBpm);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.LOGINUSUARIO, loginUsuario);
            row.setAttribute(FormularioObservacionCargoPrepagoVORowImpl.NOMBREUSUARIO, nomUsuario);

            row.setNewRowState(Row.STATUS_INITIALIZED);
            this.insertRowAtRangeIndex(0, row);
            this.setCurrentRow(row); // Se asigna row como current (Fila actual)
        } catch (Exception e) {
            logger.log(ADFLogger.ERROR, "Error en crearRowFormularioObservacionCargoPrepagoDatosCompletos.", e);
        }
    }
    public Boolean validarFormularioCargoPrepago(){
        Boolean isValidarCargoPrepago = Boolean.FALSE;
        FormularioObservacionCargoPrepagoVORowImpl formularioPrepagoVORowImpl = (FormularioObservacionCargoPrepagoVORowImpl) this.getCurrentRow();
        try{
       if(null != formularioPrepagoVORowImpl.getAplicaCargoAdicional()){
           if(formularioPrepagoVORowImpl.getAplicaCargoAdicional() == 1){
               logger.log(ADFLogger.WARNING, "Valor Aplica CargoAdicional es igual que uno.");
               if(null != formularioPrepagoVORowImpl.getDeterminarMonto() &&
                  null != formularioPrepagoVORowImpl.getTipoMoneda() &&
                  null != formularioPrepagoVORowImpl.getObservacion()){
                   isValidarCargoPrepago = Boolean.TRUE;
               }else{
                   isValidarCargoPrepago = Boolean.FALSE;
               }
           }
           if(formularioPrepagoVORowImpl.getAplicaCargoAdicional() == 0){
               logger.log(ADFLogger.WARNING, "Valor Aplica CargoAdicional es igual que cero.");
               if(null != formularioPrepagoVORowImpl.getObservacion()){
                   isValidarCargoPrepago = Boolean.TRUE;
               }else{
                   isValidarCargoPrepago = Boolean.FALSE;
               }
           }
        }else{
            logger.log(ADFLogger.WARNING, "Valor Aplica CargoAdicional es nulo.");
            isValidarCargoPrepago = Boolean.FALSE;
        }

        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Excepcion en validarFormularioCargoPrepago." + e.getClass() + e.getMessage()); 
        }
        logger.warning("Valor de retorno en validarFormularioCargoPrepago :" + isValidarCargoPrepago);
        return isValidarCargoPrepago;
    }
    
    public Boolean validaMonto(){
        Boolean isValidaMonto = Boolean.FALSE;
        FormularioObservacionCargoPrepagoVORowImpl formularioPrepagoVORowImpl = (FormularioObservacionCargoPrepagoVORowImpl) this.getCurrentRow();
        try{
       if(null != formularioPrepagoVORowImpl.getAplicaCargoAdicional()){
           if(formularioPrepagoVORowImpl.getAplicaCargoAdicional() == 1){
               logger.log(ADFLogger.WARNING, "Valor Aplica CargoAdicional es igual que uno.");
               if(null != formularioPrepagoVORowImpl.getDeterminarMonto()){
                   isValidaMonto = Boolean.TRUE;
               }else{
                   isValidaMonto = Boolean.FALSE;
               }
           }
        }else{
            logger.log(ADFLogger.WARNING, "Valor Aplica CargoAdicional es nulo.");
            isValidaMonto = Boolean.FALSE;
        }

        }catch(Exception e){
            logger.log(ADFLogger.ERROR, "Excepcion en validaMonto." + e.getClass() + e.getMessage()); 
        }
        logger.warning("Valor de retorno en validarFormularioCargoPrepago :" + isValidaMonto);
        return isValidaMonto;
    }
    
}

