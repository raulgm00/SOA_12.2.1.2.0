package org.bcie.fenix.common.model.am;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;


import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.am.common.FenixSupervisionAM;
import org.bcie.fenix.common.model.vo.AvancesSupervisionesVOImpl;
import org.bcie.fenix.common.model.vo.CatSCTVOImpl;
import org.bcie.fenix.common.model.vo.SupervisionVOImpl;
import org.bcie.fenix.common.model.vo.SupervisionesRealizadasVOImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 25 13:55:21 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FenixSupervisionAMImpl extends ApplicationModuleImpl implements FenixSupervisionAM {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public FenixSupervisionAMImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Container's getter for SupervisionVO.
     * @return SupervisionVO
     */
    public SupervisionVOImpl getSupervisionVO() {
        return (SupervisionVOImpl) findViewObject("SupervisionVO");
    }

    /**
     * Container's getter for SupervisionesRealizadasVO.
     * @return SupervisionesRealizadasVO
     */
    public SupervisionesRealizadasVOImpl getSupervisionesRealizadasVO() {
        return (SupervisionesRealizadasVOImpl) findViewObject("SupervisionesRealizadasVO");
    }

    /**
     * Container's getter for AvancesSupervisionesVO.
     * @return AvancesSupervisionesVO
     */
    public AvancesSupervisionesVOImpl getAvancesSupervisionesVO() {
        return (AvancesSupervisionesVOImpl) findViewObject("AvancesSupervisionesVO");
    }

    /**
     * Container's getter for CatSCTVO1.
     * @return CatSCTVO1
     */
    public CatSCTVOImpl getCatSCTVO() {
        return (CatSCTVOImpl) findViewObject("CatSCTVO");
    }
    
    public void agregarSupervision(Long idOperacion, BigDecimal avanceFisico, BigDecimal avanceFinanciero,
                                  java.sql.Timestamp fechaAvance, Integer proyectoOperacion, String loginUsuario) {
        logger.warning("inside agregarSupervision");
        
        logger.warning("Valores recibidos");
        logger.warning("idOperacion: " + idOperacion);
        logger.warning("AvanceFisico: " + avanceFisico);
        logger.warning("AvanceFinanciero: " + avanceFinanciero);
        logger.warning("FechaAvance: " + fechaAvance);
        logger.warning("EsProyectoEnOperacion: " + proyectoOperacion);
        logger.warning("LoginUsuario: " + loginUsuario);
        
        Map<String, Object> responseMap = null;
        ViewObjectImpl supervisionVO = getSupervisionVO();
        Row supervisionRow = null;
        oracle.jbo.domain.Number idSupervision = null;
        NameValuePairs nvpSupervision = null;
        SequenceImpl seqSupervision = null;
        Integer ban = 1;
        String tipoActualizacion = "Informe Externo";
        String nombreUsuario = null;
        
        responseMap = consultarDatosUsuario(loginUsuario);
        nombreUsuario = (String) responseMap.get("nombreUsuario");
        
        seqSupervision = new SequenceImpl("SUPERVISION_SEQ", getDBTransaction());
        idSupervision = seqSupervision.getSequenceNumber();
        
        nvpSupervision = new NameValuePairs();

        nvpSupervision.setAttribute("BanEstatus", ban);
        nvpSupervision.setAttribute("AvanceFinanciero", avanceFinanciero);
        nvpSupervision.setAttribute("AvanceFisico", avanceFisico);
        nvpSupervision.setAttribute("FechaRegistro", new java.sql.Timestamp(System.currentTimeMillis()));
        nvpSupervision.setAttribute("FechaInforme", new java.sql.Timestamp(System.currentTimeMillis()));
        nvpSupervision.setAttribute("FechaAvance", fechaAvance);
        nvpSupervision.setAttribute("EsProyectoEnOperacion", proyectoOperacion);
        nvpSupervision.setAttribute("Id", idSupervision);
        nvpSupervision.setAttribute("IdOperacion", idOperacion);
        nvpSupervision.setAttribute("TipoActualizacion", tipoActualizacion);
        nvpSupervision.setAttribute("LoginUsuario", loginUsuario);
        nvpSupervision.setAttribute("NombreUsuario", nombreUsuario);
        //nvpSupervision.setAttribute("LoginUsuarioUltimoCambio", loginUsuario);
        //nvpSupervision.setAttribute("NombreUsuarioUltimoCambio", nombreUsuario);
        //nvpSupervision.setAttribute("FechaUltimoCambio", new java.sql.Timestamp(System.currentTimeMillis()));

        supervisionRow = supervisionVO.createAndInitRow(nvpSupervision);
        getDBTransaction().commit();
 
    }
    
    public Map consultarDatosUsuario(String loginUsuario) {
        logger.warning("Inside consultarDatosUsuario.");
        
        FenixAMImpl fenixAMImpl= null;
        Map<String, Object> responseMap = null;
        
        fenixAMImpl = (FenixAMImpl) this.getRootApplicationModule();
        responseMap = fenixAMImpl.consultarAtributosUsuario(loginUsuario);
        
        return responseMap;
    }
}

