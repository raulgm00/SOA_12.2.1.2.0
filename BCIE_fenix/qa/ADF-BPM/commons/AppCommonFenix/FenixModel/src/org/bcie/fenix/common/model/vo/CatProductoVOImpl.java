package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 26 17:09:21 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CatProductoVOImpl extends ViewObjectImpl {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public CatProductoVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public Boolean validarEsIfi(Integer idProducto){
        logger.warning("Inicia metodo validarEsIfi.");
        Integer valorEsIfi = null;
        Boolean esIfi = null;
        ViewCriteria criteria = null;
        Row row = null;
        
        if(null == idProducto){
            logger.warning("El parametro IdProducto requerido es NULL.");
            JboException ex = new JboException("");
            ex.addToExceptions(new Exception("CatProductoVOImpl-validarEsIfi(): El parametro IdProducto requerido es NULL."));
            throw ex;
        }
        
        try{
            criteria = this.getViewCriteriaManager().getViewCriteria("CatProductoVOCriteria");
            criteria.ensureVariableManager().setVariableValue("pIdProducto", idProducto);
            this.applyViewCriteria(criteria);
            this.executeQuery();
            
            if(getEstimatedRowCount() > 0){
                row = first();
            }
        }catch(Exception e){
            logger.warning("ERROR al ejecutar el viewCriteria.", e);
            JboException ex = new JboException("");
            ex.addToExceptions(new Exception("CatProductoVOImpl-validarEsIfi(): No se pudo recuperar el registro de Producto: " + e.getMessage()));
            throw ex;
        }finally{
            this.getViewCriteriaManager().removeApplyViewCriteriaName("CatProductoVOCriteria");
        }
        
        if(null != row){
            logger.warning("Obteniendo valor ESIFI.");
            try{
                valorEsIfi = (Integer) row.getAttribute("EsIfi");
            }catch(Exception e){
                logger.warning("ERROR al obtener el atributo ESIFI.", e);
                JboException ex = new JboException("");
                ex.addToExceptions(new Exception("CatProductoVOImpl-validarEsIfi(): ERROR al obtener el atributo ESIFI." + e.getMessage()));
                throw ex;
            }
        }else{
            logger.warning("No se encontro registro de Producto con ID: " + idProducto);
            JboException ex = new JboException("");
            ex.addToExceptions(new Exception("CatProductoVOImpl-validarEsIfi(): No se encontró registro de Producto con ID: " + idProducto));
            throw ex;
        }
        
        if(null != valorEsIfi){
            if(valorEsIfi.compareTo(0)==0){
                logger.warning("El producto NO es IFI.");
                esIfi = Boolean.FALSE;
            }else{
                logger.warning("El producto SI es IFI.");
                esIfi = Boolean.TRUE;
            }
        }else{
            logger.warning("ValorEsIfi es NULL.");
            JboException ex = new JboException("");
            ex.addToExceptions(new Exception("CatProductoVOImpl-validarEsIfi(): Atributo EsIFI."));
            throw ex;
        }
        
        logger.warning("Termina metodo validarEsIfi.");
        return esIfi;
    }

    public Boolean tieneRiesgoCredito(Integer idProducto){
        logger.warning("Inicia metodo tieneRiesgoCredito.");
        Integer valorTieneRiesgo = null;
        Boolean tieneRiesgo = false;
        ViewCriteria criteria = null;
        Row row = null;        

        if(null == idProducto){
            logger.warning("El parametro IdProducto requerido es NULL.");
            JboException ex = new JboException("");
            ex.addToExceptions(new Exception("CatProductoVOImpl-validarEsIfi(): El parametro IdProducto requerido es NULL."));
            throw ex;
        }
        
        row = this.getRow(new Key(new Object[] { idProducto }));

        if(null != row){
            logger.warning("Obteniendo valor TIENE RIESGO CREDITO.");
            try{
                valorTieneRiesgo = (Integer) row.getAttribute("TieneRiesgoCredito");
            }catch(Exception e){
                logger.warning("ERROR al obtener el atributo TieneRiesgoCredito.", e);
                JboException ex = new JboException("");
                ex.addToExceptions(new Exception("CatProductoVOImpl-tieneRiesgoCredito(): ERROR al obtener el atributo TieneRiesgoCredito." + e.getMessage()));
                throw ex;
            }
        }else{
            logger.warning("No se encontro registro de Producto con ID: " + idProducto);
            JboException ex = new JboException("");
            ex.addToExceptions(new Exception("CatProductoVOImpl-tieneRiesgoCredito(): No se encontró registro de Producto con ID: " + idProducto));
            throw ex;
        }        
        
        if(null != valorTieneRiesgo){
            if(valorTieneRiesgo.compareTo(0)==0){
                logger.warning("El producto NO tiene Riesgo.");
                tieneRiesgo = Boolean.FALSE;
            }else{
                logger.warning("El producto SI tiene Riesgo.");
                tieneRiesgo = Boolean.TRUE;
            }
        }else{
            logger.warning("ValorTieneRiesgo es NULL.");
            JboException ex = new JboException("");
            ex.addToExceptions(new Exception("CatProductoVOImpl-tieneRiesgoCredito(): Atributo TieneRiesgoCredito."));
            throw ex;
        }        
        
        
        return tieneRiesgo;
    }
    
    /**
     * Returns the variable value for pIdProducto.
     * @return variable value for pIdProducto
     */
    public Integer getpIdProducto() {
        return (Integer) ensureVariableManager().getVariableValue("pIdProducto");
    }

    /**
     * Sets <code>value</code> for variable pIdProducto.
     * @param value value to bind as pIdProducto
     */
    public void setpIdProducto(Integer value) {
        ensureVariableManager().setVariableValue("pIdProducto", value);
    }
}

