package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.ContratoOperacionSaldoNoVencidoVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 24 18:55:46 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContratoOperacionSaldoNoVencidoVOImpl extends ViewObjectImpl implements ContratoOperacionSaldoNoVencidoVO {
    /**
     * This is the default constructor (do not remove).
     */
    
    private static ADFLogger logger = null;
    public ContratoOperacionSaldoNoVencidoVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public Boolean verificarSaldoNoVencido(Long idOperacion) {
        logger.log(ADFLogger.WARNING, "Entra en verificarSaldoNoVencido.");
        Boolean resultado = Boolean.FALSE;
        BigDecimal capitalNoVencido = null;
        
        if (null != idOperacion) {
            setpIdOperacion(idOperacion.toString());
        } else {
            logger.log(ADFLogger.WARNING, "Error el idOperacion es nulo.");
        }
        
        try {
            if (this.getEstimatedRowCount() > 0) {
                
                Row row = getRowAtRangeIndex(0);
                
                if (null != row.getAttribute("SaldoNovencido")) {
                    capitalNoVencido = (BigDecimal) row.getAttribute("SaldoNovencido");
                    logger.log(ADFLogger.WARNING, "Valor del capital no vencido." + capitalNoVencido);
                    if (capitalNoVencido.compareTo(new BigDecimal(0)) == 1) {
                        resultado = Boolean.TRUE;
                    } else {
                        logger.log(ADFLogger.WARNING, "El capital no vencido es igual a cero.");
                    }
                } else {
                    logger.log(ADFLogger.WARNING, "El valor delcapital no vencido es nulo.");
                }    
            } else {
                logger.warning("El row es Null.");
            }
        } catch (Exception e) {
            logger.log(ADFLogger.WARNING, "Error en verificarSaldoNoVencido" + e.getClass() + "." + e);
        }
        return resultado;
    }

    /**
     * Returns the bind variable value for pIdOperacion.
     * @return bind variable value for pIdOperacion
     */
    public String getpIdOperacion() {
        return (String) getNamedWhereClauseParam("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(String value) {
        logger.warning("inside setpIdOperacion. " + value);
        setNamedWhereClauseParam("pIdOperacion", value);
        this.executeQuery();
        logger.warning("Numero de rows obtenidos :" + this.getRowCount());
    }
}

