package org.bcie.fenix.common.model.vo;

import java.sql.ResultSet;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;

import org.bcie.fenix.common.model.vo.common.CondicionGeneralPorValidarVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 22 16:08:10 CST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CondicionGeneralPorValidarVOImpl extends ViewObjectImpl implements CondicionGeneralPorValidarVO {
    /**
     * This is the default constructor (do not remove).
     */    
    private static ADFLogger logger = null;
    
    public CondicionGeneralPorValidarVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }


    public Boolean condicionGeneralPorValidar(Long idOperacion){
        logger.log(ADFLogger.WARNING, "INTO condicionGeneralPorValidar");
        Boolean validar = Boolean.FALSE;
        CondicionIncumplimientoVOImpl condicionIncumplimientoVOImpl = null;
        try{
            //setpIdOperacion(idOperacion); 
            logger.warning("idOperacion: " + idOperacion); 
            logger.warning("Cantidad de registros encontrados en condicionGeneralPorValidar: " + 
                           this.getEstimatedRowCount());
            if(this.getEstimatedRowCount() > 0){
                validar = Boolean.TRUE;
            }else{
                validar = Boolean.FALSE;
            }
            
        }catch(Exception e){
            logger.log(ADFLogger.WARNING, "Error en obtenerCondicionPorValidar." + e.getClass() + "." + e.getMessage());
        }
        logger.warning("Valor de retorno : " + validar);
        return validar;
    }


    /**
     * Returns the bind variable value for pIdOperacion.
     * @return bind variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) getNamedWhereClauseParam("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        setNamedWhereClauseParam("pIdOperacion", value);
    }
}

