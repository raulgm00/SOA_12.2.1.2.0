package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.NameValuePairs;
import oracle.jbo.server.ViewObjectImpl;

import static org.bcie.fenix.common.model.FenixModelConstants.BANESTATUS_TRUE;
import org.bcie.fenix.common.model.am.FenixAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 26 16:35:36 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DetalleEnmiendaTccVOImpl extends ViewObjectImpl {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public DetalleEnmiendaTccVOImpl() {
        
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void crearDetalleEnmiendaTcc(Long idOperacion, 
                                        Long idEnmienda,
                                        String instanciaProceso, 
                                        Long idTcc, 
                                        String tipoTcc, 
                                        String accion) {
        logger.log(ADFLogger.TRACE, "Inside crearDetalleEnmiendaTcc.");
        FenixAMImpl fenixAM = null;
        NameValuePairs nvpDetalleEnmiendaTcc = null;
        
        // Asignación de variables
        fenixAM = (FenixAMImpl)this.getRootApplicationModule();
        
        /* Se deshabilita la busqueda y asignacion de Id de Enmienda por Id de Operacion e Instancia de Proceso.
         * debido a que el valor debe ser obtenido del Payload.
        // Obtenemos el IdEnmiendaTcc en base al idOperacion e instanciaProceso
        Long idEnmiendaTcc = null;
        idEnmiendaTcc = fenixAM.getEnmiendaTccVO().
            getIdEnmiendaTccByOperacionInstanciaProceso(idOperacion, instanciaProceso);
        */
        
        // Insertamos registro
        if(idEnmienda != null && idTcc != null && tipoTcc != null) {
            
            nvpDetalleEnmiendaTcc = new NameValuePairs();
            nvpDetalleEnmiendaTcc.setAttribute("Accion", accion);
            nvpDetalleEnmiendaTcc.setAttribute("BanEstatus", BANESTATUS_TRUE);
            nvpDetalleEnmiendaTcc.setAttribute("IdEnmiendaTcc", idEnmienda);
            nvpDetalleEnmiendaTcc.setAttribute("IdTcc", idTcc);
            nvpDetalleEnmiendaTcc.setAttribute("TipoTcc", tipoTcc);

            this.createAndInitRow(nvpDetalleEnmiendaTcc);        
            getDBTransaction().commit();
            
            // Re-ejecutamos el query debido a que se creó un nuevo registro
            this.executeQuery();
        }
        else{
            String mensajeError = "Parámetros insuficientes para crear registro en DetalleEnmiendaTcc.";
            logger.log(ADFLogger.ERROR, mensajeError + " idOperacion: " + idOperacion + " instanciaProceso: " 
                                        + instanciaProceso + " idEnmiendaTcc: " + idEnmienda + " idTcc: " + idTcc 
                                        + " tipoTcc: " + tipoTcc + " accion: " + accion);
            JboException ex = new JboException(mensajeError);
            throw ex;
        }
    }
}

