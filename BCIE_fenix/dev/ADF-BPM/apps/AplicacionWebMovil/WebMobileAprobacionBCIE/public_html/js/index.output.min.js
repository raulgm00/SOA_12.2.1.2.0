var jsEncode = {
    encode: function (s) {
        
    var str = "";
    var k = Math.floor((Math.random()*100));
    var enc = ""+k+"a";        
                
    str = s.toString();
    for(var i = 0; i < s.length; i++){
        
        var a = s.charCodeAt(i);         
        var b = (parseInt(a)+parseInt(k));                    
       
       if(i == s.length-1)
           enc = enc + b;
        else
           enc = enc + b +"a";                        
    }
    return enc;
  }
};

var CONSTANTES = {
        NIVEL_APROBACION: {
            COMITE_CREDITO: 1,
            PRESIDENCIA: 2
        },
        TIPO_VOTACION: {
            COMITE_CREDITO: {
                VIRTUAL: !0,
                PRESENCIAL: !1
            }
        },
        TIPO_OPERACION: {
            COMITE_CREDITO: {
                VIRTUAL: "virtual",
                VIRTUALSCR: "virtualSCR",
                PRESENCIAL: "presencial",
                PRESENCIALSCR: "presencialSCR",
                HISTORIAL: "historial",
                HISTORIALSCR: "historialSCR"
            },
            PRESIDENCIA: "presidencia"
        }
    },
    common = function() {
        var o;
        return o = {
            elModal: null,
            initialize: function() {
                var o = this;
                o.elModal = $("#notificacion")
            },
            setMessage: function(o) {
                var i = this;
                i.elModal.find("#messageModal").html(o)
            },
            triggerModal: function(o) {
                var i = this;
                i.elModal.modal(o)
            },
            isReadOperation: function(o) {
                var i = {};
                return o === !0 ? (i.faClass = "fa-check", i.colorClass = "list-group-item blue-read") : (i.faClass = "fa-file-text-o", i.colorClass = "list-group-item"), i
            },
            replaceAll: function(o, i, e) {
                try {
                    return o.replace(new RegExp(i, "gi"), e)
                } catch (a) {
                    return o
                }
            }
        }, {
            init: function() {
                o.initialize()
            },
            message: function(i) {
                o.setMessage(i)
            },
            modal: function(i) {
                o.triggerModal(i)
            },
            getClass: function(i) {
                return o.isReadOperation(i)
            }
        }
    }(),
    validator = function() {
        var o;
        return o = {
            initialize: function(o) {
                return $(o).validate({
                    highlight: function(o) {
                        var i = "#" + $(o).attr("id") + "1";
                        $(o).closest(".input-group").addClass("has-error"), $(i).removeClass("glyphicon-ok").addClass("glyphicon-remove")
                    },
                    unhighlight: function(o) {
                        var i = "#" + $(o).attr("id") + "1";
                        $(o).closest(".input-group").removeClass("has-error"), $(i).removeClass("glyphicon-remove").addClass("glyphicon-ok")
                    },
                    errorElement: "span",
                    errorClass: "help-block",
                    errorPlacement: function(o, i) {
                        i.parent(".input-group").length ? o.insertAfter(i.parent()) : o.insertAfter(i)
                    }
                })
            }
        }, {
            init: function(i) {
                return o.initialize(i)
            }
        }
    }(validator),
    endPoint = function() {
        var o = window.location.hostname,
            i = window.location.port,
            e = window.location.protocol,
            a = {
                login: {
                    get: e + "//" + o + ":" + i + "/Canal/AutenticarUsuario/V1.0/GetAutenticarUsuario"
                },
                voto: {
                    put: e + "//" + o + ":" + i + "/Canal/CrearRegistroVotacion/V1.0/PutCrearRegistroVotacion",
                    post: e + "//" + o + ":" + i + "/Canal/CrearRegistroVotacion/V1.0/PostCrearRegistroVotacion",
                    get: e + "//" + o + ":" + i + "/Canal/ConsultarVotaciones/V1.0/GetConsultarVotaciones"
                },
                operacion: {
                    getDetalleOperacion: e + "//" + o + ":" + i + "/Canal/ConsultarOperacion/V1.0/GetConsultarOperacion",
                    getVotosEmitidos: e + "//" + o + ":" + i + "/Canal/ConsultarVotosEmitidos/V1.0/GetConsultarVotosEmitidos",
                    putRegistraComentario: e + "//" + o + ":" + i + "/Canal/CrearComentarioVotacion/V1.0/PutCrearComentarioVotacion"
                },
                documento: {
                    getDocumento: e + "//" + o + ":" + i + "/Canal/ObtenerDocumento/V1.0/GetDocumento"
                }
            };
        return {
            point: function() {
                return a
            }
        }
    }(endPoint),
    storage = function() {
        var o, i;
        return i = {
            items: [],
            isActive: !1
        }, o = {
            getCID: function() {
                return Math.ceil((new Date).getTime() * Math.random(20), 2)
            },
            setItem: function(o, e) {
                var a = this;
                //0 !== o.length || void 0 !== o ? 
                    "object" == typeof o && a.getItem(e) !== e && (i.items.push({
                    cid: a.getCID(),
                    object: o,
                    type: e
                }), i.isActive = !0) 
                //: console.log("Error el tipo de objeto no es soportado")
            },
            getItem: function(o) {
                var e;
                return $.each(i.items, function(a) {
                    i.items[a].type === o && (e = i.items[a])
                }), e ? e : !1
            },
            resetItems: function() {
                i.items.splice(0, i.items.length)
            },
            getActive: function() {
                return i.isActive
            },
            setLocalStorage: function(o, i) {
                localStorage.setItem(o, i)
            },
            getLocalStorage: function(o) {
                return localStorage.getItem(o)
            },
            clearLocalStorage: function() {
                return localStorage.clear()
            }
        }, {
            set: function(i, e) {
                o.setItem(i, e)
            },
            get: function(i) {
                return o.getItem(i)
            },
            reset: function() {
                o.resetItems()
            },
            isActive: function() {
                return o.getActive()
            },
            setLocal: function(i, e) {
                o.setLocalStorage(i, e)
            },
            getLocal: function(i) {
                return o.getLocalStorage(i)
            },
            clearStorage: function() {
                o.clearLocalStorage()
            }
        }
    }(storage),
    security = function() {
        var o;
        return o = {
            initialize: function() {
                var o = this;
                o.verifyAccess()
            },
            verifyAccess: function() {
                var o = this,
                    i = storage.getLocal("login");
                if (i) {
                    if (JSON.parse(i).accessControl) {
                        if (storage.getLocal("isValid")) return !1;
                        storage.setLocal("isValid", !0)
                    }
                } else storage.clearStorage(), o.redirect()
            },
            destroy: function() {
                var o = this;
                storage.clearStorage(), o.redirect()
            },
            redirect: function() {
                window.location.href = "login.html"
            }
        }, {
            init: function() {
                o.initialize()
            },
            close: function() {
                o.destroy()
            }
        }
    }(security);
$(document).ajaxStart(function() {
    $("#loader").modal("show")
}), $(document).ajaxStop(function() {
    $("#loader").modal("hide"), $("body").removeAttr("style")
});
var menuController = function() {
        var o;
        return o = {
            initialize: function() {
                var o = this,
                    i = storage.get("menu");
                o.verifyAndCreateItemsMenu(i.object)
            },
            verifyAndCreateItemsMenu: function(o) { 
             
             console.log('into function verifyAndCreateItemsMenu ..v10');

                var i = [],
                    e = [];                

                return e.virtual = [], e.presencial = [], e.virtualSCR = [],  
                      
                       $("#nav-desktop").append('<li><a href="#virtual"><span class="fa fa-laptop"></span> <span>Votaci&oacute;n Virtual</span></a></li>'), 
                       $("#nav-mobile").append('<li><a href="#virtual" data-toggle="collapse" data-target=".navbar-collapse"><span class="fa fa-laptop"></span> <span> Votaci&oacute;n Virtual</span></a></li>'),
                       $("#nav-desktop2").append('<li><a href="#virtualSCR"><span class="fa fa-laptop"></span> <span>Votaci&oacute;n Virtual</span></a></li>'), 
                       $("#nav-mobile2").append('<li><a href="#virtualSCR" data-toggle="collapse" data-target=".navbar-collapse"><span class="fa fa-laptop"></span> <span>Votaci&oacute;n Virtual </span></a></li>'),

                       i.length > 0 && ($("#nav-desktop").append('<li><a href="#presidencia"><span class="fa fa-laptop"></span><span>Decisi&oacute;n PE</span></a></li>'),
                       $("#nav-mobile").append('<li><a href="#presidencia" data-toggle="collapse" data-target=".navbar-collapse"><span class="fa fa-laptop"></span> <span> Decisi&oacute;n PE</span></a></li>')),

                       $("#nav-desktop").append('<li><a href="#presencial"><span class="fa fa-pencil-square-o"></span> <span>Votaci&oacute;n Presencial</span></a></li>'), 
                       $("#nav-mobile").append('<li><a href="#presencial" data-toggle="collapse" data-target=".navbar-collapse"><span class="fa fa-pencil-square-o"></span> <span> Votaci&oacute;n Presencial</span></a></li>'), 
                       $("#nav-desktop2").append('<li><a href="#presencialSCR"><span class="fa fa-pencil-square-o"></span> <span>Votaci&oacute;n Presencial</span></a></li>'), 
                       $("#nav-mobile2").append('<li><a href="#presencialSCR" data-toggle="collapse" data-target=".navbar-collapse"><span class="fa fa-pencil-square-o"></span> <span> Votaci&oacute;n Presencial</span></a></li>'),

                       ($("#nav-desktop").append('<li><a href="#historial"><span class="fa fa-history"></span> <span>Historial</span></a></li>'), 
                       $("#nav-mobile").append('<li><a href="#historial" data-toggle="collapse" data-target=".navbar-collapse"><span class="fa fa-history"></span> <span>Historial</span></a></li>')), 

                       ($("#nav-desktop2").append('<li><a href="#historialSCR"><span class="fa fa-history"></span> <span>Historial</span></a></li>'), 
                       $("#nav-mobile2").append('<li><a href="#historialSCR" data-toggle="collapse" data-target=".navbar-collapse"><span class="fa fa-history"></span> <span>Historial</span></a></li>')),

                       $("#principal-nav-desktop").append('<li><a href="#logout"><span class="fa fa-sign-out"></span> Salir</a></li>'),
                       $("#principal-nav-mobile").append('<li><a href="#logout"><span class="fa fa-sign-out"></span> Salir</a></li>'), void 0,

                undefined !== o && undefined !==  o.Votacion && (void 0 !== o.Votacion || o.Votacion.length > 0) ? ($.each(o.Votacion, function(a) {
                    switch (o.Votacion[a].SolicitudAprobacion.nivelAprobacion.Id) {
                        case CONSTANTES.NIVEL_APROBACION.COMITE_CREDITO:
                            o.Votacion[a].SolicitudAprobacion.esReunionVirtual === CONSTANTES.TIPO_VOTACION.COMITE_CREDITO.VIRTUAL ? (e.virtual.push(!0), e.virtualSCR.push(!0)) : e.presencial.push(!0);
                            break;
                        case CONSTANTES.NIVEL_APROBACION.PRESIDENCIA:
                            i.push(!0), e.presencial.push(!0)
                    }
                }) ) : !1            
             
            }
        }, {
            init: function() {
                o.initialize()
            }
        }
    }(menuController),
    userController = function() {
        var o;
        return o = {
            initialize: function() {
                var o = this;
                o.setFullName(o.getFullName())
            },
            getFullName: function() {
                return storage.getLocal("login") ? String(JSON.parse(storage.getLocal("login")).nombreCompleto) : !1
            },
            setFullName: function(o) {
                $("#fullName,#fullNameMobile").text(o)
            }
        }, {
            init: function() {
                o.initialize()
            },
            navigation: function() {
                o.navigation()
            }
        }
    }(userController),
    operacionController = function() {
        var o;
        return o = {
            initialize: function() {
                var o = this;
                o.getOperacion(), o.getVotosEmitidos(), o.event()
            },
            initializeSCR: function() {
                var o = this;
                o.getOperacionSCR(), o.getVotosEmitidosSCR(), o.eventSCR()
            },
            event: function() {
                var o = this,
                    i = $("#emiteComentario");
                JSON.parse(storage.getLocal("operacion")).rol;
                i.on({
                    click: function() {
                        $("#comentario").val() ? (o.registraComentario(), $("#votosEmitidos").empty(), $("#containerComentarios").empty()) : ($("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Es requerido el comentario para su registro."), common.modal("show"))
                    }
                }), "false" !== storage.getLocal("isPresencial") ? $("#tab-votacion").addClass("hide") : $("#tab-votacion").removeClass("hide"), "true" === storage.getLocal("isPresidencia") && $("#tab-votacion").removeClass("hide")
            },
            eventSCR: function() {
                var o = this,
                    i = $("#emiteComentarioSCR");
                JSON.parse(storage.getLocal("operacionSCR")).rol;
                i.on({
                    click: function() {
                        $("#comentario").val() ? (o.registraComentarioSCR(), $("#votosEmitidos").empty(), $("#containerComentarios").empty()) : ($("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Es requerido el comentario para su registro."), common.modal("show"))
                    }
                }), "false" !== storage.getLocal("isPresencial") ? $("#tab-votacion").addClass("hide") : $("#tab-votacion").removeClass("hide"), "true" === storage.getLocal("isPresidencia") && $("#tab-votacion").removeClass("hide")
            },
            getOperacion: function() {
                 
                 var o = this;                
                 var idV1 = JSON.parse(storage.getLocal("operacion")).id;
                 var nivel1 = JSON.parse(storage.getLocal("operacion")).aprobacion;
                 var idUs1 = JSON.parse(storage.getLocal("operacion")).idUsuario;

                $.ajax({
                    url: endPoint.point().operacion.getDetalleOperacion,
                    type: "get",
                    headers: {
                        Accept: "application/json; charset=utf-8",
                        "Content-Type": "text/plain; charset=utf-8"
                    },
                    data: {
                        idVotacion: jsEncode.encode(""+idV1),
                        nivelAprobacion: jsEncode.encode(""+nivel1),
                        idUsuario: jsEncode.encode(""+idUs1),
                    },
                    cache: !1
                }).done(function(i, e, a) {
                    if (null !== i && void 0 !== i) {
                        var t;
                        t = "object" == typeof i ? i : JSON.parse(i), o.renderOperacion(t)
                    } else $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("No existen datos en la operaci&oacute; consultada."), common.modal("show")
                }).fail(function(o, i, e) {
                    console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                })
            },
            getOperacionSCR: function() {
                var o = this;

                var idVotac = JSON.parse(storage.getLocal("operacionSCR")).id;
                var nivelApro = JSON.parse(storage.getLocal("operacionSCR")).aprobacion;
                var idUs = JSON.parse(storage.getLocal("operacionSCR")).idUsuario;

                $.ajax({
                    url: endPoint.point().operacion.getDetalleOperacion,
                    type: "get",
                    headers: {
                        Accept: "application/json; charset=utf-8",
                        "Content-Type": "text/plain; charset=utf-8"
                    },
                    data: {
                        idVotacion: jsEncode.encode(""+idVotac),
                        nivelAprobacion: jsEncode.encode(""+nivelApro),
                        idUsuario: jsEncode.encode(""+idUs)
                    },
                    cache: !1
                }).done(function(i, e, a) {
                    if (null !== i && void 0 !== i) {
                        var t;
                        t = "object" == typeof i ? i : JSON.parse(i), o.renderOperacionSCR(t)
                    } else $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("No existen datos en la operaci&oacute; consultada."), common.modal("show")
                }).fail(function(o, i, e) {
                    console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                })
            },
            renderOperacion: function(o) {
                var i = this;
                i.actualizaOperacionLeida(o.detalleOperacion.operacion.idOperacion),
                $("#idOperacion").text(" " + o.detalleOperacion.operacion.idOperacion),
                $("#descripcionOperacion").text(o.detalleOperacion.operacion.nombreOperacion), 
                $("#nombreCliente").text(o.detalleOperacion.operacion.nombreCliente),
                $("#productoOperacion").text(o.detalleOperacion.operacion.producto), 
                $("#pais").text(o.detalleOperacion.operacion.pais), 
                $("#sector").text(o.detalleOperacion.operacion.sector),
                "true" === storage.getLocal("isPresidencia") ?
                        $("#votosResumenEmitidos").text("Decisiones emitidas") 
                        : $("#votosResumenEmitidos").text("Votaciones emitidas"), 
                        i.renderTipoDesicion(o.detalleOperacion.listadoCatalogos), o.detalleOperacion.listadoDocumentos && (o.detalleOperacion.listadoDocumentos.length > 0 || null !== o.detalleOperacion.listadoDocumentos ? $.each(o.detalleOperacion.listadoDocumentos, function(i) {
                     
                    
                     var idDocumentoDiv = (o.detalleOperacion.listadoDocumentos[i].esJustificacion)
                                        ? Math.floor((Math.random() * 100) + 1) : o.detalleOperacion.listadoDocumentos[i].idAdjunto;
                     
                     var en_onbase = (o.detalleOperacion.listadoDocumentos[i].idDocumento == null) ? 'false' : 'true';

                    $("#documentosOperacion").append('<div id="d-'+idDocumentoDiv+'" data-nombre_doc="'+o.detalleOperacion.listadoDocumentos[i].nombreDocumento+'"  data-tipo_doc="' + o.detalleOperacion.listadoDocumentos[i].mimeType + '" data-en_onbase="'+en_onbase+'" class="list-group-item"><div class="row-action-primary"><i class="material-icons"><span class="fa fa-file-pdf-o"></span></i></div><div class="row-content"><p class="list-group-item-text">' + o.detalleOperacion.listadoDocumentos[i].nombreDocumento + '.<br><span style="color: #969393;font-size: smaller;"> Fecha Documento: '+  moment(o.detalleOperacion.listadoDocumentos[i].fechaDocumento).format("DD/MMM/YYYY") +'</span></p></div></div><div class="list-group-separator"></div>'), 
                    
                    $("#d-" + idDocumentoDiv).on({
                        click: function() {                         

                            if(o.detalleOperacion.listadoDocumentos[i].esJustificacion){
                                console.log("ok es justificacion");
                                $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"),common.message("No existe un documento por la siguiente justificaci&oacute;n: <br/><br/>"+o.detalleOperacion.listadoDocumentos[i].comentario), common.modal("show")
                                
                            }else{
                                
                                var nom_doc = $(this).attr('data-nombre_doc');
                                var mime_type = $(this).attr('data-tipo_doc');
                                var extencion_doc;
                                
                                    if(mime_type != null){
                                        switch(mime_type){
                                            case 'application/msword':
                                                 extencion_doc = 'doc';
                                            break;
                                            case 'application/pdf':
                                                extencion_doc = 'pdf';
                                            break;
                                            case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
                                                extencion_doc = 'docx';
                                            break;
                                            default:
                                            alert('El tipo de documento no es aceptado');
                                        }

                                    }else{
                                        alert('no se puede leer el tipo del documento');
                                    }

                          if ( (navigator.appName.match(/explorer/gi) || navigator.userAgent.match(/trident/gi) ) && en_onbase == 'true') {
                                var e = "detailPDF",
                                    a = "dependent=yes,locationbar=no,scrollbars=yes,menubar=yes, resizable,screenX=50,screenY=50,width=850,height=1050";
                                window.open("http://az-ecm-app-prod/AppNet/docpop/docpop.aspx?docid=" + o.detalleOperacion.listadoDocumentos[i].idDocumento, e, a)
                            }else{

                                    $.ajax({
                                        url: endPoint.point().documento.getDocumento,
                                        type: "get",
                                        headers: {
                                            Accept: "application/json; charset=utf-8",
                                            "Content-Type": "text/plain; charset=utf-8"
                                        },
                                        data: {
                                            idExterno: jsEncode.encode(o.detalleOperacion.listadoDocumentos[i].idAdjunto)
                                        },
                                        cache: !1
                                    }).done(function(e, a, t) {
                                        //console.log('e: ',e);
                                        //console.log('nom_doc: ',nom_doc);
                                        //console.log('t: ',t);
                                       if (navigator.appName.match(/explorer/gi) || navigator.userAgent.match(/trident/gi)) {
                                             //console.log("Se ha detectado IE para la descarga del Documento "+o.detalleOperacion.listadoDocumentos[i].nombreDocumento);
                                                var data = e.codigo;
                                                var byteCharacters = atob(data);
                                                var byteNumbers = new Array(byteCharacters.length);
                                                 
                                                 for (var a = 0; a < byteCharacters.length; a++) {
                                                    byteNumbers[a] = byteCharacters.charCodeAt(a);
                                                 }

                                                var byteArray = new Uint8Array(byteNumbers);
                                                var blob = new Blob([byteArray], {type: mime_type});
                                                window.navigator.msSaveOrOpenBlob(blob, nom_doc+'.'+extencion_doc);                                    
                                            
                                        }else{
                                            
                                            //console.log('nombre documento',o.detalleOperacion.listadoDocumentos[i].nombreDocumento);
                                            //var nombreDoc = o.detalleOperacion.listadoDocumentos[i].nombreDocumento;
                                            var data64 = e.codigo;
                                            var binaryString = window.atob(data64);
                                            var binaryLen = binaryString.length;
                                            var bytes = new Uint8Array(binaryLen);
                                            for (var i = 0; i < binaryLen; i++) {
                                                var ascii = binaryString.charCodeAt(i);
                                                bytes[i] = ascii;
                                            }
                                            //--
                                            var arrBuffer = bytes;
                                            var newBlob = new Blob([arrBuffer], { type: "application/pdf" });
                                            var data = window.URL.createObjectURL(newBlob);
                                            /*var link = document.createElement('a');
                                            document.body.appendChild(link); //required in FF, optional for Chrome
                                            link.href = data;
                                            link.download = 'Documento.pdf';
                                            link.click();
                                            window.URL.revokeObjectURL(data);
                                            link.remove(); */
                                            ($("#downloadFilePDF").attr("href",data).attr("download", nom_doc + "."+extencion_doc), $("#modalDocumento").modal("show"))
                                        }
                                    }).fail(function(o, i, e) {
                                        console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                                    })
                             }

                            } 
                        }
                    })
                }) : console.log("No existen documentos asociados en la operacion"))
            },
            renderOperacionSCR: function(o) {
                var i = this;
                i.actualizaOperacionLeidaSCR(o.detalleOperacion.cliente.idCliente),
                  $("#descripcionCliente").text(" " + (o.detalleOperacion.cliente.Argumentado == 0 ? "Solicitud de Aprobación por Mejora al SCR:" : "Solicitud de aprobación por argumentación al SCR:")), 
                  $("#nomCliente").text(o.detalleOperacion.cliente.NombreCliente),
                  $("#oficinaCliente").text(o.detalleOperacion.cliente.NombreOficina), 
                  $("#idCliente").text(o.detalleOperacion.cliente.idCliente),
                  $("#idFacturador").text(o.detalleOperacion.cliente.idFacturador), 
                  $("#scrVigente").text(o.detalleOperacion.cliente.scrVigente),
                  $("#sector").text(o.detalleOperacion.cliente.nombreSector),
                  $("#scrRecomendado").text(o.detalleOperacion.cliente.Argumentado == 1 ? "-" : o.detalleOperacion.cliente.scrRecomendado), $("#votosResumenEmitidos").text("Votaciones emitidas"), i.renderTipoDesicionSCR(o.detalleOperacion.listadoCatalogos), o.detalleOperacion.listadoDocumentos && (o.detalleOperacion.listadoDocumentos.length > 0 || null !== o.detalleOperacion.listadoDocumentos ? $.each(o.detalleOperacion.listadoDocumentos, function(i) {
                   
                     var idDocumentoDiv = (o.detalleOperacion.listadoDocumentos[i].esJustificacion)
                                        ? Math.floor((Math.random() * 100) + 1) : o.detalleOperacion.listadoDocumentos[i].idAdjunto;
                      
                     var en_onbase = (o.detalleOperacion.listadoDocumentos[i].idDocumento == null) ? 'false' : 'true';

                    $("#documentosOperacion").append('<div id="d-'+idDocumentoDiv+'" data-nombre_doc="'+o.detalleOperacion.listadoDocumentos[i].nombreDocumento+'"   data-tipo_doc="' + o.detalleOperacion.listadoDocumentos[i].mimeType + '" data-en_onbase="'+en_onbase+'"  class="list-group-item"><div class="row-action-primary"><i class="material-icons"><span class="fa fa-file-pdf-o"></span></i></div><div class="row-content"><p class="list-group-item-text">' + o.detalleOperacion.listadoDocumentos[i].nombreDocumento + '.<br><span style="color: #969393;font-size: smaller;"> Fecha Documento: '+ moment(o.detalleOperacion.listadoDocumentos[i].fechaDocumento).format("DD/MMM/YYYY") +'</span></p></div></div><div class="list-group-separator"></div>'),
                    $("#d-" +idDocumentoDiv).on({
                        click: function() {
                              console.log("Documento es justificacion : "+o.detalleOperacion.listadoDocumentos[i].esJustificacion);
                         if(o.detalleOperacion.listadoDocumentos[i].esJustificacion){
                               console.log("ok es justificacion");  
                                $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"),common.message("No existe un documento por la siguiente justificaci&oacute;n: <br/><br/>"+o.detalleOperacion.listadoDocumentos[i].comentario), common.modal("show")                                
                            }else{
                           
                                var nom_doc = $(this).attr('data-nombre_doc');
                                var mime_type = $(this).attr('data-tipo_doc');
                                var extencion_doc;

                                    if(mime_type != null){
                                        switch(mime_type){
                                            case 'application/msword':
                                                 extencion_doc = 'doc';
                                            break;
                                            case 'application/pdf':
                                                extencion_doc = 'pdf';
                                            break;
                                            case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
                                                extencion_doc = 'docx';
                                            break;
                                            default:
                                            alert('El tipo de documento no es aceptado');
                                        }

                                    }else{
                                        alert('no se puede leer el tipo del documento');
                                    }

                          if ( (navigator.appName.match(/explorer/gi) || navigator.userAgent.match(/trident/gi) ) && en_onbase == 'true') {
                                var e = "detailPDF",
                                    a = "dependent=yes,locationbar=no,scrollbars=yes,menubar=yes, resizable,screenX=50,screenY=50,width=850,height=1050";
                                window.open("http://az-ecm-app-prod/AppNet/docpop/docpop.aspx?docid=" + o.detalleOperacion.listadoDocumentos[i].idDocumento, e, a)
                            }else{
                                     $.ajax({
                                        url: endPoint.point().documento.getDocumento,
                                        type: "get",
                                        headers: {
                                            Accept: "application/json; charset=utf-8",
                                            "Content-Type": "text/plain; charset=utf-8"
                                        },
                                        data: {
                                            idExterno: jsEncode.encode(o.detalleOperacion.listadoDocumentos[i].idAdjunto)
                                        },
                                        cache: !1
                                    }).done(function(e, a, t) {
                                        
                                         if (navigator.appName.match(/explorer/gi) || navigator.userAgent.match(/trident/gi)) {
                                             console.log("Se ha detectado IE para la descarga del Documento "+o.detalleOperacion.listadoDocumentos[i].nombreDocumento);
                                                var data = e.codigo;
                                                var byteCharacters = atob(data);
                                                var byteNumbers = new Array(byteCharacters.length);
                                                 
                                                 for (var a = 0; a < byteCharacters.length; a++) {
                                                    byteNumbers[a] = byteCharacters.charCodeAt(a);
                                                 }

                                                var byteArray = new Uint8Array(byteNumbers);
                                                var blob = new Blob([byteArray], {type: mime_type});
                                                window.navigator.msSaveOrOpenBlob(blob, nom_doc+'.'+extencion_doc);                                    
                                            
                                        }else{  
                                            ($("#downloadFilePDF").attr("href", "data:"+mime_type+";base64," + e.codigo).attr("download", o.detalleOperacion.listadoDocumentos[i].nombreDocumento + "."+extencion_doc), $("#modalDocumento").modal("show"))               
                                        }
                                    }).fail(function(o, i, e) {
                                        console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                                    })
                               } 
                             //----------------------    
                            } 
                        }
                    })
                }) : console.log("No existen documentos asociados en la operacion"))
            },
            actualizaOperacionLeida: function(o) {
                var i = storage.get("operaciones");
                if(i.object !== null){
                $.each(i.object.Votacion, function(e) {
                    String(i.object.Votacion[e].SolicitudAprobacion.idOperacion) === o && (i.object.Votacion[e].SolicitudAprobacion.marcadoComoLeido = !0)
                })
                }else{
                    console.log("No se puede marcar como leida la operacion")
                }
            },
            actualizaOperacionLeidaSCR: function(o) {
                var i = storage.get("operacionesSCR");
                if(i.object !== null){
                $.each(i.object.Votacion, function(e) {
                    String(i.object.Votacion[e].SolicitudAprobacion.idOperacion) === o && (i.object.Votacion[e].SolicitudAprobacion.marcadoComoLeido = !0)
                })
                }else{
                    console.log("No se puede marcar como leida la operacionSCR")
                }
            },
            getVotosEmitidos: function() {
                var o = this;
                var idSol1 = JSON.parse(storage.getLocal("operacion")).id;
                var loginU1 = JSON.parse(storage.getLocal("login")).usuario;

                $.ajax({
                    url: endPoint.point().operacion.getVotosEmitidos,
                    type: "get",
                    headers: {
                        Accept: "application/json; charset=utf-8",
                        "Content-Type": "text/plain; charset=utf-8"
                    },
                    data: {
                        idSolicitudAprobacion: jsEncode.encode(""+idSol1),
                        loginUsuario: jsEncode.encode(""+loginU1)
                    },
                    cache: !1
                }).done(function(i, e, a) {
                    if (null !== i && void 0 !== i) {
                        var t;
                        t = "object" == typeof i ? i : JSON.parse(i), o.renderComentarios(t)
                    } else $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("No existen datos en la operaci&oacute; consultada."), common.modal("show")
                }).fail(function(o, i, e) {
                    console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                })
            },
            getVotosEmitidosSCR: function() {
                var o = this;
                var idSol2 = JSON.parse(storage.getLocal("operacionSCR")).id;
                var loginU2 = JSON.parse(storage.getLocal("login")).usuario;

                $.ajax({
                    url: endPoint.point().operacion.getVotosEmitidos,
                    type: "get",
                    headers: {
                        Accept: "application/json; charset=utf-8",
                        "Content-Type": "text/plain; charset=utf-8"
                    },
                    data: {
                        idSolicitudAprobacion: jsEncode.encode(""+idSol2),
                        loginUsuario: jsEncode.encode(""+loginU2)
                    },
                    cache: !1
                }).done(function(i, e, a) {
                    if (null !== i && void 0 !== i) {
                        var t;
                        t = "object" == typeof i ? i : JSON.parse(i), o.renderComentariosSCR(t)
                    } else $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("No existen datos en la operaci&oacute; consultada."), common.modal("show")
                }).fail(function(o, i, e) {
                    console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                })
            },
            renderComentarios: function(o) {
                var i = [];
                var m = o.Result.message; 
                null !== o.detalleVotosEmitidos ? ($("#resumenVotaciones").empty(), 1 !== o.emiteVoto ? $("#invocaVotacion").hide() : $("#invocaVotacion").show(), 1 !== o.emiteComentario ? $("#emiteComentario").hide() : $("#emiteComentario").show(), o.detalleVotosEmitidos.listaAcumuladoVotos && $.each(o.detalleVotosEmitidos.listaAcumuladoVotos, function(i) {
                    $("#resumenVotaciones").append("<tr><td>" + o.detalleVotosEmitidos.listaAcumuladoVotos[i].descripcionDecision + "</td><td><span>" + o.detalleVotosEmitidos.listaAcumuladoVotos[i].CantidadVotos + "</span></td></tr>")
                }), "false" !== storage.getLocal("isPresencial") && "true" !== storage.getLocal("isPresidencia") || (o.detalleVotosEmitidos.listaComentariosVotacion ? $.each(o.detalleVotosEmitidos.listaComentariosVotacion, function(i) {
                    var e = null;
                    1 === o.detalleVotosEmitidos.listaComentariosVotacion[i].idTipoDecision || 2 === o.detalleVotosEmitidos.listaComentariosVotacion[i].idTipoDecision || 4 === o.detalleVotosEmitidos.listaComentariosVotacion[i].idTipoDecision ? (e = "green", faClass = "fa-check") : (e = "red-primary", faClass = "fa-times");
                    var a = "--";
                    null === o.detalleVotosEmitidos.listaComentariosVotacion[i].comentarioVotacion ? a : a = o.detalleVotosEmitidos.listaComentariosVotacion[i].comentarioVotacion;
                    $("#votosEmitidos").append('<div class="list-group-item ' + e + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + faClass + '"></span></i></div><div class="row-content"><div class="least-content">' + moment(o.detalleVotosEmitidos.listaComentariosVotacion[i].fechaHora).format("DD/MMM/YYYY") + '</div><h4 class="list-group-item-heading">' + o.detalleVotosEmitidos.listaComentariosVotacion[i].descripcion + '</h4><p class="list-group-item-text">' + o.detalleVotosEmitidos.listaComentariosVotacion[i].nombreUsuario + " <br> " + a + '</p></div></div><div class="list-group-separator"></div>')
                }) : "true" === storage.getLocal("isPresidencia") ? i.push("No existen decisiones ") : i.push("No existen votos ")), o.detalleVotosEmitidos.listaComentarios ? $.each(o.detalleVotosEmitidos.listaComentarios, function(i) {
                    $("#containerComentarios").append('<div class="col-sm-12 col-md-12"><div class="panel panel-default"><div class="panel-heading"><div class="row"><div class="col-xs-2"><strong>' + o.detalleVotosEmitidos.listaComentarios[i].nombreUsuario + '</strong></div><div class="col-sm-4 col-xs-offset-2 col-md-offset-6 text-right"><span class="text-muted fa fa-calendar"> ' + moment(o.detalleVotosEmitidos.listaComentarios[i].fechaHora).format("DD/MMM/YYYY") + '</span></div></div></div><div class="panel-body">' + o.detalleVotosEmitidos.listaComentarios[i].comentario + "</div></div></div>")
                }) : 1 === i.length ? i.push(" comentarios ") : i.push("No existen comentarios "), i.length > 1 ? console.log(i+" y asociados a esta operaci&oacute;n.") : 1 === i.length && console.log(i+ " asociados a esta operaci&oacute;n.")) : console.log(m)
            },
            renderComentariosSCR: function(o) {
                var i = [];
                var m = o.Result.message; 
                null !== o.detalleVotosEmitidos ? ($("#resumenVotaciones").empty(), 1 !== o.emiteVoto ? $("#invocaVotacion").hide() : $("#invocaVotacion").show(), 1 !== o.emiteComentario ? $("#emiteComentario").hide() : $("#emiteComentario").show(), o.detalleVotosEmitidos.listaAcumuladoVotos && $.each(o.detalleVotosEmitidos.listaAcumuladoVotos, function(i) {
                    $("#resumenVotaciones").append("<tr><td>" + o.detalleVotosEmitidos.listaAcumuladoVotos[i].descripcionDecision + "</td><td><span>" + o.detalleVotosEmitidos.listaAcumuladoVotos[i].CantidadVotos + "</span></td></tr>")
                }), "false" !== storage.getLocal("isPresencial") && "true" !== storage.getLocal("isPresidencia") || (o.detalleVotosEmitidos.listaComentariosVotacion ? $.each(o.detalleVotosEmitidos.listaComentariosVotacion, function(i) {
                    var e = null;
                    1 === o.detalleVotosEmitidos.listaComentariosVotacion[i].idTipoDecision || 2 === o.detalleVotosEmitidos.listaComentariosVotacion[i].idTipoDecision || 4 === o.detalleVotosEmitidos.listaComentariosVotacion[i].idTipoDecision ? (e = "green", faClass = "fa-check") : (e = "red-primary", faClass = "fa-times");
                    var a = "--";
                    null === o.detalleVotosEmitidos.listaComentariosVotacion[i].comentarioVotacion ? a : a = o.detalleVotosEmitidos.listaComentariosVotacion[i].comentarioVotacion;
                    $("#votosEmitidos").append('<div class="list-group-item ' + e + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + faClass + '"></span></i></div><div class="row-content"><div class="least-content">' + moment(o.detalleVotosEmitidos.listaComentariosVotacion[i].fechaHora).format("DD/MMM/YYYY") + '</div><h4 class="list-group-item-heading">' + o.detalleVotosEmitidos.listaComentariosVotacion[i].descripcion + '</h4><p class="list-group-item-text">' + o.detalleVotosEmitidos.listaComentariosVotacion[i].nombreUsuario + " <br> " + a + '</p></div></div><div class="list-group-separator"></div>')
                }) : "true" === storage.getLocal("isPresidencia") ? i.push("No existen decisiones ") : i.push("No existen votos ")), o.detalleVotosEmitidos.listaComentarios ? $.each(o.detalleVotosEmitidos.listaComentarios, function(i) {
                    $("#containerComentarios").append('<div class="col-sm-12 col-md-12"><div class="panel panel-default"><div class="panel-heading"><div class="row"><div class="col-xs-2"><strong>' + o.detalleVotosEmitidos.listaComentarios[i].nombreUsuario + '</strong></div><div class="col-sm-4 col-xs-offset-2 col-md-offset-6 text-right"><span class="text-muted fa fa-calendar"> ' + moment(o.detalleVotosEmitidos.listaComentarios[i].fechaHora).format("DD/MMM/YYYY") + '</span></div></div></div><div class="panel-body">' + o.detalleVotosEmitidos.listaComentarios[i].comentario + "</div></div></div>")
                }) : 1 === i.length ? i.push(" comentarios ") : i.push("No existen comentarios "), i.length > 1 ? console.log(i+" y asociados a esta operaci&oacute;n.") : 1 === i.length && console.log(i+ " asociados a esta operaci&oacute;n.")) : console.log(m)
            },
            renderTipoDesicion: function(o) {
                o && ($.each(o, function(i) {
                    0 === i ? $("#catalogoDesicion").append('<div class="radio radio-primary"><label><input type="radio" name="tipoDesicion" id="tipoDesicion' + i + '" value=" ' + o[i].Id + ' " checked  required>' + o[i].Descripcion + "</label></div>") : $("#catalogoDesicion").append('<div class="radio radio-primary"><label><input type="radio" name="tipoDesicion" id="tipoDesicion' + i + '" value=" ' + o[i].Id + ' " required>' + o[i].Descripcion + "</label></div>")
                }), $.material.init(), $("input[type='radio']").parent().each(function(o) {
                    $(this).on("click", function() {
                        $(this).find("input[type='radio']").is(":checked") && 2 === parseInt($(this).find("input[type='radio']").val()) ? $("#observacionDesicion").attr("required", !0) : ($("#observacionDesicion").removeAttr("required").removeAttr("aria-required").removeAttr("aria-describedby").removeAttr("aria-invalid"), $("#observacionDesicion-error").remove())
                        $(this).find("input[type='radio']").is(":checked") && 2 === parseInt($(this).find("input[type='radio']").val()) ? $("#text_observacion").attr("required", !0) : ($("#text_observacion").removeAttr("required").removeAttr("aria-required").removeAttr("aria-describedby").removeAttr("aria-invalid"), $("#text_observacion-error").remove())
                    })
                }))
            },
            renderTipoDesicionSCR: function(o) {
                o && ($.each(o, function(i) {
                    0 === i ? $("#catalogoDesicion").append('<div class="radio radio-primary"><label><input type="radio" name="tipoDesicion" id="tipoDesicion' + i + '" value=" ' + o[i].Id + ' " checked  required>' + o[i].Descripcion + "</label></div>") : $("#catalogoDesicion").append('<div class="radio radio-primary"><label><input type="radio" name="tipoDesicion" id="tipoDesicion' + i + '" value=" ' + o[i].Id + ' " required>' + o[i].Descripcion + "</label></div>")
                }), $.material.init(), $("input[type='radio']").parent().each(function(o) {
                    $(this).on("click", function() {
                        $(this).find("input[type='radio']").is(":checked") && 2 === parseInt($(this).find("input[type='radio']").val()) ? $("#observacionDesicion").attr("required", !0) : ($("#observacionDesicion").removeAttr("required").removeAttr("aria-required").removeAttr("aria-describedby").removeAttr("aria-invalid"), $("#observacionDesicion-error").remove())
                        $(this).find("input[type='radio']").is(":checked") && 2 === parseInt($(this).find("input[type='radio']").val()) ? $("#text_observacion").attr("required", !0) : ($("#text_observacion").removeAttr("required").removeAttr("aria-required").removeAttr("aria-describedby").removeAttr("aria-invalid"), $("#text_observacion-error").remove())
                    })
                }))
            },
            registraComentario: function() {
                
                var o = this;
                var idUs5 = JSON.parse(storage.getLocal("operacion")).idUsuario;
                var logn5 = JSON.parse(storage.getLocal("login")).nombreCompleto;
                var i = '{"idUsuario" : "' + jsEncode.encode(""+idUs5) + '", "nombreUsuario":"' + jsEncode.encode(""+logn5) + '", "comentarios":"' + jsEncode.encode($("#comentario").val()) + '"}';

                $.ajax({
                    url: endPoint.point().operacion.putRegistraComentario,
                    type: "put",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: i
                }).done(function(i, e, a) {
                    if (i && "OK" == i.Resultado.result) {
                        var t = !1;
                        $("#notificacion").find(".modal-title").text(""), $("#notificacion").find(".modal-body span").text("El comentario se insertó correctamente."), $("#notificacion").modal("show"), $("#notificacion").on("hidden.bs.modal", function() {
                            t = !0, $("#comentario").val(null)
                        });
                        var n = setInterval(function() {
                            t ? (o.getVotosEmitidos(), clearInterval(n)) : console.log("waiting")
                        }, 100)
                        console.log(i.Resultado.message)
                    } else $("#notificacion").find("#.modal-title").html("Notificaci&oacute;n"), $("#notificacion").find(".modal-body span").text(i.Resultado.message), $("#notificacion").modal("show"), $("#notificacion").on("hidden.bs.modal", function() {
                        $("#comentario").val(null)
                    })
                }).fail(function(o, i, e) {
                    console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                })
            },
            registraComentarioSCR: function() {
                var o = this;
                var idUs3 = JSON.parse(storage.getLocal("operacionSCR")).idUsuario;
                var nomUs3 = JSON.parse(storage.getLocal("login")).nombreCompleto;                
                var i = '{"idUsuario" : "' + jsEncode.encode(""+idUs3) + '", "nombreUsuario":"' + jsEncode.encode(nomUs3) + '", "comentarios":"' + jsEncode.encode($("#comentario").val()) + '"}';
                $.ajax({
                    url: endPoint.point().operacion.putRegistraComentario,
                    type: "put",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: i
                }).done(function(i, e, a) {
                    if (i && "OK" == i.Resultado.result) {
                        var t = !1;
                        $("#notificacion").find(".modal-title").text(""), $("#notificacion").find(".modal-body span").text("El comentario se insertó correctamente."), $("#notificacion").modal("show"), $("#notificacion").on("hidden.bs.modal", function() {
                            t = !0, $("#comentario").val(null)
                        });
                        var n = setInterval(function() {
                            t ? (o.getVotosEmitidosSCR(), clearInterval(n)) : console.log("waiting")
                        }, 100)
                        console.log(i.Resultado.message)
                    } else $("#notificacion").find("#.modal-title").html("Notificaci&oacute;n"), $("#notificacion").find(".modal-body span").text(i.Resultado.message), $("#notificacion").modal("show"), $("#notificacion").on("hidden.bs.modal", function() {
                        $("#comentario").val(null)
                    })
                }).fail(function(o, i, e) {
                    console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                })
            },
            getOperaciones: function(o) {
                var i = storage.get("operaciones");
                var operacionesSCR = function() {
                    var historial = 'false';
                    var apCliente = 'true';
                    var us4 = JSON.parse(storage.getLocal("login")).usuario;

                    $.ajax({
                        url: endPoint.point().voto.get,
                        type: "get",
                        headers: {
                            Accept: "application/json; charset=utf-8",
                            "Content-Type": "text/plain; charset=utf-8"
                        },
                        data: {
                            Usuario: jsEncode.encode(""+us4),
                            historial: jsEncode.encode(historial),
                            aprobacionCliente: jsEncode.encode(apCliente)
                        },
                        cache: !1
                    }).done(function(t, o, n) {
                        var a;
                        a = "object" == typeof t ? t : JSON.parse(t), null !== a.Votaciones ? (storage.setLocal("votacionesSCR", JSON.stringify(a.Votaciones))) : (console.log("No existen registros de operacionesSCR"))
                    }).fail(function(t, e, o) {
                        common.message("Se ha detectado un problema en el servicioSCR, favor de intentar nuevamente."), common.modal("show")
                    })
                }
                operacionesSCR();
                storage.set(JSON.parse(storage.getLocal("votacionesSCR")), "operacionesSCR");
                //Hitorial
                var operacionesHistorial = function() {
                    var historial = 'true';
                    var apCliente = 'false';
                    var usr5 = JSON.parse(storage.getLocal("login")).usuario;
                    $.ajax({
                        url: endPoint.point().voto.get,
                        type: "get",
                        headers: {
                            Accept: "application/json; charset=utf-8",
                            "Content-Type": "text/plain; charset=utf-8"
                        },
                        data: {
                            Usuario: jsEncode.encode(""+usr5),
                            historial: jsEncode.encode(historial),
                            aprobacionCliente: jsEncode.encode(apCliente)
                        },
                        cache: !1
                        }).done(function(t, o, n) {
                           var a;
                           a = "object" == typeof t ? t : JSON.parse(t), null !== a.Votaciones ? (storage.setLocal("votacionesHistorial", JSON.stringify(a.Votaciones))) : (console.log("No existen registros para Historial"))
                        }).fail(function(t, e, o) {
                           common.message("Se ha detectado un problema en el servicioSCR, favor de intentar nuevamente."), common.modal("show")
                        })
                    }
                    operacionesHistorial();
                    storage.set(JSON.parse(storage.getLocal("votacionesHistorial")), "operacionesHistorial");
                    //HistorialSCR
                    var operacionesHistorialSCR = function() {
                        var historial = 'true';
                        var apCliente = 'true';
                        var usr6 = JSON.parse(storage.getLocal("login")).usuario;
                        $.ajax({
                            url: endPoint.point().voto.get,
                            type: "get",
                            headers: {
                                Accept: "application/json; charset=utf-8",
                                "Content-Type": "text/plain; charset=utf-8"
                            },
                            data: {
                                Usuario: jsEncode.encode(""+usr6),
                                historial: jsEncode.encode(historial),
                                aprobacionCliente: jsEncode.encode(apCliente)
                            },
                            cache: !1
                        }).done(function(t, o, n) {
                            var a;
                            a = "object" == typeof t ? t : JSON.parse(t), null !== a.Votaciones ? (storage.setLocal("votacionesHistorialSCR", JSON.stringify(a.Votaciones))) : (console.log("No existen registros para Historial"))
                        }).fail(function(t, e, o) {
                            common.message("Se ha detectado un problema en el servicioSCR, favor de intentar nuevamente."), common.modal("show")
                        })
                    }
                    operacionesHistorialSCR();
                    storage.set(JSON.parse(storage.getLocal("votacionesHistorialSCR")), "operacionesHistorialSCR");
                switch (o) {
                    case CONSTANTES.TIPO_OPERACION.COMITE_CREDITO.VIRTUAL:
                        if(i.object !== undefined && i.object !== null && i.object !== false){ 
                        $.each(i.object.Votacion, function(o) {
                            if (i.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id === CONSTANTES.NIVEL_APROBACION.COMITE_CREDITO && i.object.Votacion[o].SolicitudAprobacion.esReunionVirtual === CONSTANTES.TIPO_VOTACION.COMITE_CREDITO.VIRTUAL) {
                                var e = common.getClass(i.object.Votacion[o].SolicitudAprobacion.marcadoComoLeido),
                                    a = String(Math.random(1e3)).replace(".", "");
                                $("#virtual").append('<div id="o-' + i.object.Votacion[o].SolicitudAprobacion.idOperacion + a + '" class=" ' + e.colorClass + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + e.faClass + '"></span></i></div><div class="row-content"><div class="least-content"></div><h4 class="list-group-item-heading">' + i.object.Votacion[o].SolicitudAprobacion.nombreOperacion + '</h4><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Inicio:' + moment(i.object.Votacion[o].SolicitudAprobacion.fechaInicio).format("DD/MMM/YYYY") + '</p><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Termino: ' + (i.object.Votacion[o].SolicitudAprobacion.fechaTermino ? moment(i.object.Votacion[o].SolicitudAprobacion.fechaTermino).format("DD/MMM/YYYY") : "-") + '</p></div></div><div class="list-group-separator"></div>'), $("#o-" + i.object.Votacion[o].SolicitudAprobacion.idOperacion + a).on({
                                    click: function() {
                                        storage.setLocal("isPresencial", !1), storage.setLocal("isPresidencia", i.object.Votacion[o].Usuario.emiteVoto && i.object.Votacion[o].Usuario.rol.Id === 31), storage.setLocal("operacion", '{ "id" :' + i.object.Votacion[o].SolicitudAprobacion.idSolicitudAprobacion + ', "aprobacion" :' + i.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id + ',"idUsuario" : ' + i.object.Votacion[o].Usuario.idUsuarioReunion + ', "rol":' + i.object.Votacion[o].Usuario.rol.Id + ', "emiteVoto":' + i.object.Votacion[o].Usuario.emiteVoto + ', "fechaInicio":"' + i.object.Votacion[o].SolicitudAprobacion.fechaInicio + '", "fechaTermino":"' + i.object.Votacion[o].SolicitudAprobacion.fechaTermino + '", "fechaCierre":"' + i.object.Votacion[o].SolicitudAprobacion.fechaCierre + '"}'), window.location.hash = "#operacion"
                                    }
                                })
                            }
                        });
                        //Cierre del if validar i
                        }else{
                            console.log("No hay operaciones virtuales");
                        }
                        break;
                    case CONSTANTES.TIPO_OPERACION.COMITE_CREDITO.VIRTUALSCR:
                        var icliente = storage.get("operacionesSCR");
                        if(icliente.object !== null){
                        $.each(icliente.object.Votacion, function(o) {
                            if (icliente.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id === CONSTANTES.NIVEL_APROBACION.COMITE_CREDITO && icliente.object.Votacion[o].SolicitudAprobacion.esReunionVirtual === CONSTANTES.TIPO_VOTACION.COMITE_CREDITO.VIRTUAL) {
                                var e = common.getClass(icliente.object.Votacion[o].SolicitudAprobacion.marcadoComoLeido),
                                    a = String(Math.random(1e3)).replace(".", "");
                                $("#virtual").append('<div id="o-' + icliente.object.Votacion[o].SolicitudAprobacion.idOperacion + a + '" class=" ' + e.colorClass + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + e.faClass + '"></span></i></div><div class="row-content"><div class="least-content"></div><h4 class="list-group-item-heading">' + (icliente.object.Votacion[o].SolicitudAprobacion.cliente.razonSocial == null ? "Nombre Indefinido" : icliente.object.Votacion[o].SolicitudAprobacion.cliente.razonSocial ) + '</h4><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Inicio:' + moment(icliente.object.Votacion[o].SolicitudAprobacion.fechaInicio).format("DD/MMM/YYYY") + '</p><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Termino: ' + (icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino ? moment(icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino).format("DD/MMM/YYYY") : "-") + '</p></div></div><div class="list-group-separator"></div>'), $("#o-" + icliente.object.Votacion[o].SolicitudAprobacion.idOperacion + a).on({
                                    click: function() {
                                        storage.setLocal("isPresencial", !1), storage.setLocal("isPresidencia", !1), storage.setLocal("operacionSCR", '{ "id" :' + icliente.object.Votacion[o].SolicitudAprobacion.idSolicitudAprobacion + ', "aprobacion" :' + icliente.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id + ',"idUsuario" : ' + icliente.object.Votacion[o].Usuario.idUsuarioReunion + ', "rol":' + icliente.object.Votacion[o].Usuario.rol.Id + ', "emiteVoto":' + icliente.object.Votacion[o].Usuario.emiteVoto + ', "fechaInicio":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaInicio + '", "fechaTermino":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino + '", "fechaCierre":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaCierre + '"}'), window.location.hash = "#operacionSCR"
                                    }
                                })
                            }
                        });
                        //Cierre del if icliente
                        }else{
                            console.log("No hay operaciones virtuales SCR");
                        }
                        break;
                    case CONSTANTES.TIPO_OPERACION.COMITE_CREDITO.PRESENCIAL:
                        if(i !== undefined && i.object !== undefined && i.object !== null && i.object !== false){
                        $.each(i.object.Votacion, function(o) {
                            if (i.object.Votacion[o].SolicitudAprobacion.esReunionVirtual === CONSTANTES.TIPO_VOTACION.COMITE_CREDITO.PRESENCIAL) {
                                var e = common.getClass(i.object.Votacion[o].SolicitudAprobacion.marcadoComoLeido),
                                    a = String(Math.random(1e3)).replace(".", "");
                                $("#virtual").append('<div id="o-' + i.object.Votacion[o].SolicitudAprobacion.idOperacion + a + '" class=" ' + e.colorClass + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + e.faClass + '"></span></i></div><div class="row-content"><div class="least-content"></div><h4 class="list-group-item-heading">' + i.object.Votacion[o].SolicitudAprobacion.nombreOperacion + '</h4><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Inicio:' + moment(i.object.Votacion[o].SolicitudAprobacion.fechaInicio).format("DD/MMM/YYYY") + '</p><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Termino: ' + (i.object.Votacion[o].SolicitudAprobacion.fechaTermino ? moment(i.object.Votacion[o].SolicitudAprobacion.fechaTermino).format("DD/MMM/YYYY") : "-") + '</p></div></div><div class="list-group-separator"></div>'), $("#o-" + i.object.Votacion[o].SolicitudAprobacion.idOperacion + a).on({
                                    click: function() {
                                        storage.setLocal("isPresencial", !0), storage.setLocal("isPresidencia", i.object.Votacion[o].Usuario.emiteVoto && i.object.Votacion[o].Usuario.rol.Id === 31), storage.setLocal("operacion", '{ "id" :' + i.object.Votacion[o].SolicitudAprobacion.idSolicitudAprobacion + ', "aprobacion" :' + i.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id + ',"idUsuario" : ' + i.object.Votacion[o].Usuario.idUsuarioReunion + ', "rol":' + i.object.Votacion[o].Usuario.rol.Id + ', "emiteVoto":' + i.object.Votacion[o].Usuario.emiteVoto + ', "fechaInicio":"' + i.object.Votacion[o].SolicitudAprobacion.fechaInicio + '", "fechaTermino":"' + i.object.Votacion[o].SolicitudAprobacion.fechaTermino + '", "fechaCierre":"' + i.object.Votacion[o].SolicitudAprobacion.fechaCierre + '"}'), window.location.hash = "#operacion"
                                    }
                                })
                            }
                        });
                        //Cierre del if validar i
                        }else{
                            console.log("No hay operaciones presenciales");
                        }
                        break;
                    case CONSTANTES.TIPO_OPERACION.COMITE_CREDITO.PRESENCIALSCR:
                        var icliente = storage.get("operacionesSCR");
                        if(icliente.object !== null && icliente.object !== false){
                        $.each(icliente.object.Votacion, function(o) {
                            if (icliente.object.Votacion[o].SolicitudAprobacion.esReunionVirtual === CONSTANTES.TIPO_VOTACION.COMITE_CREDITO.PRESENCIAL) {
                                var e = common.getClass(icliente.object.Votacion[o].SolicitudAprobacion.marcadoComoLeido),
                                    a = String(Math.random(1e3)).replace(".", "");
                                $("#virtual").append('<div id="o-' + icliente.object.Votacion[o].SolicitudAprobacion.idOperacion + a + '" class=" ' + e.colorClass + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + e.faClass + '"></span></i></div><div class="row-content"><div class="least-content"></div><h4 class="list-group-item-heading">' + (icliente.object.Votacion[o].SolicitudAprobacion.cliente.razonSocial == null ? "Nombre Indefinido" : icliente.object.Votacion[o].SolicitudAprobacion.cliente.razonSocial ) + '</h4><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Inicio:' + moment(icliente.object.Votacion[o].SolicitudAprobacion.fechaInicio).format("DD/MMM/YYYY") + '</p><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Termino: ' + (icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino ? moment(icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino).format("DD/MMM/YYYY") : "-") + '</p></div></div><div class="list-group-separator"></div>'), $("#o-" + icliente.object.Votacion[o].SolicitudAprobacion.idOperacion + a).on({
                                    click: function() {
                                        storage.setLocal("isPresencial", !0), storage.setLocal("isPresidencia", !1), storage.setLocal("operacionSCR", '{ "id" :' + icliente.object.Votacion[o].SolicitudAprobacion.idSolicitudAprobacion + ', "aprobacion" :' + icliente.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id + ',"idUsuario" : ' + icliente.object.Votacion[o].Usuario.idUsuarioReunion + ', "rol":' + icliente.object.Votacion[o].Usuario.rol.Id + ', "emiteVoto":' + icliente.object.Votacion[o].Usuario.emiteVoto + ', "fechaInicio":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaInicio + '", "fechaTermino":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino + '", "fechaCierre":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaCierre + '"}'), window.location.hash = "#operacionSCR"
                                    }
                                })
                            }
                        });
                        //Cierre del if icliente
                        }else{
                            console.log("No hay operaciones presenciales SCR");
                        }
                        break;
                    case CONSTANTES.TIPO_OPERACION.COMITE_CREDITO.HISTORIAL:
                        var i = storage.get("operacionesHistorial");
                        if(i.object !== null && i.object !== false){
                        $.each(i.object.Votacion, function(o) {
                                var e = common.getClass(i.object.Votacion[o].SolicitudAprobacion.marcadoComoLeido),
                                    a = String(Math.random(1e3)).replace(".", "");
                                $("#virtual").append('<div id="o-' + i.object.Votacion[o].SolicitudAprobacion.idOperacion + a + '" class=" ' + e.colorClass + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + e.faClass + '"></span></i></div><div class="row-content"><div class="least-content"></div><h4 class="list-group-item-heading">' + i.object.Votacion[o].SolicitudAprobacion.nombreOperacion + '</h4><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Inicio:' + moment(i.object.Votacion[o].SolicitudAprobacion.fechaInicio).format("DD/MMM/YYYY") + '</p><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Termino: ' + (i.object.Votacion[o].SolicitudAprobacion.fechaTermino ? moment(i.object.Votacion[o].SolicitudAprobacion.fechaTermino).format("DD/MMM/YYYY") : "-") + '</p></div></div><div class="list-group-separator"></div>'), $("#o-" + i.object.Votacion[o].SolicitudAprobacion.idOperacion + a).on({
                                    click: function() {
                                        storage.setLocal("isPresencial", !0), storage.setLocal("isPresidencia", !1), storage.setLocal("operacion", '{ "id" :' + i.object.Votacion[o].SolicitudAprobacion.idSolicitudAprobacion + ', "aprobacion" :' + i.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id + ',"idUsuario" : ' + i.object.Votacion[o].Usuario.idUsuarioReunion + ', "rol":' + i.object.Votacion[o].Usuario.rol.Id + ', "emiteVoto":' + i.object.Votacion[o].Usuario.emiteVoto + ', "fechaInicio":"' + i.object.Votacion[o].SolicitudAprobacion.fechaInicio + '", "fechaTermino":"' + i.object.Votacion[o].SolicitudAprobacion.fechaTermino + '", "fechaCierre":"' + i.object.Votacion[o].SolicitudAprobacion.fechaCierre + '"}'), window.location.hash = "#operacion"
                                    }
                                })
                        });
                        //Cierre del if validar i
                        }else{
                            console.log("No hay operaciones de historial");
                        }
                        break;
                    case CONSTANTES.TIPO_OPERACION.COMITE_CREDITO.HISTORIALSCR:
                        var icliente = storage.get("operacionesHistorialSCR");
                        if(icliente.object !== null && icliente.object !== false){
                        $.each(icliente.object.Votacion, function(o) {
                                var e = common.getClass(i.object.Votacion[o].SolicitudAprobacion.marcadoComoLeido),
                                    a = String(Math.random(1e3)).replace(".", "");
                                $("#virtual").append('<div id="o-' + icliente.object.Votacion[o].SolicitudAprobacion.idOperacion + a + '" class=" ' + e.colorClass + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + e.faClass + '"></span></i></div><div class="row-content"><div class="least-content"></div><h4 class="list-group-item-heading">' + (icliente.object.Votacion[o].SolicitudAprobacion.cliente.razonSocial == null ? "Nombre Indefinido" : icliente.object.Votacion[o].SolicitudAprobacion.cliente.razonSocial) + '</h4><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Inicio:' + moment(icliente.object.Votacion[o].SolicitudAprobacion.fechaInicio).format("DD/MMM/YYYY") + '</p><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Termino: ' + (icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino ? moment(icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino).format("DD/MMM/YYYY") : "-") + '</p></div></div><div class="list-group-separator"></div>'), $("#o-" + icliente.object.Votacion[o].SolicitudAprobacion.idOperacion + a).on({
                                    click: function() {
                                        storage.setLocal("isPresencial", !0), storage.setLocal("isPresidencia", !1), storage.setLocal("operacionSCR", '{ "id" :' + icliente.object.Votacion[o].SolicitudAprobacion.idSolicitudAprobacion + ', "aprobacion" :' + icliente.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id + ',"idUsuario" : ' + icliente.object.Votacion[o].Usuario.idUsuarioReunion + ', "rol":' + icliente.object.Votacion[o].Usuario.rol.Id + ', "emiteVoto":' + icliente.object.Votacion[o].Usuario.emiteVoto + ', "fechaInicio":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaInicio + '", "fechaTermino":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaTermino + '", "fechaCierre":"' + icliente.object.Votacion[o].SolicitudAprobacion.fechaCierre + '"}'), window.location.hash = "#operacionSCR"
                                    }
                                })
                        });
                        //Cierre del if icliente
                        }else{
                            console.log("No hay operaciones historial SCR");
                        }
                        break;
                    case CONSTANTES.TIPO_OPERACION.PRESIDENCIA:
                        var e = !1;
                        if(i.object !== null && i.object !== false){
                        $.each(i.object.Votacion, function(o) {
                            if (i.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id === CONSTANTES.NIVEL_APROBACION.PRESIDENCIA) {
                                var a = common.getClass(i.object.Votacion[o].SolicitudAprobacion.marcadoComoLeido),
                                    t = String(Math.random(1e3)).replace(".", "");
                                e = !0, $("#virtual").append('<div id="o-' + i.object.Votacion[o].SolicitudAprobacion.idOperacion + t + '" class=" ' + a.colorClass + '"><div class="row-action-primary"><i class="material-icons"><span class="fa ' + a.faClass + '"></span></i></div><div class="row-content"><div class="least-content"></div><h4 class="list-group-item-heading">' + i.object.Votacion[o].SolicitudAprobacion.nombreOperacion + '</h4><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Inicio:' + moment(i.object.Votacion[o].SolicitudAprobacion.fechaInicio).format("DD/MMM/YYYY") + '</p><p class="list-group-item-text"><span class="fa fa-calendar-plus-o"></span> Fecha Termino: ' + (i.object.Votacion[o].SolicitudAprobacion.fechaTermino ? moment(i.object.Votacion[o].SolicitudAprobacion.fechaTermino).format("DD/MMM/YYYY") : "-") + '</p></div></div><div class="list-group-separator"></div>'), $("#o-" + i.object.Votacion[o].SolicitudAprobacion.idOperacion + t).on({
                                    click: function() {
                                        e && storage.setLocal("isPresidencia", i.object.Votacion[o].Usuario.emiteVoto && i.object.Votacion[o].Usuario.rol.Id === 31), storage.setLocal("operacion", '{ "id" :' + i.object.Votacion[o].SolicitudAprobacion.idSolicitudAprobacion + ', "aprobacion" :' + i.object.Votacion[o].SolicitudAprobacion.nivelAprobacion.Id + ',"idUsuario" : ' + i.object.Votacion[o].Usuario.idUsuarioReunion + ', "rol":' + i.object.Votacion[o].Usuario.rol.Id + ', "emiteVoto":' + i.object.Votacion[o].Usuario.emiteVoto + ', "fechaInicio":"' + i.object.Votacion[o].SolicitudAprobacion.fechaInicio + '", "fechaTermino":"' + i.object.Votacion[o].SolicitudAprobacion.fechaTermino + '", "fechaCierre":"' + i.object.Votacion[o].SolicitudAprobacion.fechaCierre + '"}'), window.location.hash = "#operacion"
                                    }
                                })
                            }
                        })
                        //Cierre del if validar i
                        }else{
                            console.log("No hay operaciones presidencia");
                        }
                }
            }
        }, {
            init: function() {
                o.initialize()
            },
            initSCR: function() {
                o.initializeSCR()
            },
            getVotosEmitidos: function() {
                $("#votosEmitidos").empty(), $("#containerComentarios").empty(), o.getVotosEmitidos()
            },
            getOperaciones: function(i) {
                o.getOperaciones(i)
            }
        }
    }(operacionController),
    votacionController = function() {
        var o;
        return o = {
            el: null,
            initialize: function(o, i) {
                var e = this;
                o ? e.el = $(o) : e.el = $("#formVotar"), i ? e.process(i) : e.process("add")
            },
            initializeSCR: function(o, i) {
                var e = this;
                o ? e.el = $(o) : e.el = $("#formVotarSCR"), i ? e.processSCR(i) : e.processSCR("add")
            },
            process: function(o) {
                var i = this;
                switch (o) {
                    case "add":
                        validator.init(i.el), i.votarEvents();
                        break;
                    default:
                        return !1
                }
            },
            processSCR: function(o) {
                var i = this;
                switch (o) {
                    case "add":
                        validator.init(i.el), i.votarEventsSCR();
                        break;
                    default:
                        return !1
                }
            },
            getDesicion: function() {
                var o = null,
                    i = this;
                return i.el.find("input[type='radio']").each(function(i) {
                    $(this).is(":checked") && (o = $(this).val())
                }), o
            },
            getObservacion: function() {
                return $("#observacionDesicion").val() == "" ? $("#text_observacion").val() : $("#observacionDesicion").val();
            },
            votarEvents: function() {
                var o = this,
                    i = $("#invocaVotacion"),
                    e = $("#cancelarVoto"),
                    a = $("#emitirVoto"),
                    t = JSON.parse(storage.getLocal("operacion"));
                e.on({
                    click: function() {
                        //$("#text_observacion").lenght > 0 ? alert("Hay comentarios hechos se perderan") :
                        $('#cancelVotoDialog').remove();
                        $('#footerDialog').append('<button id="cancelVotoDialog" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>');
                        var val = $("#text_observacion").val();
                        var num = val.length;
                        console.log(num)
                        val.length === 0 ? ($("#slideVoto").removeClass("fadeInLeftBig animated").addClass("hide"), console.log("Entro al si")) :
                        (console.log("Entro al entonces"), $("#modalVoto").find("#titleHeader").text("El comentario que ha introducido se perderá ¿Desea continuar?"), $("#modalVoto").modal("show"))
                        $('#acceptVotoDialog').on(
                                'click',
                                function(evt)
                                {
                                 console.log('entro');
                                 $("#slideVoto").removeClass("fadeInLeftBig animated").addClass("hide")
                                }
                                );
                    }
                }), "true" === storage.getLocal("isPresidencia") ? 
				
				($(".tab-text-votacion").html("Decisi&oacute;n PE")
				,$(".h3").html("Resumen de la Decisi&oacute;n")
				, i.find("span").html("Decisi&oacute;n")) 
				
				: 
				
				($(".tab-text-votacion").html("Votaci&oacute;n")
				, $(".h3").html("Resumen de la Votaci&oacute;n")
				, i.find("span").html("Votaci&oacute;n"))
				
				, t.emiteVoto === !1 
					? (i.addClass("hide"), $("#notificacion").find(".modal-title").html("")
						, common.message("No cuenta con permisos necesarios para realizar la votación."), common.modal("show")) 
					: (i.on({
                    click: function() {
                      //AprobacionMovil v1.8.2 se modificaron los formatos de fechas para validar correctamente
                        $("#text_observacion").val('');
                      var o;
                      if (navigator.appName.match(/explorer/gi) || navigator.userAgent.match(/trident/gi)){
                             var houre = "T00:00:00";
                             var houra = "T23:59:59";
                             var i = new Date();
                             var ec = t.fechaInicio;
                             var ef = ec.substring(0, 10);
                             var e  = new Date(ef + houre);
                             var ac = t.fechaTermino;
                             var af = ac.substring(0, 10);
                             var a = new Date(af + houra);
                      }else{
                             var houre = ",00:00:00";
                             var houra = ",23:59:59";
                             var i = new Date();
                             var ec = t.fechaInicio;
                             var ef = ec.substring(0, 10);
                             var e  = new Date(ef + houre);
                             var ac = t.fechaTermino;
                             var af = ac.substring(0, 10);
                             var a = new Date(af + houra);
                      }

                            n = storage.getLocal("isPresidencia");
                        o = "true" === n ? "Decisi&oacute;n" : "Votaci&oacute;n", "null" !== t.fechaCierre ? ($("#notificacion").find(".modal-title").html(""), common.message("La solicitud de aprobación ha sido cerrada."), common.modal("show")) : "null" === t.fechaTermino ? e > i ? ($("#notificacion").find(".modal-title").html(""), common.message("La aprobación aun no ha iniciado."), common.modal("show")) : $("#slideVoto").removeClass("hide").addClass("fadeInLeftBig animated") : e > i ? ($("#notificacion").find(".modal-title").html(""), common.message("La aprobación aun no ha iniciado."), common.modal("show")) : i > a ? ($("#notificacion").find(".modal-title").html(""), common.message("La solicitud de aprobación ha expirado."), common.modal("show")) : $("#slideVoto").removeClass("hide").addClass("fadeInLeftBig animated")
                               
                                console.log('-fecha inicio->'+e)
                                console.log('-fecha termino->'+a)
                                console.log('-fecha actual->'+i)
                    }
                }), a.on({
                    click: function() {
                        o.el.valid() && o.registra()
                    }
                }))
            },
            votarEventsSCR: function() {
                var o = this,
                    i = $("#invocaVotacion"),
                    e = $("#cancelarVoto"),
                    a = $("#emitirVoto"),
                    t = JSON.parse(storage.getLocal("operacionSCR"));
                e.on({
                    click: function() {
                        //$("#text_observacion").lenght > 0 ? alert("Hay comentarios hechos se perderan") :
                        $('#cancelVotoDialog').remove();
                        $('#footerDialog').append('<button id="cancelVotoDialog" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>');
                        var val = $("#text_observacion").val();
                        var num = val.length;
                        console.log(num)
                        val.length === 0 ? ($("#slideVoto").removeClass("fadeInLeftBig animated").addClass("hide"), console.log("Entro al si")) :
                        (console.log("Entro al entonces"), $("#modalVoto").find("#titleHeader").text("El comentario que ha introducido se perderá ¿Desea continuar?"), $("#modalVoto").modal("show"))
                        $('#acceptVotoDialog').on(
                                'click',
                                function(evt)
                                {
                                 console.log('entro');
                                 $("#slideVoto").removeClass("fadeInLeftBig animated").addClass("hide")
                                }
                                );
                    }
                }), ($(".tab-text-votacion").html("Votaci&oacute;n"), $(".h3").html("Resumen de la Votaci&oacute;n"), i.find("span").html("Votaci&oacute;n")), t.emiteVoto === !1 ? (i.addClass("hide"), $("#notificacion").find(".modal-title").html(""), common.message("No cuenta con permisos necesarios para realizar la votación."), common.modal("show")) : (i.on({
                    click: function() {
                        $("#text_observacion").val('');
                      var o;
                      if (navigator.appName.match(/explorer/gi) || navigator.userAgent.match(/trident/gi)){
                             var houre = "T00:00:00";
                             var houra = "T23:59:59";
                             var i = new Date();
                             var ec = t.fechaInicio;
                             var ef = ec.substring(0, 10);
                             var e  = new Date(ef + houre);
                             var ac = t.fechaTermino;
                             var af = ac.substring(0, 10);
                             var a = new Date(af + houra);
                       }else{
                             var houre = ",00:00:00";
                             var houra = ",23:59:59";
                             var i = new Date();
                             var ec = t.fechaInicio;
                             var ef = ec.substring(0, 10);
                             var e  = new Date(ef + houre);
                             var ac = t.fechaTermino;
                             var af = ac.substring(0, 10);
                             var a = new Date(af + houra);
                       }

                        n = storage.getLocal("isPresidencia");
                        o = "true" === n ? "Decisi&oacute;n" : "Votaci&oacute;n", "null" !== t.fechaCierre ? ($("#notificacion").find(".modal-title").html(""), common.message("La solicitud de aprobación ha sido cerrada."), common.modal("show")) : "null" === t.fechaTermino ? e > i ? ($("#notificacion").find(".modal-title").html(""), common.message("La aprobación aun no ha iniciado."), common.modal("show")) : $("#slideVoto").removeClass("hide").addClass("fadeInLeftBig animated") : e > i ? ($("#notificacion").find(".modal-title").html(""), common.message("La aprobación aun no ha iniciado."), common.modal("show")) : i > a ? ($("#notificacion").find(".modal-title").html(""), common.message("La solicitud de aprobación ha expirado."), common.modal("show")) : $("#slideVoto").removeClass("hide").addClass("fadeInLeftBig animated")
                               
                                console.log('-fecha inicio->'+e)
                                console.log('-fecha termino->'+a)
                                console.log('-fecha actual->'+i)
                    }
                }), a.on({
                    click: function() {
                        o.el.valid() && o.registraSCR()
                    }
                }))
            },
            registra: function() {
                var o = this;
                var decicion1 = parseInt(o.getDesicion());
                var idUs4 = JSON.parse(storage.getLocal("operacion")).idUsuario;
                var logn3 = JSON.parse(storage.getLocal("login")).usuario;
                var nomUs4 = JSON.parse(storage.getLocal("login")).nombreCompleto;
                var i = '{"registroVotacion" : { "idTipoDecision" : "' + jsEncode.encode(""+decicion1) + '","idUsuario" : "' + jsEncode.encode(""+idUs4) + '", "loginUsuario" : "' + jsEncode.encode(""+logn3) + '","comentario" : "' + jsEncode.encode(o.getObservacion()) + '","nombreUsuario":"' + jsEncode.encode(""+nomUs4) + '"}}';
                $.ajax({
                    url: endPoint.point().voto.put,
                    type: "put",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: i
                }).done(function(o, i, e) {
                    if (o && "OK" == o.Resultado.result) {
                        var a = !1;
                        $('#cancelVotoDialog').remove();
                        $("#slideVoto").removeClass("fadeInLeftBig animated").addClass("hide"), $("#modalVoto").find("#titleHeader").text("Registro Exitoso"), $("#modalVoto").modal("show"), $("#modalVoto").on("hidden.bs.modal", function() {
                            a = !0, $("#observacionDesicion").val(null)
                        });
                        var t = setInterval(function() {
                            a ? (operacionController.getVotosEmitidos(), clearInterval(t)) : console.log("waiting")
                        }, 100)
                    } else if(o && "ERROR" == o.Resultado.result){
                        $('#cancelVotoDialog').remove();
                        $("#slideVoto").removeClass("fadeInLeftBig animated").addClass("hide"), $("#modalVoto").find("#titleHeader").text(o.Resultado.message), $("#modalVoto").modal("show"), $("#modalVoto").on("hidden.bs.modal", function() {
                            a = !0, $("#observacionDesicion").val(null),
                            window.location.hash = "#virtual"
                        });
                        
                    }else $("#modalVoto").find("#titleHeader").text("Registro no exitoso"), $("#modalVoto").find(".modal-body").text(o.Resultado.message), $("#modalVoto").modal("show"), $("#modalVoto").on("hidden.bs.modal", function() {
                        $("#observacionDesicion").val(null)
                    })
                }).fail(function(o, i, e) {
                    console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html(""), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                })
            },
            registraSCR: function() {
                var o = this;
                var decicion2 = parseInt(o.getDesicion());
                var idUs4 = JSON.parse(storage.getLocal("operacionSCR")).idUsuario;
                var logn4 = JSON.parse(storage.getLocal("login")).usuario;
                var nomUs4 = JSON.parse(storage.getLocal("login")).nombreCompleto;
                var i = '{"registroVotacion" : { "idTipoDecision" :"' + jsEncode.encode(""+decicion2) + '","idUsuario" : "' + jsEncode.encode(""+idUs4) + '", "loginUsuario" : "' + jsEncode.encode(""+logn4) + '","comentario" : "' + jsEncode.encode(o.getObservacion()) + '","nombreUsuario":"' + jsEncode.encode(""+nomUs4) + '"}}';
                $.ajax({
                    url: endPoint.point().voto.put,
                    type: "put",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: i
                }).done(function(o, i, e) {
                    if (o && "OK" == o.Resultado.result) {
                        var a = !1;
                        $('#cancelVotoDialog').remove();
                        $("#slideVoto").removeClass("fadeInLeftBig animated").addClass("hide"), $("#modalVoto").find("#titleHeader").text("Registro Exitoso"), $("#modalVoto").modal("show"), $("#modalVoto").on("hidden.bs.modal", function() {
                            a = !0, $("#observacionDesicion").val(null)
                        });
                        var t = setInterval(function() {
                            a ? (operacionController.getVotosEmitidosSCR(), clearInterval(t)) : console.log("waiting")
                        }, 100)
                    }else if(o && "ERROR" == o.Resultado.result){
                        $('#cancelVotoDialog').remove();
                        $("#slideVoto").removeClass("fadeInLeftBig animated").addClass("hide"), $("#modalVoto").find("#titleHeader").text(o.Resultado.message), $("#modalVoto").modal("show"), $("#modalVoto").on("hidden.bs.modal", function() {
                            a = !0, $("#observacionDesicion").val(null),
                            window.location.hash = "#virtualSCR"
                        });
                        
                    }else $("#modalVoto").find("#titleHeader").text("Registro no exitoso"), $("#modalVoto").find(".modal-body").text(o.Resultado.message), $("#modalVoto").modal("show"), $("#modalVoto").on("hidden.bs.modal", function() {
                        $("#observacionDesicion").val(null)
                    })
                }).fail(function(o, i, e) {
                    console.log(o), console.log(i), console.log(e), $("#notificacion").find(".modal-title").html("Notificaci&oacute;n"), common.message("Se ha detectado un problema en el servicio, favor de intentar nuevamente."), common.modal("show")
                })
            }
            
        }, {
            init: function(i, e) {
                o.initialize(i, e)
            },
            initSCR: function(i, e) {
                o.initializeSCR(i, e)
            }
        }
    }(votacionController);
window.App = {
    Router: {},
    el: $(".container-app")
}, App.Router = Backbone.Router.extend({
    routes: {
        "": "index",
        virtual: "virtual",
        virtualSCR: "virtualSCR",
        presencial: "presencial",
        presencialSCR: "presencialSCR",
        presidencia: "presidencia",
        historial: "historial",
        historialSCR: "historialSCR",
        operacion: "operacion",
        operacionSCR: "operacionSCR",
        logout: "logout"
    },
    index: function() {
        /** Se valida el inicio de la aplicacion para mostrar
        *** Votacion Virtual o Decision PE, cuando sea Comite o Presidencia respectivamente
        *** @Author: Alan Olguin Rodriguez
        *** @Version: 1.8.3
        *** @Fecha: Octubre-2016
        **/
        security.init(), JSON.parse(storage.getLocal("login")).nivelAprobacion == CONSTANTES.NIVEL_APROBACION.PRESIDENCIA ? this.navigate("presidencia", {
            trigger: !0
        }) : this.navigate("virtual", {
            trigger: !0
        })
    },
    virtual: function() {
        security.init(), common.init(), App.el.empty(), App.el.load("html/inbox.html", function() {
            operacionController.getOperaciones("virtual"), $.material.init()
        })
    },
    virtualSCR: function() {
        security.init(), common.init(), App.el.empty(), App.el.load("html/inbox.html", function() {
            operacionController.getOperaciones("virtualSCR"), $.material.init()
        })
    },
    presencial: function() {
        security.init(), common.init(), App.el.empty(), App.el.load("html/inbox.html", function() {
            operacionController.getOperaciones("presencial"), $.material.init()
        })
    },
    presencialSCR: function() {
        security.init(), common.init(), App.el.empty(), App.el.load("html/inbox.html", function() {
            operacionController.getOperaciones("presencialSCR"), $.material.init()
        })
    },
    presidencia: function() {
        security.init(), common.init(), App.el.empty(), App.el.load("html/inbox.html", function() {
            operacionController.getOperaciones("presidencia"), $.material.init()
        })
    },
    historial: function() {
        security.init(), common.init(), App.el.empty(), App.el.load("html/inbox.html", function() {
            operacionController.getOperaciones("historial"), $.material.init()
        })
    },
    historialSCR: function() {
        security.init(), common.init(), App.el.empty(), App.el.load("html/inbox.html", function() {
            operacionController.getOperaciones("historialSCR"), $.material.init()
        })
    },
    operacion: function() {
        common.init(), security.init(), App.el.empty(), App.el.load("html/operacion.html", function() {
            operacionController.init(), votacionController.init("#formVotar", "add"), $.material.init()
        })
    },
    operacionSCR: function() {
        common.init(), security.init(), App.el.empty(), App.el.load("html/operacionSCR.html", function() {
            operacionController.initSCR(), votacionController.initSCR("#formVotarSCR", "add"), $.material.init()
        })
    },
    logout: function() {
        security.close()
    }
}), storage.get("menu") ? menuController.init() : (storage.set(JSON.parse(storage.getLocal("votaciones")), "menu"), menuController.init()), (storage.set(JSON.parse(storage.getLocal("votaciones")), "operaciones"), storage.set(JSON.parse(storage.getLocal("votacionesHistorial")), "operacionesHistorial")), /**(storage.set(JSON.parse(storage.getLocal("votacionesSCR")), "operacionesSCR"), storage.set(JSON.parse(storage.getLocal("votacionesHistorialSCR")), "operacionesHistorialSCR"))**/ userController.init(), new App.Router, Backbone.history.start();