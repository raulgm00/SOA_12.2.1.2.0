package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.FenixModelConstants;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 12 12:39:10 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RegistrarDatosLineaCreditoVOImpl extends ViewObjectImpl {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public RegistrarDatosLineaCreditoVOImpl() {
        
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void crearRowRegistrarDatosLineaCredito(){
        logger.log(ADFLogger.TRACE, "Inside crearRowRegistrarDatosLineaCredito.");
        logger.log(ADFLogger.WARNING, "Inside crearRowRegistrarDatosLineaCredito.");
        this.clearCache(); // Limpiamos VO RegistrarDatosLineaCreditoVO
        Row row = this.createRow();
        this.insertRowAtRangeIndex(0, row); // Insertamos row en VO
        this.setCurrentRow(row); // asigamos como current row el nuevo row
    }
    
    /**
     * [KB:14513]
     * Inserta una copia de los datos de la línea de crédito encontrados en base de datos en este objeto de memoria.
     * @param lc Línea de crédito encontrada en base de datos.
     */
    public Row insertCopyOf(LineaCreditoVORowImpl lc, TerminosLineaCreditoVORowImpl termPlazoFinanciamiento,
                            TerminosLineaCreditoVORowImpl termPlazoGracia,
                            TerminosLineaCreditoVORowImpl termEnDesembolso,
                            TerminosLineaCreditoVORowImpl termRecursoExterno, BigDecimal disponible) {
        RegistrarDatosLineaCreditoVORowImpl row = (RegistrarDatosLineaCreditoVORowImpl) this.createRow();

        // Se agrega por FNXII-6675
        row.setNewRowState(Row.STATUS_INITIALIZED);

        row.setBanEstatus(lc.getBanEstatus());
        row.setCantidadDecimales(lc.getCantidadDecimales());
        row.setCodigoTasaReferencia(lc.getCodigoTasaReferencia());
        row.setCondicionEspecial(lc.getCondicionEspecial());
        row.setDescripcionCondEspecial(lc.getDescripcionCondEspecial());
        row.setDiasSpotTasa(lc.getDiasSpotTasa());        
        row.setEsRevolvente(lc.getEsRevolvente());
        row.setFechaRegistro(lc.getFechaRegistro());
        row.setFechaValor(lc.getFechaValor());
        row.setFechaVencimiento(lc.getFechaVencimiento());
        row.setFondo(lc.getFondo());
        row.setFrecuencia(lc.getFrecuencia());
        row.setId(lc.getId());
        row.setIdFlexcube(lc.getIdFlexcube());
        row.setIdFlexcubePasivo(lc.getIdFlexcubePasivo());
        row.setIdProductoFlexcube(lc.getIdProductoFlexcube());
        row.setIdTcaTipoFrecuencia(lc.getIdTcaTipoFrecuencia());
        if (lc.getIdTcaTipoMora() != null) {
            row.setIdTcaTipoMora(lc.getIdTcaTipoMora().intValue());
        }
        if (lc.getIdTcaTipoRedondeo() != null) {
            row.setIdTcaTipoRedondeo(lc.getIdTcaTipoRedondeo().intValue());
        }
        row.setMontoLinea(lc.getMontoLinea());
        
        row.setMoverEntreMeses(lc.getSePuedeMoverEntreMeses());
        row.setNumeroLineaCredito(lc.getNumeroLineaCredito());
        
        if (lc.getSpreadTasa() != null) {
            row.setSpreadTasa(lc.getSpreadTasa().intValue());
        }
        
        row.setTratamientoDiasFeriados(lc.getTratamientoDiasFeriados());
        if (lc.getValorTasa() != null) {
            row.setValorTasa(lc.getValorTasa().intValue());
        }

        //valores provenientes de los términos de la línea de crédito
        if (termRecursoExterno != null) {
            row.setEsRecursosExternos(termRecursoExterno.getRecursoExterno());
        }
        if (termEnDesembolso != null) {
            if (termEnDesembolso.getMontoMaximo() != null) {
                row.setMontoMaximo(termEnDesembolso.getMontoMaximo().doubleValue());
            }
            if (termEnDesembolso.getMontoMinimo() != null) {
                row.setMontoMinimo(termEnDesembolso.getMontoMinimo().doubleValue());
            }
            if (termEnDesembolso.getTasaMaxima() != null) {
                row.setTasaMaxima(termEnDesembolso.getTasaMaxima().doubleValue());
            }
            if (termEnDesembolso.getTasaMinima() != null) {
                row.setTasaMinima(termEnDesembolso.getTasaMinima().doubleValue());
            }
        }
        if (termPlazoFinanciamiento != null) {
            row.setPlazoFinanciamiento(termPlazoFinanciamiento.getPlazo());
        }
        if (termPlazoGracia != null) {
            row.setPlazoGracia(termPlazoGracia.getPlazo());
        }
        
        if(disponible != null){
            row.setMontoDisponible(disponible);
        }
        
        this.insertRow(row);

        return row;
    }
}
