package org.bcie.fenix.common.model.vo;

import java.util.ArrayList;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TreeTcaEventoEnmienda;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 26 17:22:33 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TreeTcaEventoEnmiendaImpl extends ViewObjectImpl implements TreeTcaEventoEnmienda {
    
    /**
     * Log de la aplicacion
     */
    private static ADFLogger logger = ADFLogger.createADFLogger(TreeTcaEventoEnmiendaImpl.class);
    
    /**
     * Define nombre de View Criteria para buscar por Id de Condicion
     */
    public static final String BUSCAR_POR_ID_VC = "TreeTcaEventoEnmiendaCriteria1";
    /**
     * This is the default constructor (do not remove).
     */
    public TreeTcaEventoEnmiendaImpl() {
    }

    /**
     * Returns the variable value for pIdCondicion.
     * @return variable value for pIdCondicion
     */
    public Long getpIdCondicion() {
        return (Long) ensureVariableManager().getVariableValue("pIdCondicion");
    }

    /**
     * Sets <code>value</code> for variable pIdCondicion.
     * @param value value to bind as pIdCondicion
     */
    public void setpIdCondicion(Long value) {
        ensureVariableManager().setVariableValue("pIdCondicion", value);
    }
    
    /**
    * Realiza los registros de las eventos por id de condicion
    * para poder crear las enmendadas
    */
    public Boolean crearEnmendadaEvento(Long idCondicion, Long idEnmendada) {
    Boolean respuesta = Boolean.TRUE;
    List<Integer> lista = new ArrayList<Integer>();
    if (idCondicion == null && null != idEnmendada) {
       respuesta = Boolean.FALSE;
       return respuesta;
    }

    logger.warning("Asigna Id Condicion: " + idCondicion);
    logger.warning("Asigna idEnmendada: " + idEnmendada);
    setpIdCondicion(idCondicion);

    ViewCriteria vc = null;
    try {
       vc = getViewCriteria("TreeTcaEventoEnmiendaCriteria1");
       applyViewCriteria(vc);
       executeQuery();

       logger.warning("Registro encontrados " + getEstimatedRowCount());
        this.setRangeSize(-1);
       if (getEstimatedRowCount() > 0) {
           logger.warning("Se obtiene lista");
           Row rowRecorridos;
           Integer idCategoria;
           for (int i = 0; i < getEstimatedRowCount(); i++) {
               rowRecorridos = null;
               rowRecorridos = getRowAtRangeIndex(i);
               idCategoria = null;
               if(null!= rowRecorridos){
                       logger.warning("IdTcaEvento encontrada " + rowRecorridos.getAttribute("IdTcaEvento"));
                       idCategoria = (Integer) rowRecorridos.getAttribute("IdTcaEvento");
                       lista.add(idCategoria);
               }
                
           }
       } else {
           logger.warning("No se encontraron registros de Precarga Evento Condicion");
       }
    } catch (Exception e) {
       logger.severe("Error al ejecutar View Criteria: " + BUSCAR_POR_ID_VC);
       logger.severe("Error View Criteria: " , e);
       respuesta = Boolean.FALSE;
    } finally {
       this.getViewCriteriaManager().removeApplyViewCriteriaName("TreeTcaEventoEnmiendaCriteria1");
       executeQuery();
    }

    try {
       if (lista.size() > 0) {
           for (Integer valor : lista) {
               logger.warning("Crea el nuevo registro de Categoria Condicion");
               logger.warning("Crea id evento " +valor);
               Row registro = null;
               //NameValuePairs nuevoRow = new NameValuePairs();
               
               TreeTcaEventoEnmiendaRowImpl nuevoRow = (TreeTcaEventoEnmiendaRowImpl) this.createRow();
               SequenceImpl sqCategoria = new SequenceImpl("TRE_TCA_EVENTO_CONDICION_SEQ", getDBTransaction());
               oracle.jbo.domain.Number idEventos = null;
               idEventos = sqCategoria.getSequenceNumber();
               Long idEventosLong = new Long(idEventos.longValue());
               
               logger.warning("Crea id evento enmendada " + idEventosLong);
               nuevoRow.setAttribute("Id", idEventosLong);
               nuevoRow.setAttribute("IdCondicion", idEnmendada);
               nuevoRow.setAttribute("IdTcaEvento", valor);
               //nuevoRow.setNewRowState(Row.STATUS_NEW);
               insertRow(nuevoRow);
               //registro = this.createAndInitRow(nuevoRow);
           }
       }
    } catch (Exception ex) {
       logger.severe("Error al ingresar categoria ");
       logger.severe("Error en categoria: ",ex);
       respuesta = Boolean.FALSE;
    }
        if(respuesta){
           // getDBTransaction().commit();  
            }
    logger.warning("Termina metodo de ingresar eventos");
    logger.warning("respuesta" + respuesta);
    return respuesta;
    }
}

