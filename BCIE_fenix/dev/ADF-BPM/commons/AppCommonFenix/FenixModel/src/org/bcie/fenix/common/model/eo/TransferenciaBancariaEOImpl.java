package org.bcie.fenix.common.model.eo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 10 11:29:22 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransferenciaBancariaEOImpl extends EntityImpl {
    
    private static ADFLogger logger = ADFLogger.createADFLogger(TransferenciaBancariaEOImpl.class);
    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        IdContratoDesembolso,
        IdInstruccionPago,
        MontoTransferencia,
        ReferenciaMsj,
        BhqTransferencia,
        EnConsolidacion,
        FechaRegistro,
        BanEstatus,
        IdConsolidacionPadre,
        EsConsolidacionPadre,
        IdBancoTransferencia,
        NombreBancoTransferencia,
        NumeroCuenta,
        NombreCuenta,
        IdTcaTipoMoneda,
        NumeroReserva,
        IdOperacion,
        TipoMensaje,
        TipoOpcionBenef,
        NumeroCtaBenef,
        IdentificadorBenef,
        BeneficiarioBenef,
        DireccionBenef,
        TipoOpcionBanBenef,
        NumeroCtaBanBenef,
        IdentificadorBanBenef,
        BeneficiarioBanBenef,
        DireccionBanBenef,
        TipoOpcionBanInter,
        NumeroCtaBanInter,
        IdentificadorBanInter,
        BeneficiarioBanInter,
        DireccionBanInter,
        EstadoInstruccion,
        ContratoDesembolsoEO,
        OperacionEO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int IDCONTRATODESEMBOLSO = AttributesEnum.IdContratoDesembolso.index();
    public static final int IDINSTRUCCIONPAGO = AttributesEnum.IdInstruccionPago.index();
    public static final int MONTOTRANSFERENCIA = AttributesEnum.MontoTransferencia.index();
    public static final int REFERENCIAMSJ = AttributesEnum.ReferenciaMsj.index();
    public static final int BHQTRANSFERENCIA = AttributesEnum.BhqTransferencia.index();
    public static final int ENCONSOLIDACION = AttributesEnum.EnConsolidacion.index();
    public static final int FECHAREGISTRO = AttributesEnum.FechaRegistro.index();
    public static final int BANESTATUS = AttributesEnum.BanEstatus.index();
    public static final int IDCONSOLIDACIONPADRE = AttributesEnum.IdConsolidacionPadre.index();
    public static final int ESCONSOLIDACIONPADRE = AttributesEnum.EsConsolidacionPadre.index();
    public static final int IDBANCOTRANSFERENCIA = AttributesEnum.IdBancoTransferencia.index();
    public static final int NOMBREBANCOTRANSFERENCIA = AttributesEnum.NombreBancoTransferencia.index();
    public static final int NUMEROCUENTA = AttributesEnum.NumeroCuenta.index();
    public static final int NOMBRECUENTA = AttributesEnum.NombreCuenta.index();
    public static final int IDTCATIPOMONEDA = AttributesEnum.IdTcaTipoMoneda.index();
    public static final int NUMERORESERVA = AttributesEnum.NumeroReserva.index();
    public static final int IDOPERACION = AttributesEnum.IdOperacion.index();
    public static final int TIPOMENSAJE = AttributesEnum.TipoMensaje.index();
    public static final int TIPOOPCIONBENEF = AttributesEnum.TipoOpcionBenef.index();
    public static final int NUMEROCTABENEF = AttributesEnum.NumeroCtaBenef.index();
    public static final int IDENTIFICADORBENEF = AttributesEnum.IdentificadorBenef.index();
    public static final int BENEFICIARIOBENEF = AttributesEnum.BeneficiarioBenef.index();
    public static final int DIRECCIONBENEF = AttributesEnum.DireccionBenef.index();
    public static final int TIPOOPCIONBANBENEF = AttributesEnum.TipoOpcionBanBenef.index();
    public static final int NUMEROCTABANBENEF = AttributesEnum.NumeroCtaBanBenef.index();
    public static final int IDENTIFICADORBANBENEF = AttributesEnum.IdentificadorBanBenef.index();
    public static final int BENEFICIARIOBANBENEF = AttributesEnum.BeneficiarioBanBenef.index();
    public static final int DIRECCIONBANBENEF = AttributesEnum.DireccionBanBenef.index();
    public static final int TIPOOPCIONBANINTER = AttributesEnum.TipoOpcionBanInter.index();
    public static final int NUMEROCTABANINTER = AttributesEnum.NumeroCtaBanInter.index();
    public static final int IDENTIFICADORBANINTER = AttributesEnum.IdentificadorBanInter.index();
    public static final int BENEFICIARIOBANINTER = AttributesEnum.BeneficiarioBanInter.index();
    public static final int DIRECCIONBANINTER = AttributesEnum.DireccionBanInter.index();
    public static final int ESTADOINSTRUCCION = AttributesEnum.EstadoInstruccion.index();
    public static final int CONTRATODESEMBOLSOEO = AttributesEnum.ContratoDesembolsoEO.index();
    public static final int OPERACIONEO = AttributesEnum.OperacionEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransferenciaBancariaEOImpl() {
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Long id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("org.bcie.fenix.common.model.eo.TransferenciaBancariaEO");
    }


    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            logger.warning("RowInconsistentException ContratoDesembolsoEO");
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }
}

