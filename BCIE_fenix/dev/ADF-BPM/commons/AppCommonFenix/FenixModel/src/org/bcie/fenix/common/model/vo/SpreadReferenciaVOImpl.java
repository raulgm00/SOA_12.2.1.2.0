package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.SpreadReferenciaVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 18 02:37:45 CST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SpreadReferenciaVOImpl extends ViewObjectImpl implements SpreadReferenciaVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public SpreadReferenciaVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the variable value for varCodigo.
     * @return variable value for varCodigo
     */
    public String getvarCodigo() {
        return (String) ensureVariableManager().getVariableValue("varCodigo");
    }

    /**
     * Sets <code>value</code> for variable varCodigo.
     * @param value value to bind as varCodigo
     */
    public void setvarCodigo(String value) {
        ensureVariableManager().setVariableValue("varCodigo", value);
    }
    
    public String obtenerDescripcionSpreadReferencia(String codigo){
        logger.warning("Dentro de obtenerDescripcionSpreadReferencia codigo: " + codigo);
        
        //variable Map que se va retornar
        String descripcionSpreadReferencia = null;
        //variables temporales que se recuperan del criterio de busqueda
        
        try {
            ViewCriteria criteria = this.getViewCriteriaManager().getViewCriteria("SpreadReferenciaVOCriteria");
            criteria.ensureVariableManager().setVariableValue("varCodigo", codigo);
            this.applyViewCriteria(criteria);
            this.executeQuery();
            if(null != this.getRowAtRangeIndex(0)){
                Row rowTasaReferenciaVO = this.getRowAtRangeIndex(0);
                
                descripcionSpreadReferencia = (String) rowTasaReferenciaVO.getAttribute("CodigoTasaReferenciaSpread");
                
            } else{
                logger.log(ADFLogger.WARNING, "Criterio de busqueda vacio, con el codigo: " + codigo);
            }
            
        } catch (Exception ex) {
            logger.log(ADFLogger.ERROR, "Error en consultar.", ex);
        } finally {
            //This takes care of removing the applied VC.
            this.getViewCriteriaManager().removeApplyViewCriteriaName("SpreadReferenciaVOCriteria");
        }
        logger.warning("descripcionTasaReferencia: " + descripcionSpreadReferencia);
        
        return descripcionSpreadReferencia;
    }
    
    public BigDecimal obtenerValorTasaSpreadActual(){
        logger.warning("Entra en obtenerValorTasaSpreadActual");
        BigDecimal valorTasaSpread = null;
        try{
            if(null != this.getRowAtRangeIndex(0)){
                Row rowSpreadVO = this.getRowAtRangeIndex(0);
                
                valorTasaSpread = (BigDecimal) rowSpreadVO.getAttribute("ValorActual");
                
            } else{
                logger.warning("No se obtuvo el row con el codigo");
            }
        }catch(Exception e){
            logger.warning("Error en obtenerValorTasaSpreadActual.", e);
        }
        logger.warning("Valor de la tasa spread actual : " + valorTasaSpread);
        return valorTasaSpread;
    }
    
}

