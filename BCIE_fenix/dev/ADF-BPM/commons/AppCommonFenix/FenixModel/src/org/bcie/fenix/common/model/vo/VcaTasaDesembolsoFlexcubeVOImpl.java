package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;

import org.bcie.fenix.common.model.vo.common.VcaTasaDesembolsoFlexcubeVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 14 16:31:01 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VcaTasaDesembolsoFlexcubeVOImpl extends ViewObjectImpl implements VcaTasaDesembolsoFlexcubeVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public VcaTasaDesembolsoFlexcubeVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void filtrarPorCodigoMoneda(String codigoMoneda){
        logger.warning("Inicia metodo filtrarPorCodigoMoneda");
        ViewCriteria criteria = null;
        
        if(null == codigoMoneda){
            logger.warning("Parametro codigoMoneda requerido es NULL.");
            return;
        }
        
        criteria = this.getViewCriteriaManager().getViewCriteria("VcaTasaDesembolsoFlexcubePorMonedaVC");
        criteria.ensureVariableManager().setVariableValue("vCodigoMoneda", codigoMoneda);
        this.applyViewCriteria(criteria);
        this.executeQuery();
        
        logger.warning("Registros de tasas encontrados: " + getEstimatedRowCount());
        
        this.getViewCriteriaManager().removeApplyViewCriteriaName("VcaTasaDesembolsoFlexcubePorMonedaVC");
        logger.warning("Termina metodo filtrarPorCodigoMoneda");
    }
    
    public String obtenerDescripcionTasa(String codigo){
        logger.warning("Inicia metodo obtenerDescripcionTasa");
        ViewCriteria criteria = null;
        String descripcionTasa = null;
        Row filaRecuperada = null;
        
        if(null == codigo){
            logger.warning("Parametro codigo requerido es NULL.");
            return null;
        }
        
        criteria = this.getViewCriteriaManager().getViewCriteria("VcaTasaDesembolsoFlexcubeVOCriteriaByCodigo");
        criteria.ensureVariableManager().setVariableValue("vCodigo", codigo);
        this.applyViewCriteria(criteria);
        this.executeQuery();
        
        logger.warning("Registros de tasas encontrados: " + getEstimatedRowCount());
        if(getEstimatedRowCount() > 0){
            setCurrentRow(first());
            filaRecuperada = getCurrentRow();
            if(filaRecuperada.getAttribute("DescripcionTasa") != null){
                descripcionTasa = filaRecuperada.getAttribute("DescripcionTasa").toString();
            }
            
        }
        
        this.getViewCriteriaManager().removeApplyViewCriteriaName("VcaTasaDesembolsoFlexcubeVOCriteriaByCodigo");
        logger.warning("Valor a retornar descripcionTasa: " + descripcionTasa);
        logger.warning("Termina metodo obtenerDescripcionTasa");
        return descripcionTasa;
    }

    /**
     * Returns the variable value for vCodigoMoneda.
     * @return variable value for vCodigoMoneda
     */
    public String getvCodigoMoneda() {
        return (String) ensureVariableManager().getVariableValue("vCodigoMoneda");
    }

    /**
     * Sets <code>value</code> for variable vCodigoMoneda.
     * @param value value to bind as vCodigoMoneda
     */
    public void setvCodigoMoneda(String value) {
        ensureVariableManager().setVariableValue("vCodigoMoneda", value);
    }

    /**
     * Returns the variable value for vCodigo.
     * @return variable value for vCodigo
     */
    public String getvCodigo() {
        return (String) ensureVariableManager().getVariableValue("vCodigo");
    }

    /**
     * Sets <code>value</code> for variable vCodigo.
     * @param value value to bind as vCodigo
     */
    public void setvCodigo(String value) {
        ensureVariableManager().setVariableValue("vCodigo", value);
    }
}

