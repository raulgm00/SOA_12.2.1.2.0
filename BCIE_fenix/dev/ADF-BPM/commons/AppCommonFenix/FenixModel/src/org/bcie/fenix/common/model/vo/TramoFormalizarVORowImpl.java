package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 08 11:33:23 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TramoFormalizarVORowImpl extends ViewRowImpl {


    public static final int ENTITY_TRAMOFORMALIZAREO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BanEstatus,
        FechaRegistro,
        Id,
        IdContrato,
        Monto,
        NombreTramo,
        Porcentaje,
        MontoTotal;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BANESTATUS = AttributesEnum.BanEstatus.index();
    public static final int FECHAREGISTRO = AttributesEnum.FechaRegistro.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int IDCONTRATO = AttributesEnum.IdContrato.index();
    public static final int MONTO = AttributesEnum.Monto.index();
    public static final int NOMBRETRAMO = AttributesEnum.NombreTramo.index();
    public static final int PORCENTAJE = AttributesEnum.Porcentaje.index();
    public static final int MONTOTOTAL = AttributesEnum.MontoTotal.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TramoFormalizarVORowImpl() {
    }

    /**
     * Gets TramoFormalizarEO entity object.
     * @return the TramoFormalizarEO
     */
    public EntityImpl getTramoFormalizarEO() {
        return (EntityImpl) getEntity(ENTITY_TRAMOFORMALIZAREO);
    }

    /**
     * Gets the attribute value for BAN_ESTATUS using the alias name BanEstatus.
     * @return the BAN_ESTATUS
     */
    public Integer getBanEstatus() {
        return (Integer) getAttributeInternal(BANESTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for BAN_ESTATUS using the alias name BanEstatus.
     * @param value value to set the BAN_ESTATUS
     */
    public void setBanEstatus(Integer value) {
        setAttributeInternal(BANESTATUS, value);
    }

    /**
     * Gets the attribute value for FECHA_REGISTRO using the alias name FechaRegistro.
     * @return the FECHA_REGISTRO
     */
    public Timestamp getFechaRegistro() {
        return (Timestamp) getAttributeInternal(FECHAREGISTRO);
    }

    /**
     * Sets <code>value</code> as attribute value for FECHA_REGISTRO using the alias name FechaRegistro.
     * @param value value to set the FECHA_REGISTRO
     */
    public void setFechaRegistro(Timestamp value) {
        setAttributeInternal(FECHAREGISTRO, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Long getId() {
        return (Long) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Long value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for ID_CONTRATO using the alias name IdContrato.
     * @return the ID_CONTRATO
     */
    public Long getIdContrato() {
        return (Long) getAttributeInternal(IDCONTRATO);
    }

    /**
     * Sets <code>value</code> as attribute value for ID_CONTRATO using the alias name IdContrato.
     * @param value value to set the ID_CONTRATO
     */
    public void setIdContrato(Long value) {
        setAttributeInternal(IDCONTRATO, value);
    }

    /**
     * Gets the attribute value for MONTO using the alias name Monto.
     * @return the MONTO
     */
    public BigDecimal getMonto() {
        return (BigDecimal) getAttributeInternal(MONTO);
    }

    /**
     * Sets <code>value</code> as attribute value for MONTO using the alias name Monto.
     * @param value value to set the MONTO
     */
    public void setMonto(BigDecimal value) {
        setAttributeInternal(MONTO, value);
    }

    /**
     * Gets the attribute value for NOMBRE_TRAMO using the alias name NombreTramo.
     * @return the NOMBRE_TRAMO
     */
    public String getNombreTramo() {
        return (String) getAttributeInternal(NOMBRETRAMO);
    }

    /**
     * Sets <code>value</code> as attribute value for NOMBRE_TRAMO using the alias name NombreTramo.
     * @param value value to set the NOMBRE_TRAMO
     */
    public void setNombreTramo(String value) {
        setAttributeInternal(NOMBRETRAMO, value);
    }

    /**
     * Gets the attribute value for PORCENTAJE using the alias name Porcentaje.
     * @return the PORCENTAJE
     */
    public BigDecimal getPorcentaje() {
        return (BigDecimal) getAttributeInternal(PORCENTAJE);
    }

    /**
     * Sets <code>value</code> as attribute value for PORCENTAJE using the alias name Porcentaje.
     * @param value value to set the PORCENTAJE
     */
    public void setPorcentaje(BigDecimal value) {
        setAttributeInternal(PORCENTAJE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MontoTotal.
     * @return the MontoTotal
     */
    public BigDecimal getMontoTotal() {
        BigDecimal montoTotal = new BigDecimal(0);
        BigDecimal monto = new BigDecimal(0);
        
        // The recommended way to iterate a View Object is via a secondary RowSetIterator             
        RowSetIterator iterator = this.getViewObject().createRowSetIterator(null);
        iterator.reset();
        
        while (iterator.hasNext()) {
            Row row = iterator.next();
            monto = (BigDecimal)row.getAttribute("Monto");
        if(monto != null)
            montoTotal = montoTotal.add(monto);
        }
        
        iterator.closeRowSetIterator();        
        return montoTotal;
    }
}

