package org.bcie.fenix.common.model.vo;

import java.sql.Timestamp;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.FenixModelConstants;
import org.bcie.fenix.common.model.vo.common.CondicionPorValidarVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 29 16:55:02 CDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CondicionPorValidarVOImpl extends ViewObjectImpl implements CondicionPorValidarVO {
    /**
     * This is the default constructor (do not remove).
     */
    
    private static ADFLogger logger = null;
    public CondicionPorValidarVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for pIdOperacion.
     * @return bind variable value for pIdOperacion
     */
    public Long getpIdOperacion() {
        return (Long) getNamedWhereClauseParam("pIdOperacion");
    }

    /**
     * Sets <code>value</code> for bind variable pIdOperacion.
     * @param value value to bind as pIdOperacion
     */
    public void setpIdOperacion(Long value) {
        this.clearCache();
        logger.log(ADFLogger.WARNING, "INTO setpIdOperacion");
        setNamedWhereClauseParam("pIdOperacion", value);
        this.executeQuery();
    }


    public Boolean condicionPorValidar(Long idOperacion){
        logger.log(ADFLogger.WARNING, "INTO obtenerCondicionPorValidar");
        Boolean validar = Boolean.FALSE;
        CondicionIncumplimientoVOImpl condicionIncumplimientoVOImpl = null;
        try{
            setpIdOperacion(idOperacion);
            logger.warning("Cantidad de registros encontrados: " + 
                           this.getEstimatedRowCount());
            if(this.getEstimatedRowCount() > 0){
                validar = Boolean.TRUE;
            }else{
                validar = Boolean.FALSE;
            }
            
        }catch(Exception e){
            logger.log(ADFLogger.WARNING, "Error en obtenerCondicionPorValidar." + e.getClass() + "." + e.getMessage());
        }
        logger.warning("Valor de retorno : " + validar);
        return validar;
    }


}

