package org.bcie.fenix.common.model.vo;

import java.util.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.ViewObjectImpl;
import java.math.BigDecimal;
import org.bcie.fenix.common.model.FenixModelConstants;
import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.am.FenixAdquisicionAMImpl;
import org.bcie.fenix.common.model.vo.common.ContratadosVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 23 21:19:20 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContratadosVOImpl extends ViewObjectImpl implements ContratadosVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public ContratadosVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for varIdNoObjecion.
     * @return bind variable value for varIdNoObjecion
     */
    public Long getvarIdNoObjecion() {
        return (Long) getNamedWhereClauseParam("varIdNoObjecion");
    }

    /**
     * Sets <code>value</code> for bind variable varIdNoObjecion.
     * @param value value to bind as varIdNoObjecion
     */
    public void setvarIdNoObjecion(Long value) {
        setNamedWhereClauseParam("varIdNoObjecion", value);
    }

    /**
     * Returns the bind variable value for varIdTcaTipoPerfil.
     * @return bind variable value for varIdTcaTipoPerfil
     */
    public Integer getvarIdTcaTipoPerfil() {
        return (Integer) getNamedWhereClauseParam("varIdTcaTipoPerfil");
    }

    /**
     * Sets <code>value</code> for bind variable varIdTcaTipoPerfil.
     * @param value value to bind as varIdTcaTipoPerfil
     */
    public void setvarIdTcaTipoPerfil(Integer value) {
        setNamedWhereClauseParam("varIdTcaTipoPerfil", value);
    }
    
    public void setWhereParams(Long idNoObjecion, Integer idTcaTipoPerfil) {
        logger.warning("Into setWhereParams on ContratadosVOImpl.");
        FenixAMImpl fenixAMImpl = (FenixAMImpl) this.getRootApplicationModule();
        FenixAdquisicionAMImpl fenixAdquisicionesAMImpl = (FenixAdquisicionAMImpl)fenixAMImpl.getFenixAdquisicionAM();
        logger.warning("Contrados.setWhereParams.  idNoObjecion:"+ idNoObjecion + ", idTcaTipoPerfil:" + idTcaTipoPerfil);
        if(null!=idNoObjecion){
            setNamedWhereClauseParam("varIdNoObjecion", idNoObjecion);
        }
        if(null!=idTcaTipoPerfil){
            setNamedWhereClauseParam("varIdTcaTipoPerfil", idTcaTipoPerfil);
        }
        executeQuery();
        Integer idPais=null;
        String nombrePaises=null;
        RowSetIterator rs = this.createRowSetIterator(null);
                
        while(rs.hasNext()) {
            ContratadosVORowImpl contratadoRow = (ContratadosVORowImpl)rs.next();
            idPais=null;
            nombrePaises=null;
            String nombre =  (String)contratadoRow.getAttribute("Nombre");

            
            if (!nombre.equals("X")) {
                contratadoRow.setAttribute("NombreTr", contratadoRow.getAttribute("Nombre"));
                //contratadoRow.setAttribute("NacionalidadTr", contratadoRow.getAttribute("Nacionalidad"));
                if(null!= contratadoRow.getAttribute("IdCatPais")){
                        idPais=(Integer) contratadoRow.getAttribute("IdCatPais");
                        nombrePaises=fenixAdquisicionesAMImpl.getTcaPaisesVO().nombrePais(idPais);
                        if(null!=nombrePaises){
                            contratadoRow.setAttribute("NacionalidadTr",nombrePaises);
                        }
                    }
            } else {
                contratadoRow.setAttribute("NombreTr", contratadoRow.getAttribute("NombreTr"));
               // contratadoRow.setAttribute("NacionalidadTr", contratadoRow.getAttribute("NacionalidadTr"));
               if(null!= contratadoRow.getAttribute("IdCatPais")){
                       idPais=(Integer) contratadoRow.getAttribute("IdCatPais");
                       nombrePaises=fenixAdquisicionesAMImpl.getTcaPaisesVO().nombrePais(idPais);
                       if(null!=nombrePaises){
                           contratadoRow.setAttribute("NacionalidadTr",nombrePaises);
                       }
                   }
            }

            

            fenixAdquisicionesAMImpl.getContratadosAdjudicatariosVO().cargarContratados((String)contratadoRow.getAttribute("Nombre"),
                                                                                        nombrePaises, 
                                                                                        (BigDecimal)contratadoRow.getAttribute("Monto"),
                                                                                        (Long)contratadoRow.getAttribute("Id"));
        }    
        rs.closeRowSetIterator();
        logger.info("this.getEstimatedRowCount(): "+this.getEstimatedRowCount());
    }

    public void setWhereParamsContratados(Long idNoObjecion, Integer idTcaTipoPerfil) {
        logger.warning("Contrados.setWhereParamsContratados. on ContratadosVOImpl idNoObjecion:"+ idNoObjecion + ", idTcaTipoPerfil:" + idTcaTipoPerfil);
        if(null!=idNoObjecion){
            setNamedWhereClauseParam("varIdNoObjecion", idNoObjecion);
        }
        if(null!=idTcaTipoPerfil){
            setNamedWhereClauseParam("varIdTcaTipoPerfil", idTcaTipoPerfil);
        }
        executeQuery();
                
        logger.info("this.getEstimatedRowCount(): "+this.getEstimatedRowCount());
    }
    
    /**
     *  M&eacute;todo para crear  un nuevo registro de contratados
     *  @author Jonathan Ruiz
     */
    public void crearRowContratado(Long idNoObjecion){
        logger.log(ADFLogger.WARNING, "Into crearRowContratado on ContratadosVOImpl");
        
        // Obtenemos siguiente valor de la secuencia
        oracle.jbo.domain.Number idConcursante = null;
        SequenceImpl seqConcursante = null;

        seqConcursante = new SequenceImpl("CONCURSANTE_ADQUISICION_SEQ", getDBTransaction());
        idConcursante = seqConcursante.getSequenceNumber();
        
        logger.log(ADFLogger.WARNING, "idConcursante:" + idConcursante.longValue());
        
        // Agregamos el nuevo oferente
        Row row = this.createRow();
        row.setAttribute("Id", idConcursante.longValue());
        row.setAttribute("IdNoObjecion", idNoObjecion);
        row.setAttribute("IdTcaTipoPerfil",  FenixModelConstants.ID_TIPO_PERFIL_CONTRATADO);
        row.setAttribute("Nombre", "X");
        row.setAttribute("IdCatPais", null);
        row.setAttribute("NombreTr", "");
        row.setAttribute("NacionalidadTr", "");
        row.setAttribute("FechaRegistro", new java.sql.Timestamp(new Date().getTime()));
        this.insertRow(row);
        this.setCurrentRow(row);
    }
    
    /**
     *  M&eacujte;todo para contratar un adjudicatario
     *  @author Jonathan Ruiz
     */
    public void contratarAdjudicatario(Row adjudicatario){
        logger.warning("Into contratarAdjudicatario on ContratadosVOImpl");
        
        if (null != adjudicatario) {
            // Obtenemos siguiente valor de la secuencia
            oracle.jbo.domain.Number idConcursante = null;
            SequenceImpl seqConcursante = null;

            seqConcursante = new SequenceImpl("CONCURSANTE_ADQUISICION_SEQ", getDBTransaction());
            idConcursante = seqConcursante.getSequenceNumber();
            
            // Agregamos el nuevo oferente
            Row row = this.createRow();
            row.setAttribute("Id", idConcursante.longValue());
            row.setAttribute("IdNoObjecion", adjudicatario.getAttribute("IdNoObjecion"));
            row.setAttribute("IdTcaTipoPerfil",  FenixModelConstants.ID_TIPO_PERFIL_CONTRATADO);
            row.setAttribute("Nombre", adjudicatario.getAttribute("Nombre"));
            row.setAttribute("IdCatPais", adjudicatario.getAttribute("IdCatPais"));
            row.setAttribute("NombreTr", adjudicatario.getAttribute("NombreTr"));
            row.setAttribute("NacionalidadTr", adjudicatario.getAttribute("NacionalidadTr"));
            row.setAttribute("Monto", adjudicatario.getAttribute("Monto"));
            row.setAttribute("FechaRegistro", adjudicatario.getAttribute("FechaRegistro"));
            this.insertRow(row);
            this.setCurrentRow(row);
        }
    }
    
    /**
     *  M&eacujte;todo para eliminar el contratado seleccionado
     *  @author Jonathan Ruiz
     */
    public void eliminarContratado(Row contratado){
        logger.log(ADFLogger.WARNING, "Into eliminarContratado in ContratadosVOImpl");
        if (null != contratado) {
            contratado.remove();
        }
    }
    
    public long numRegistros() {
        return this.getEstimatedRowCount();
    }
    
    public void fusionarCamposTrasient() {
        logger.warning("Into fusionarCamposTrasient in ContratadosVOImpl");
        RowSetIterator rs = this.createRowSetIterator(null);
        
        while(rs.hasNext()) {
            ContratadosVORowImpl contratadoRow = (ContratadosVORowImpl)rs.next();
            
            if (null != contratadoRow.getAttribute("NombreTr")) {
                contratadoRow.setAttribute("Nombre", contratadoRow.getAttribute("NombreTr"));
                //contratadoRow.setAttribute("Nacionalidad", contratadoRow.getAttribute("NacionalidadTr"));
            }
            
            logger.warning("contratado.Id:"+contratadoRow.getId());
            logger.warning("contratado.Nombre:"+contratadoRow.getNombre());
            logger.warning("contratado.NacionalidadTr:"+contratadoRow.getNacionalidadTr());
            logger.warning("contratado.IdCatPais:"+contratadoRow.getIdCatPais());
        }
        rs.closeRowSetIterator();
    }
    
    /**
     * @return campos no validos
     * -1 los campos son validos
     * 0 todos no validos
     * 1 instancia no valida
     */
    public int validarCampos(boolean validarInstAprobacion) {
        logger.warning("Into validarCampos in ContratadosVOImpl");
        RowSetIterator rs = this.createRowSetIterator(null);
        int camposValidos = -1;
        boolean nombresValidos = Boolean.TRUE;
        boolean nacionalidadesValidos = Boolean.TRUE;
        boolean montosValidos = Boolean.TRUE;
        boolean instanciasValidos = Boolean.TRUE;
        while(rs.hasNext()) {
            ContratadosVORowImpl contratadoRow = (ContratadosVORowImpl)rs.next();
            String nombre = (String)contratadoRow.getAttribute("NombreTr");
            String nacionalidad = (String)contratadoRow.getAttribute("NacionalidadTr");
            BigDecimal monto = (BigDecimal)contratadoRow.getAttribute("Monto");
            Integer instancia = (Integer)contratadoRow.getAttribute("IdTcaInstanciaAprobacion");
            
            if (null == nombre) {
                nombresValidos = Boolean.FALSE;
            } else {
                if (nombre.trim().equals("")) {
                    nombresValidos = Boolean.FALSE;
                }
            }
            
            if (null == nacionalidad) {
                nacionalidadesValidos = Boolean.FALSE;
            } else {
                if (nacionalidad.trim().equals("")) {
                    nacionalidadesValidos = Boolean.FALSE;
                }
            }
            
            if (null == monto) {
                montosValidos = Boolean.FALSE;
            }
            
            if (validarInstAprobacion) {
                if (null == instancia) {
                    instanciasValidos = Boolean.FALSE;
                }
            }
        }
        rs.closeRowSetIterator();
        
        if (!validarInstAprobacion && (!montosValidos || !nombresValidos || !nacionalidadesValidos) ) {
            camposValidos = 0;
        } else if (validarInstAprobacion && (!instanciasValidos || !montosValidos || !nombresValidos || !nacionalidadesValidos)) {
            camposValidos = 1;
        }
        
        logger.log(ADFLogger.TRACE, "Into contratados.validarCampos."+camposValidos);
        return camposValidos;
    }
}

