package org.bcie.fenix.common.model.vo;

import java.util.HashMap;
import java.util.Map;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.am.FenixAdquisicionAMImpl;
import org.bcie.fenix.common.model.vo.common.ConsultaDocumentoAdquisicionVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 25 10:51:58 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ConsultaDocumentoAdquisicionVOImpl extends ViewObjectImpl implements ConsultaDocumentoAdquisicionVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public ConsultaDocumentoAdquisicionVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }

    /**
     * Returns the bind variable value for varIdAdquisicion.
     * @return bind variable value for varIdAdquisicion
     */
    public Long getvarIdAdquisicion() {
        return (Long) getNamedWhereClauseParam("varIdAdquisicion");
    }

    /**
     * Sets <code>value</code> for bind variable varIdAdquisicion.
     * @param value value to bind as varIdAdquisicion
     */
    public void setvarIdAdquisicion(Long value) {
        logger.warning("Entra numAdquisicion: " + value);
        if (value != null) {
            setNamedWhereClauseParam("varIdAdquisicion", value);
        }
        this.executeQuery();
        logger.warning("Numero de rows obtenidos :" + this.getRowCount());
    }
    
    public Boolean validaDocumentoAsociado(Long idAdquisicion) {
        logger.warning("inside validaDocumentoAsociado.");
        Boolean result = Boolean.FALSE;
        
        setvarIdAdquisicion(idAdquisicion);
        
        
        if(this.getEstimatedRowCount() > 0){            
            result = Boolean.TRUE;
        } else {
            logger.warning("El row es NULL");
        }
        
        logger.warning("result: " + result);
        return (result);
    }
    
    public Boolean validaDocumentoAsociadoPorTipoDocumento(Long idAdquisicion, Integer idTipoDocumento, Long numSerie) {
        logger.warning("inside validaDocumentoAsociadoPorTipoDocumento.");
        Boolean result = Boolean.FALSE;
        setvarIdAdquisicion(idAdquisicion);
        executeQuery();
                try {
                ViewCriteria criteria = null;
                criteria=this.getViewCriteriaManager().getViewCriteria("ConsultaDocumentoAdquisicionVOCriteria");
                criteria.ensureVariableManager().setVariableValue("vardoc", idTipoDocumento);
                criteria.ensureVariableManager().setVariableValue("varserie", numSerie);
                this.applyViewCriteria(criteria);
                    logger.warning("registros obtenidos: " + getEstimatedRowCount());
                    if(getEstimatedRowCount()>0){
                            result = Boolean.TRUE;
                        }
                
                }catch(Exception e){
                    logger.log(ADFLogger.ERROR, "Error en inicioLAFT " + e.getClass() + ":" + e.getMessage());
                
                } finally {
                    //Siempre removemos el criterio de busqueda
                    this.getViewCriteriaManager().removeApplyViewCriteriaName("ConsultaDocumentoAdquisicionVOCriteria");
                }
        
        logger.warning("result: " + result);
        return (result);
    }

    /**
     * Returns the variable value for vardoc.
     * @return variable value for vardoc
     */
    public Integer getvardoc() {
        return (Integer) ensureVariableManager().getVariableValue("vardoc");
    }

    /**
     * Sets <code>value</code> for variable vardoc.
     * @param value value to bind as vardoc
     */
    public void setvardoc(Integer value) {
        ensureVariableManager().setVariableValue("vardoc", value);
    }

    /**
     * Returns the variable value for varserie.
     * @return variable value for varserie
     */
    public Long getvarserie() {
        return (Long) ensureVariableManager().getVariableValue("varserie");
    }

    /**
     * Sets <code>value</code> for variable varserie.
     * @param value value to bind as varserie
     */
    public void setvarserie(Long value) {
        ensureVariableManager().setVariableValue("varserie", value);
    }
}

