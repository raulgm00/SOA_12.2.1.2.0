package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.am.FenixAMImpl;
import org.bcie.fenix.common.model.vo.common.TccAgregarVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 01 11:29:34 CST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TccAgregarVOImpl extends ViewObjectImpl implements TccAgregarVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public TccAgregarVOImpl() {
        
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void inicializarAgregarVO(Long idOperacion){
        logger.log(ADFLogger.TRACE, "Inside inicializarAgregarVO.");

        this.crearRowAgregar();
        this.getCurrentRow().setAttribute("IdOperacion", idOperacion);
        
        // Execute query de los LOVs del row (por si se eliminó un registro)
        TccAgregarVORowImpl currentRow = (TccAgregarVORowImpl)this.getCurrentRow();
        currentRow.getTccAgregarTerminoLOV().executeQuery();
        currentRow.getTccAgregarCondicionLOV().executeQuery();
        currentRow.getTccAgregarComisionLOV().executeQuery();
    }
    
    public void inicializarAgregarComision(Long idOperacion){
        logger.warning("Entra en inicializarAgregarComision.");
        try{
            this.crearRowAgregar();
            this.getCurrentRow().setAttribute("IdOperacion", idOperacion);
            
            // Execute query de los LOVs del row (por si se eliminó un registro)
            TccAgregarVORowImpl currentRow = (TccAgregarVORowImpl)this.getCurrentRow();
            currentRow.getTccAgregarComisionLOV().executeQuery();
            logger.warning("Termina metodo inicializarAgregarComision correctamente.");
        }catch(Exception e){
            logger.warning("Error al inicializar agregar comision.", e);
        }
    }
    
    private void crearRowAgregar(){
        logger.log(ADFLogger.TRACE, "Inside crearRowAgregar.");
        
        this.clearCache(); // Limpiamos VO
        Row row = this.createRow();
        row.setAttribute("Id", Integer.valueOf(1));
        
        this.insertRowAtRangeIndex(0, row); // Insertamos row en VO
        this.setCurrentRow(row); // Asignamos nuevo row como current
    }
    
    public void inicializarTccAgregarVoConIdOperacionYIdProcesoBpm(Long idOperacion,Integer idTareaBpm){
        logger.warning("Dentro de inicializarTccAgregarVoConIdOperacionYIdProceso");
        logger.warning("idOperacion :"+idOperacion);
        logger.warning("idTareaBpm : "+idTareaBpm);
        FenixAMImpl fenixAM = null;
        Integer idProcesoBpm = null;
        // Crea una instancia del AM
        fenixAM = (FenixAMImpl)this.getRootApplicationModule();
        idProcesoBpm = fenixAM.getTcaTareaBpmVO().obtenerIdProcesoBpmPorIdTareaBpm(idTareaBpm);
        this.crearRowAgregar();
        this.getCurrentRow().setAttribute("IdOperacion", idOperacion);
        this.getCurrentRow().setAttribute("IdProcesoBpm", idProcesoBpm);
        // Execute query de los LOVs del row (por si se eliminó un registro)
        TccAgregarVORowImpl currentRow = (TccAgregarVORowImpl)this.getCurrentRow();
        currentRow.getTccAgregarTerminoLOV().executeQuery();
        currentRow.getTccAgregarCondicionLOV().executeQuery();
        currentRow.getTccAgregarComisionLOV().executeQuery();
        logger.warning("Fuera de inicializarTccAgregarVoConIdOperacionYIdProceso");
    }
}

