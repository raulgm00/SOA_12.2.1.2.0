package org.bcie.fenix.common.model.vo;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.vo.common.TcaTareaBpmVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 22 16:20:56 CST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TcaTareaBpmVOImpl extends ViewObjectImpl implements TcaTareaBpmVO {
    
    private static ADFLogger logger = null;
    
    /**
     * This is the default constructor (do not remove).
     */
    public TcaTareaBpmVOImpl() {
        if (logger == null) {
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public Integer obtenerIdProcesoBpmPorIdTareaBpm(Integer idTareaBpm){
        logger.warning("Dentro de obtenerIdProcesoBpmPorIdTareaBpm");
        Integer idProcesoBpm = null;
        Row row = null;
        try{
            ViewCriteria viewCriteria =this.getViewCriteriaManager().getViewCriteria("obtenerIdProcesoBpmPorIdTareaBpmVC");
            viewCriteria.ensureVariableManager().setVariableValue("idTcaTareaBpmVar", idTareaBpm);
            this.applyViewCriteria(viewCriteria);
            this.executeQuery();
            row =this.getRowAtRangeIndex(0);
            if(null != row){
                idProcesoBpm = (Integer) row.getAttribute("IdProcesoBpm");
                logger.warning("Se recupera el IdProcesoBpm :"+idProcesoBpm);
            }else{
                logger.severe("Row es nulo,no se obtiene un idProcesoBpm");
            }
        }catch(Exception ex){
            logger.severe("Error en obtenerIdProcesoBpmPorIdTareaBpm : "+ex);
        }finally{
            //This takes care of removing the applied VC.
            this.getViewCriteriaManager().removeApplyViewCriteriaName("obtenerIdProcesoBpmPorIdTareaBpmVC");
        }
        logger.warning("Fuera de obtenerIdProcesoBpmPorIdTareaBpm,return : "+idProcesoBpm);
        return idProcesoBpm;
    }

    /**
     * Returns the variable value for idTcaTareaBpmVar.
     * @return variable value for idTcaTareaBpmVar
     */
    public Integer getidTcaTareaBpmVar() {
        return (Integer) ensureVariableManager().getVariableValue("idTcaTareaBpmVar");
    }

    /**
     * Sets <code>value</code> for variable idTcaTareaBpmVar.
     * @param value value to bind as idTcaTareaBpmVar
     */
    public void setidTcaTareaBpmVar(Integer value) {
        ensureVariableManager().setVariableValue("idTcaTareaBpmVar", value);
    }
}

