package org.bcie.fenix.common.model.vo;

import java.math.BigDecimal;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;

import org.bcie.fenix.common.model.am.FenixImplementacionPctAMImpl;
import org.bcie.fenix.common.model.vo.common.MontoAmpliacionLineaCredtoVO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Aug 20 19:00:26 CDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MontoAmpliacionLineaCredtoVOImpl extends ViewObjectImpl implements MontoAmpliacionLineaCredtoVO {
    /**
     * This is the default constructor (do not remove).
     */
    private static ADFLogger logger = null;
    public MontoAmpliacionLineaCredtoVOImpl() {
        if(logger == null){
            logger = ADFLogger.createADFLogger(this.getClass());
        }
    }
    
    public void crearRowMontoAmpliacion(Long idLinea, BigDecimal montoAmpliacion){
        logger.warning("Entra en crearRowMontoAmpliacion");
        logger.warning("Linea de credito : " + idLinea);
        logger.warning("Monto de ampliacion : " + montoAmpliacion);
        Row row = null;
        try{
            row = this.createRow();
            row.setAttribute("IdLinea", idLinea);
            row.setAttribute("MontoAmpliacion", montoAmpliacion);
            Boolean actualizo=Boolean.TRUE;
            FenixImplementacionPctAMImpl fenixImplementacionPctAMImpl = null;
            fenixImplementacionPctAMImpl = (FenixImplementacionPctAMImpl) this.getApplicationModule();
            actualizo = fenixImplementacionPctAMImpl.getLineaCreditoVO().actualizarMontoAmpliacion(idLinea, montoAmpliacion);
            this.insertRow(row);
            this.setCurrentRow(row);
            logger.warning("Se crea el row para la linea : " + idLinea);
        }catch(Exception e){
            logger.warning("Error en crearRowMontoAmpliacion.", e);
        }
    }
    
    public void modificarMontoAmpliacion(Long idLinea, BigDecimal montoAmpliacion){
        logger.warning("Entra en actualizaMontoAmpliacion");
        logger.warning("Linea de credito : " + idLinea);
        logger.warning("Monto de ampliacion : " + montoAmpliacion);
        try{
            RowSetIterator iterator = this.createRowSetIterator(null);
            iterator.reset();
            while(iterator.hasNext()){
                MontoAmpliacionLineaCredtoVORowImpl row = (MontoAmpliacionLineaCredtoVORowImpl)iterator.next();
                if(idLinea.compareTo(row.getIdLinea()) == 0){
                    logger.warning("El monto de ampliacion se modifica para la linea : " + idLinea);
                    row.setAttribute("MontoAmpliacion", montoAmpliacion);
                    Boolean actualizo=Boolean.TRUE;
                    FenixImplementacionPctAMImpl fenixImplementacionPctAMImpl = null;
                    fenixImplementacionPctAMImpl = (FenixImplementacionPctAMImpl) this.getApplicationModule();
                    actualizo = fenixImplementacionPctAMImpl.getLineaCreditoVO().actualizarMontoAmpliacion(idLinea, montoAmpliacion);
                    break;
                }
            }
            iterator.closeRowSetIterator();
        }catch(Exception e){
            logger.warning("Error en crearRowMontoAmpliacion.", e);
        }
    }
    
    public Boolean actualizarMontoAmpliacionEnLineaCredito(){
        logger.warning("Entra en actualizaMontoAmpliacion");
        FenixImplementacionPctAMImpl fenixImplementacionPctAMImpl = null;
        fenixImplementacionPctAMImpl = (FenixImplementacionPctAMImpl) this.getApplicationModule();
        Long idLinea = null;
        BigDecimal montoAmpliacion = null;
        Boolean actualizo = Boolean.TRUE;
        Integer contador = 0;
        try{
            logger.warning("Numero de lineas a actualizar : " + this.getEstimatedRowCount());
            RowSetIterator iterator = this.createRowSetIterator(null);
            iterator.reset();
            while(iterator.hasNext()){
                MontoAmpliacionLineaCredtoVORowImpl row = (MontoAmpliacionLineaCredtoVORowImpl)iterator.next();
                
                idLinea = row.getIdLinea();
                montoAmpliacion = row.getMontoAmpliacion();
                actualizo = fenixImplementacionPctAMImpl.getLineaCreditoVO().actualizarMontoAmpliacion(idLinea, montoAmpliacion);
                if(!actualizo){
                    contador ++;
                }
            }
            iterator.closeRowSetIterator();
            if(contador > 0){
                logger.warning("Error al actualizar el monto de ampliacion.");
                actualizo = Boolean.FALSE;
            }else{
                logger.warning("Se actualizo el monto de ampliacion correctamente.");
            }
        }catch(Exception e){
            logger.warning("Error en crearRowMontoAmpliacion.", e);
        }
        logger.warning("Se actualizaron las lineas de credito : " + actualizo);
        return actualizo;
    }
}

