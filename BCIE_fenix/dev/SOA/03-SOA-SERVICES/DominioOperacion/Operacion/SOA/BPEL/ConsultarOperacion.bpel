<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Fri Aug 05 18:18:28 CDT 2016
  Author:  ismael-flores
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="ConsultarOperacion"
               targetNamespace="http://xmlns.oracle.com/DominioOperacion/Operacion/ConsultarOperacion"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/DominioOperacion/Operacion/ConsultarOperacion"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="http://xmlns.bcie.com/OperacionService"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:ns2="http://www.bcie.org/OperacionMO"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns13="http://www.bcie.org/TerminoBO"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns3="http://www.bcie.org/OperacionBO"
         xmlns:ns16="http://www.bcie.org/ResultBO" xmlns:ns15="http://www.bcie.org/CommonBO"
         xmlns:ns9="http://www.bcie.org/LineaCreditoBO" xmlns:ns10="http://www.bcie.org/CondicionBO"
         xmlns:ns6="http://www.bcie.org/ProductoBO" xmlns:ns7="http://www.bcie.org/DeclaracionJuradaBO"
         xmlns:ns12="http://www.bcie.org/DocumentoBO" xmlns:ns14="http://www.bcie.org/ComisionBO"
         xmlns:ns5="http://www.bcie.org/CatalogoBO" xmlns:ns8="http://www.bcie.org/ContratoBO"
         xmlns:ns4="http://www.bcie.org/ClienteBO" xmlns:ns11="http://www.bcie.org/AtributoBO"
         xmlns:ns17="http://www.bcie.org/ErrorBO" xmlns:ns18="http://www.bcie.org/ContratoService"
         xmlns:ns19="http://www.bcie.org/ContratoMO" xmlns:ns20="http://xmlns.bcie.com/DeclaracionJuradaService"
         xmlns:ns21="http://www.bcie.org/DeclaracionJuradaMO" xmlns:ns22="http://xmlns.bcie.com/ClienteService"
         xmlns:ns23="http://www.bcie.org/ClienteMO" xmlns:ns25="http://www.bcie.org/HerramientaCEBO"
         xmlns:ns24="http://www.bcie.org/DesembolsoBO">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <import namespace="http://xmlns.bcie.com/DeclaracionJuradaService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/DeclaracionJurada/V1/Wsdl/DeclaracionJurada.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://www.bcie.org/ContratoMO"
          location="oramds:/apps/Resources/ComponentesComunes/DominioContrato/Contrato/V1/Schema/ContratoMO.xsd"
          importType="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://www.bcie.org/ContratoService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioContrato/Contrato/V1/Wsdl/Contrato.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://schemas.oracle.com/bpel/extension" location="../WSDLs/RuntimeFault.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService"
          location="oramds:/apps/Resources/ComponentesComunes/DominioOperacion/Operacion/V1/Wsdl/ADAPTER/ConsultarOperacionByIdSAD.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/"/>
  <import namespace="http://xmlns.bcie.com/OperacionService" location="../WSDLs/ConsultarOperacionSORWrapper.wsdl"
          importType="http://schemas.xmlsoap.org/wsdl/" ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="consultaroperacion_client" partnerLinkType="ns1:ConsultarOperacion" myRole="ConsultarOperacionPT"/>
    <partnerLink name="ConsultarOperacionById" partnerLinkType="ns1:ConsultarOperacionById"
                 partnerRole="ConsultarOperacionById12Port"/>
    <partnerLink name="ConsultaContrato" partnerLinkType="ns18:ConsultaContrato" partnerRole="ContratoPT"/>
    <partnerLink name="ConsultarDeclaracionJurada" partnerLinkType="ns20:ConsultarDeclaracionJurada"
                 partnerRole="DeclaracionJuradaPT"/>
    <partnerLink name="ConsultarClienteById" partnerLinkType="ns22:ConsultarClienteById" partnerRole="ClientePT"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:requestConsultarOperacionMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:responseConsultarOperacionMessage"/>
    <variable name="setTittleVar" type="xsd:string"/>
    <variable name="InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable"
              messageType="ns1:responseConsultarOperacionMessage"/>
    <variable name="ConsultaContrato_consultaContrato_OutputVariable"
              messageType="ns18:ConsultaContratoResponseMessage"/>
    <variable name="outConsultarDeclaracionJuradaByIdOperacion"
              messageType="ns20:responseConsultarDeclaracionJuradaByIdOperacionMessage"/>
    <variable name="inConsultarClienteById" messageType="ns22:requestConsultarClienteMessageByIdCliente"/>
    <variable name="outConsultarClienteById" messageType="ns22:responseConsultarClienteMessage"/>
  </variables>
  <faultHandlers>
    <catch bpelx:name="BindingnFault" faultName="bpelx:bindingFault" faultVariable="BindingVar"
           faultMessageType="bpelx:RuntimeFaultMessage">
      <sequence name="Sequence3">
        <assign name="assignBindinFault">
          <copy>
            <from>$BindingVar.code</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:error/ns17:errorCode</to>
          </copy>
          <copy>
            <from>$BindingVar.summary</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:message</to>
          </copy>
          <copy>
            <from>$BindingVar.detail</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:error/ns17:errorDescription</to>
          </copy>
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:result</to>
          </copy>
        </assign>
        <reply name="ReplyBindingFault" partnerLink="consultaroperacion_client" portType="ns1:ConsultarOperacionPT"
               operation="consultarOperacion_pt" variable="outputVariable"/>
      </sequence>
    </catch>
    <catch bpelx:name="RemoteFault" faultName="bpelx:remoteFault" faultVariable="RemoteVar"
           faultMessageType="bpelx:RuntimeFaultMessage">
      <sequence name="Sequence2">
        <assign name="assigRemoteFault">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:result</to>
          </copy>
          <copy>
            <from>$RemoteVar.summary</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:message</to>
          </copy>
          <copy>
            <from>$RemoteVar.code</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:error/ns17:errorCode</to>
          </copy>
          <copy>
            <from>$RemoteVar.detail</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:error/ns17:errorDescription</to>
          </copy>
        </assign>
        <reply name="ReplyRemoteFault" partnerLink="consultaroperacion_client" portType="ns1:ConsultarOperacionPT"
               operation="consultarOperacion_pt" variable="outputVariable"/>
      </sequence>
    </catch>
    <catchAll>
      <sequence name="CatchAll">
        <assign name="assignError">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:result</to>
          </copy>
          <copy>
            <from>'Error en ConsultarOperacion'</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:message</to>
          </copy>
          <copy>
            <from>ora:getFaultAsString()</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:error/ns17:errorCode</to>
          </copy>
        </assign>
        <reply name="ReplyError" variable="outputVariable" partnerLink="consultaroperacion_client"
               portType="ns1:ConsultarOperacionPT" operation="consultarOperacion_pt"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ConsultarOperacion.wsdl) -->
    <receive name="receiveInput" partnerLink="consultaroperacion_client" portType="ns1:ConsultarOperacionPT" operation="consultarOperacion_pt" variable="inputVariable" createInstance="yes"/>
    <assign name="assignTittleVar">
      <copy>
        <from>oraext:setFlowInstanceTitle(concat("idOperacion = ", $inputVariable.request/ns2:idOperacion))</from>
        <to>$setTittleVar</to>
      </copy>
    </assign>
    <validate name="ValidateRequest" variables="inputVariable"/>
    <if name="IfNull">
      <documentation>
        <![CDATA[ifNull0]]>
      </documentation>
      <condition>string-length(string($inputVariable.request/ns2:idOperacion)) = 0 or $inputVariable.request/ns2:idOperacion = 0</condition>
      <sequence name="ifNull0">
        <assign name="assignError">
          <copy>
            <from>'ERROR'</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:result</to>
          </copy>
          <copy>
            <from>'El idOperacion no puede ser 0 o null'</from>
            <to>$outputVariable.response/ns2:Resultado/ns16:message</to>
          </copy>
        </assign>
        <reply name="ReplyNull0" variable="outputVariable" partnerLink="consultaroperacion_client"
               portType="ns1:ConsultarOperacionPT" operation="consultarOperacion_pt"/>
        <exit name="ExitNull"/>
      </sequence>
      <else>
        <documentation>
          <![CDATA[valorCorrecto]]>
        </documentation>
        <empty name="valorCorrecto"/>
      </else>
    </if>
    <scope name="ScopeConsultarOperacion">
      <variables>
        <variable name="inConsultarOperacion" messageType="ns1:requestConsultarOperacionMessage"/>
      </variables>
      <sequence name="ConsultarOperacionById">
        <assign name="assignIdOperacion">
          <copy>
            <from>$inputVariable.request/ns2:idOperacion</from>
            <to>$inConsultarOperacion.request/ns2:idOperacion</to>
          </copy>
        </assign>
        <invoke name="InvokeConsultarOperacion" bpelx:invokeAsDetail="no" partnerLink="ConsultarOperacionById"
                portType="ns1:ConsultarOperacionById12Port" operation="ConsultarOperacionById"
                inputVariable="inConsultarOperacion"
                outputVariable="InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable"/>
        <if name="IfError">
          <documentation>
            <![CDATA[errorConsulta]]>
          </documentation>
          <condition>$InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response/ns2:Resultado/ns16:error/ns17:errorCode = 'ERROR'</condition>
          <sequence name="SequenceErrorConsultarOperacion">
            <assign name="assignError">
              <copy>
                <from>$InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response/ns2:Resultado/ns16:error/ns17:errorCode</from>
                <to>$outputVariable.response/ns2:Resultado/ns16:result</to>
              </copy>
              <copy>
                <from>$InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response/ns2:Resultado/ns16:error/ns17:errorDescription</from>
                <to>$outputVariable.response/ns2:Resultado/ns16:message</to>
              </copy>
            </assign>
            <reply name="ReplyError" variable="outputVariable" partnerLink="consultaroperacion_client"
                   portType="ns1:ConsultarOperacionPT" operation="consultarOperacion_pt"/>
            <exit name="ExitError"/>
          </sequence>
          <else>
            <documentation>
              <![CDATA[consultaCorrecta]]>
            </documentation>
            <sequence name="Sequence4">
              <assign name="XQ_Operacion">
                <bpelx:annotation>
                  <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                </bpelx:annotation>
                <copy>
                  <from>ora:processXQuery10('../Transformations/XQ_Operacion.xqy', 'InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response', $InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response)</from>
                  <to variable="outputVariable" part="response"/>
                </copy>
              </assign>
            </sequence>
          </else>
        </if>
      </sequence>
    </scope>
    <scope name="ScopeConsultarDeclaracionJurada">
      <variables>
        <variable name="inConsultarDeclaracionJurada"
                  messageType="ns20:requestConsultarDeclaracionJuradaByIdOperacionMessage"/>
      </variables>
      <sequence name="ConsultarDeclaracionJurada">
        <assign name="assignIdOperacion">
          <copy>
            <from>$inputVariable.request/ns2:idOperacion</from>
            <to>$inConsultarDeclaracionJurada.request/ns21:idOperacion</to>
          </copy>
        </assign>
        <invoke name="ConsultarDeclaracionJuradaByIdOperacion"
                partnerLink="ConsultarDeclaracionJurada" portType="ns20:DeclaracionJuradaPT"
                operation="consultarDeclaracionJurada" inputVariable="inConsultarDeclaracionJurada"
                outputVariable="outConsultarDeclaracionJuradaByIdOperacion" bpelx:invokeAsDetail="no"/>
        <if name="IfError">
          <documentation>
            <![CDATA[consultaError]]>
          </documentation>
          <condition>$outConsultarDeclaracionJuradaByIdOperacion.response/ns21:Resultado/ns16:result = 'ERROR'</condition>
          <empty name="consultaError"/>
          <else>
            <documentation>
              <![CDATA[consultaCorrecta]]>
            </documentation>
            <assign name="XQ_OperacionJurada">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
              </bpelx:annotation>
              <copy>
                <from>ora:processXQuery10('../Transformations/XQ_OperacionJurada.xqy', 'InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response', $InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response, 'outConsultarDeclaracionJuradaByIdOperacion.response', $outConsultarDeclaracionJuradaByIdOperacion.response)</from>
                <to variable="outputVariable" part="response"/>
              </copy>
            </assign>
          </else>
        </if>
      </sequence>
    </scope>
    <if name="IfDetalleCliente">
      <documentation>
        <![CDATA[detalleCliente]]>
      </documentation>
      <condition>$inputVariable.request/ns2:infoDetalleCliente = 'true' and string-length($inputVariable.request/ns2:infoDetalleCliente) &gt; 0</condition>
      <sequence name="SequenceConsultarClienteById">
        <scope name="ScopeConsultarClienteById">
          <sequence name="SequenceConsultaCliente">
            <assign name="assignIdCliente">
              <copy>
                <from>$InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response/ns2:Operacion/ns3:cliente/ns4:idCliente</from>
                <to>$inConsultarClienteById.request/ns23:idCliente</to>
              </copy>
              <copy>
                <from>$InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response/ns2:Operacion/ns3:idOperacion</from>
                <to>$inConsultarClienteById.request/ns23:idOperacion</to>
              </copy>
              <copy>
                <from>'true'</from>
                <to>$inConsultarClienteById.request/ns23:infoMora</to>
              </copy>
              <copy>
                <from>'true'</from>
                <to>$inConsultarClienteById.request/ns23:infoDeterioro</to>
              </copy>
            </assign>
            <invoke name="ConsultarClienteById" bpelx:invokeAsDetail="no" partnerLink="ConsultarClienteById"
                    portType="ns22:ClientePT" operation="consultarByIdCliente" inputVariable="inConsultarClienteById"
                    outputVariable="outConsultarClienteById"/>
            <if name="IfError">
              <documentation>
                <![CDATA[errorConsulta]]>
              </documentation>
              <condition>$outConsultarClienteById.response/ns23:Resultado/ns16:result = 'ERROR'</condition>
              <sequence name="SequenceErrorConsultarCliente">
                <empty name="consultaError"/>
              </sequence>
              <else>
                <documentation>
                  <![CDATA[consultaCorrecta]]>
                </documentation>
                <sequence name="SequenceConsultarClienteCorrecto">
                  <assign name="XQ_OperacionJuradaCliente">
                    <bpelx:annotation>
                      <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                      <from>ora:processXQuery10('../Transformations/XQ_Operacion_DeclaracionJurada_DetalleCliente.xqy', 'InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response', $InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response, 'outConsultarClienteById.response', $outConsultarClienteById.response, 'outConsultarDeclaracionJuradaByIdOperacion.response', $outConsultarDeclaracionJuradaByIdOperacion.response)</from>
                      <to variable="outputVariable" part="response"/>
                    </copy>
                  </assign>
                </sequence>
              </else>
            </if>
          </sequence>
        </scope>
      </sequence>
      <else>
        <documentation>
          <![CDATA[sinDetalleCliente]]>
        </documentation>
        <sequence name="SequenceSinDetalleCliente">
          <empty name="sinDetalleCliente"/>
        </sequence>
      </else>
    </if>
    <if name="IfNivelDetalle">
      <documentation>
        <![CDATA[ifOperacion]]>
      </documentation>
      <condition>$inputVariable.request/ns2:nivelDetalle = 'OPERACION' or string-length($inputVariable.request/ns2:nivelDetalle) = 0</condition>
      <sequence>
        <sequence name="SequenceNivelOperacion">
          <empty name="Operacion"/>
        </sequence>
      </sequence>
      <else>
        <documentation>
          <![CDATA[ifContrato]]>
        </documentation>
        <sequence name="SequenceElseContrato">
          <scope name="ScopeConsultaContrato">
            <variables>
              <variable name="inConsultaContrato" messageType="ns18:ConsultaContratoRequestMessage"/>
              <variable name="montoFormalizado" type="xsd:int">
                <from>count($outputVariable.response/ns2:Operacion/ns3:montoOperacion/ns3:montoOperacion) + 1</from>
              </variable>
            </variables>
            <sequence name="ForEachConsultaContrato">
              <forEach parallel="no" counterName="Count" name="ForEachIdContrato">
                <startCounterValue>1</startCounterValue>
                <finalCounterValue>count($InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response/ns2:Operacion/ns3:contrato/ns8:idContrato)</finalCounterValue>
                <scope name="ScopeConsultaContratoLinea">
                  <sequence name="SequenceAssignResponseContratoLinea">
                    <assign name="assignIdContrato">
                      <copy>
                        <from>$InvokeConsultarOperacion_ConsultarOperacionById_OutputVariable.response/ns2:Operacion/ns3:contrato[$Count]/ns8:idContrato</from>
                        <to>$inConsultaContrato.ConsultaContratoRequest/ns19:idContrato</to>
                      </copy>
                      <copy>
                        <from>$inputVariable.request/ns2:nivelDetalle</from>
                        <to>$inConsultaContrato.ConsultaContratoRequest/ns19:nivelDetalle</to>
                      </copy>
                    </assign>
                    <invoke name="ConsultaContrato" partnerLink="ConsultaContrato" portType="ns18:ContratoPT"
                            operation="consultaContrato" inputVariable="inConsultaContrato"
                            outputVariable="ConsultaContrato_consultaContrato_OutputVariable"
                            bpelx:invokeAsDetail="no"/>
                    <assign name="assignResponse">
                      <copy bpelx:insertMissingToData="yes">
                        <from>ora:processXQuery10('../Transformations/XQ_ReponseOperacionContratoLinea.xqy','ContratoResponse',$ConsultaContrato_consultaContrato_OutputVariable.response)</from>
                        <to>$outputVariable.response/ns2:Operacion/ns3:contrato[$Count]</to>
                      </copy>
                    </assign>
                  </sequence>
                </scope>
              </forEach>
            </sequence>
          </scope>
        </sequence>
      </else>
    </if>
    <assign name="XQ_ResponseOut">
      <bpelx:annotation>
        <bpelx:pattern patternName="bpelx:xquery"></bpelx:pattern>
      </bpelx:annotation>
      <copy>
        <from>ora:processXQuery10('../Transformations/XQ_ResponseOut.xqy', 'outputVariable.response', $outputVariable.response)</from>
        <to variable="outputVariable" part="response"/>
      </copy>
    </assign>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="consultaroperacion_client" portType="ns1:ConsultarOperacionPT" operation="consultarOperacion_pt" variable="outputVariable"/>
  </sequence>
</process>